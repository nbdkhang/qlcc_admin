[{"D:\\DATN\\qlcc_old\\src\\index.js":"1","D:\\DATN\\qlcc_old\\src\\reportWebVitals.js":"2","D:\\DATN\\qlcc_old\\src\\component\\Main\\main.js":"3","D:\\DATN\\qlcc_old\\src\\component\\Homepage\\homepage.js":"4","D:\\DATN\\qlcc_old\\src\\component\\Login\\login.js":"5","D:\\DATN\\qlcc_old\\src\\MatxLayout\\Layout1\\Layout1.jsx":"6","D:\\DATN\\qlcc_old\\src\\MatxLayout\\Layout1\\Layout1Topbar.jsx":"7","D:\\DATN\\qlcc_old\\src\\MatxLayout\\Layout1\\Layout1Sidenav.jsx":"8","D:\\DATN\\qlcc_old\\src\\MatxLayout\\SharedCompoents\\Brand.jsx":"9","D:\\DATN\\qlcc_old\\src\\MatxLayout\\SharedCompoents\\Sidenav.jsx":"10","D:\\DATN\\qlcc_old\\src\\MatxLayout\\SharedCompoents\\NotificationBar.jsx":"11","D:\\DATN\\qlcc_old\\src\\MatxLayout\\SharedCompoents\\ShoppingCart.jsx":"12","D:\\DATN\\qlcc_old\\src\\MatxLayout\\MatxTheme\\SidenavTheme.jsx":"13","D:\\DATN\\qlcc_old\\src\\navigations.js":"14","D:\\DATN\\qlcc_old\\src\\redux\\actions\\NotificationActions.js":"15","D:\\DATN\\qlcc_old\\src\\appContext.js":"16","D:\\DATN\\qlcc_old\\src\\redux\\actions\\LayoutActions.js":"17","D:\\DATN\\qlcc_old\\src\\redux\\actions\\UserActions.js":"18","D:\\DATN\\qlcc_old\\src\\history.js":"19","D:\\DATN\\qlcc_2\\src\\index.js":"20","D:\\DATN\\qlcc_2\\src\\reportWebVitals.js":"21","D:\\DATN\\qlcc_2\\src\\view\\Main\\main.js":"22","D:\\DATN\\qlcc_2\\src\\view\\Homepage\\homepage.js":"23","D:\\DATN\\qlcc_2\\src\\layouts\\Layout.js":"24","D:\\DATN\\qlcc_2\\src\\view\\Login\\login.js":"25","D:\\DATN\\qlcc_2\\src\\component\\Navbars\\Navbar.js":"26","D:\\DATN\\qlcc_2\\src\\component\\Navbars\\AdminNavbarLinks.js":"27","D:\\DATN\\qlcc_2\\src\\component\\Sidebar\\Sidebar.js":"28","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\layouts\\adminStyle.js":"29","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react.js":"30","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\headerLinksStyle.js":"31","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\headerStyle.js":"32","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\sidebarStyle.js":"33","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\dropdownStyle.js":"34","D:\\DATN\\qlcc_2\\src\\component\\CustomButtons\\Button.js":"35","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\buttonStyle.js":"36","D:\\DATN\\qlcc_2\\src\\component\\CustomInput\\CustomInput.js":"37","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\customInputStyle.js":"38","D:\\DATN\\qlcc_2\\src\\routes.js":"39","D:\\DATN\\qlcc_2\\src\\view\\Bill\\Bill.js":"40","D:\\DATN\\qlcc_2\\src\\view\\Profile\\profile.js":"41","D:\\DATN\\qlcc_2\\src\\view\\Bill\\bill.js":"42","D:\\DATN\\qlcc_2\\src\\component\\TableList\\TableList.js":"43","D:\\DATN\\qlcc_2\\src\\component\\Grid\\GridContainer.js":"44","D:\\DATN\\qlcc_2\\src\\component\\Grid\\GridItem.js":"45","D:\\DATN\\qlcc_2\\src\\component\\Table\\Table.js":"46","D:\\DATN\\qlcc_2\\src\\component\\Card\\Card.js":"47","D:\\DATN\\qlcc_2\\src\\component\\Card\\CardHeader.js":"48","D:\\DATN\\qlcc_2\\src\\component\\Card\\CardBody.js":"49","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"50","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"51","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\cardStyle.js":"52","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\tableStyle.js":"53","D:\\DATN\\qlcc_2\\src\\store.js":"54","D:\\DATN\\qlcc_2\\src\\redux\\reducer\\rootReducer.js":"55","D:\\DATN\\qlcc_2\\src\\redux\\reducer\\user.js":"56","D:\\DATN\\qlcc_2\\src\\component\\CustomTabs\\CustomTabs.js":"57","D:\\DATN\\qlcc_2\\src\\component\\Tasks\\Tasks.js":"58","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\tasksStyle.js":"59","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\checkboxAdnRadioStyle.js":"60","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\tooltipStyle.js":"61","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\customTabsStyle.js":"62","D:\\DATN\\qlcc_2\\src\\redux\\action\\userAction.js":"63","D:\\DATN\\qlcc_2\\src\\component\\Navbars\\LoginBar.js":"64","D:\\DATN\\qlcc_2\\src\\component\\CustomButtons\\DropdownButton.js":"65","D:\\DATN\\qlcc_2\\src\\view\\Bill\\billService.js":"66","D:\\DATN\\qlcc_2\\src\\component\\Card\\CardAvatar.js":"67","D:\\DATN\\qlcc_2\\src\\component\\Card\\CardFooter.js":"68","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\cardAvatarStyle.js":"69","D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\cardFooterStyle.js":"70","D:\\DATN\\qlcc_2\\src\\view\\Profile\\changeProfile.js":"71","D:\\DATN\\qlcc_2\\src\\view\\Profile\\changePassword.js":"72","D:\\DATN\\qlcc_2\\src\\view\\Profile\\serviceProfile.js":"73","D:\\DATN\\qlcc_2_admin\\src\\index.js":"74","D:\\DATN\\qlcc_2_admin\\src\\reportWebVitals.js":"75","D:\\DATN\\qlcc_2_admin\\src\\store.js":"76","D:\\DATN\\qlcc_2_admin\\src\\view\\Main\\main.js":"77","D:\\DATN\\qlcc_2_admin\\src\\redux\\reducer\\rootReducer.js":"78","D:\\DATN\\qlcc_2_admin\\src\\view\\Login\\login.js":"79","D:\\DATN\\qlcc_2_admin\\src\\layouts\\Layout.js":"80","D:\\DATN\\qlcc_2_admin\\src\\redux\\reducer\\user.js":"81","D:\\DATN\\qlcc_2_admin\\src\\routes.js":"82","D:\\DATN\\qlcc_2_admin\\src\\component\\Sidebar\\Sidebar.js":"83","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\layouts\\adminStyle.js":"84","D:\\DATN\\qlcc_2_admin\\src\\redux\\action\\userAction.js":"85","D:\\DATN\\qlcc_2_admin\\src\\component\\Navbars\\Navbar.js":"86","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\bill.js":"87","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\sidebarStyle.js":"88","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react.js":"89","D:\\DATN\\qlcc_2_admin\\src\\view\\Profile\\profile.js":"90","D:\\DATN\\qlcc_2_admin\\src\\component\\Navbars\\AdminNavbarLinks.js":"91","D:\\DATN\\qlcc_2_admin\\src\\component\\Navbars\\LoginBar.js":"92","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\headerStyle.js":"93","D:\\DATN\\qlcc_2_admin\\src\\component\\CustomButtons\\Button.js":"94","D:\\DATN\\qlcc_2_admin\\src\\component\\Grid\\GridItem.js":"95","D:\\DATN\\qlcc_2_admin\\src\\component\\TableList\\TableList.js":"96","D:\\DATN\\qlcc_2_admin\\src\\component\\Grid\\GridContainer.js":"97","D:\\DATN\\qlcc_2_admin\\src\\view\\Profile\\changeProfile.js":"98","D:\\DATN\\qlcc_2_admin\\src\\component\\CustomButtons\\DropdownButton.js":"99","D:\\DATN\\qlcc_2_admin\\src\\component\\Card\\CardAvatar.js":"100","D:\\DATN\\qlcc_2_admin\\src\\component\\Card\\Card.js":"101","D:\\DATN\\qlcc_2_admin\\src\\component\\Tasks\\Tasks.js":"102","D:\\DATN\\qlcc_2_admin\\src\\component\\Card\\CardBody.js":"103","D:\\DATN\\qlcc_2_admin\\src\\component\\CustomTabs\\CustomTabs.js":"104","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\buttonStyle.js":"105","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\headerLinksStyle.js":"106","D:\\DATN\\qlcc_2_admin\\src\\component\\CustomInput\\CustomInput.js":"107","D:\\DATN\\qlcc_2_admin\\src\\view\\Profile\\changePassword.js":"108","D:\\DATN\\qlcc_2_admin\\src\\view\\Profile\\serviceProfile.js":"109","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\cardAvatarStyle.js":"110","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\cardStyle.js":"111","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\tasksStyle.js":"112","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"113","D:\\DATN\\qlcc_2_admin\\src\\component\\Card\\CardHeader.js":"114","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\customTabsStyle.js":"115","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\customInputStyle.js":"116","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\dropdownStyle.js":"117","D:\\DATN\\qlcc_2_admin\\src\\component\\Table\\Table.js":"118","D:\\DATN\\qlcc_2_admin\\src\\component\\Card\\CardFooter.js":"119","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\tooltipStyle.js":"120","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"121","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\cardFooterStyle.js":"122","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\checkboxAdnRadioStyle.js":"123","D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\tableStyle.js":"124","D:\\DATN\\qlcc_2_admin\\src\\view\\Login\\ServiceLogin.js":"125","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\UserAccount.js":"126","D:\\DATN\\qlcc_2_admin\\src\\view\\AdminAccount\\AdminAccount.js":"127","D:\\DATN\\qlcc_2_admin\\src\\view\\AdminAccount\\ServiceAdminAccount.js":"128","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\ListUserAccount\\ServiceUserAccount.js":"129","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\ListUserAccount\\ListUserAccount.js":"130","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\AddUserAccount\\AddUserAccount.js":"131","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\AddUserAccount\\ServiceAddUserAccount.js":"132","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\Bill.js":"133","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ElectricBill\\ElectricBill.js":"134","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ElectricBill\\ServiceElectricBill.js":"135","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\BillService.js":"136","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\DetailUser\\DetailUser.js":"137","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\DetailUser\\InfoUser.js":"138","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\WaterBill\\WaterBill.js":"139","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\WaterBill\\ServiceWaterBill.js":"140","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\OtherBill\\OtherBill.js":"141","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\OtherBill\\ServiceOtherBill.js":"142","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ImportBill\\ImportBill.js":"143","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ImportBill\\ImportBillService.js":"144","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\AllBill\\AllBill.js":"145","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\AllBill\\ServiceAllBill.js":"146","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ReportBill\\ReportBill.js":"147","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ReportBill\\NewReport.js":"148","D:\\DATN\\qlcc_2_admin\\src\\component\\Dialog\\AlertDialogSlide.js":"149","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ReportBill\\ServiceReportBill.js":"150","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ReportBill\\HandledReport.js":"151","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ReportBill\\DetailReport.js":"152","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ImportBill\\DialogTable.js":"153","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\AllBill\\DetailAllBill.js":"154","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\ListApart\\ListApart.js":"155","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\ListApart\\ServiceListApart.js":"156","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\Apart.js":"157","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\AddApart\\AddApart.js":"158","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\AddApart\\ServiceAddApart.js":"159","D:\\DATN\\qlcc_2_admin\\src\\view\\Block\\Block.js":"160","D:\\DATN\\qlcc_2_admin\\src\\view\\Block\\ListBlock\\ListBlock.js":"161","D:\\DATN\\qlcc_2_admin\\src\\view\\Block\\AddBlock\\AddBlock.js":"162","D:\\DATN\\qlcc_2_admin\\src\\view\\Block\\ListBlock\\ServiceListBlock.js":"163","D:\\DATN\\qlcc_2_admin\\src\\view\\Block\\AddBlock\\ServiceAddBlock.js":"164","D:\\DATN\\qlcc_2_admin\\src\\view\\Block\\DetailBlock\\EditBlock.js":"165","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\PublicArea\\PublicArea.js":"166","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\Repair\\Repair.js":"167","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestRepair\\RequestRepair.js":"168","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\PublicArea\\ListPublicArea.js":"169","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\ServiceRepair.js":"170","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestRepair\\ListRequestRepair.js":"171","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestSelfRepair\\ListRequestSelfRepair.js":"172","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestSelfRepair\\RequestSelfRepair.js":"173","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\PublicArea\\DetailPublicArea.js":"174","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\ServiceDetail.js":"175","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestRepair\\DetailRequestRepair.js":"176","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestSelfRepair\\DetailRequestSelfRepair.js":"177","D:\\DATN\\qlcc_2_admin\\src\\view\\Parking\\Parking.js":"178","D:\\DATN\\qlcc_2_admin\\src\\view\\Parking\\ListParking\\ListParking.js":"179","D:\\DATN\\qlcc_2_admin\\src\\view\\Parking\\DetailParking\\DetailParking.js":"180","D:\\DATN\\qlcc_2_admin\\src\\view\\Parking\\ListParking\\ServiceListParking.js":"181","D:\\DATN\\qlcc_2_admin\\src\\view\\Parking\\DetailParking\\ServiceDetailParking.js":"182","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\AllBill\\ServiceDetailAllBill.js":"183","D:\\DATN\\qlcc_2_admin\\src\\view\\Test.js":"184","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\SendNotification.js":"185","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\CreateNotification\\CreateNotification.js":"186","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\CreateNotification\\ServiceCreateNotification.js":"187","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\DetailApart.js":"188","D:\\DATN\\qlcc_2_admin\\src\\view\\ServicePlace\\ListServicePlace\\ListServicePlace.js":"189","D:\\DATN\\qlcc_2_admin\\src\\view\\ServicePlace\\ServicePlace.js":"190","D:\\DATN\\qlcc_2_admin\\src\\view\\ServicePlace\\AddServicePlace\\AddServicePlace.js":"191","D:\\DATN\\qlcc_2_admin\\src\\view\\ServicePlace\\ListServicePlace\\ServiceLisServicetPlace.js":"192","D:\\DATN\\qlcc_2_admin\\src\\view\\ServiceRegister\\ServiceRegister.js":"193","D:\\DATN\\qlcc_2_admin\\src\\view\\ServiceRegister\\ListRegister\\ListRegister.js":"194","D:\\DATN\\qlcc_2_admin\\src\\view\\ServiceRegister\\ListRegister\\ServiceListRegister.js":"195","D:\\DATN\\qlcc_2_admin\\src\\view\\ServiceRegister\\ListRegister\\LoadPlace.js":"196","D:\\DATN\\qlcc_2_admin\\src\\view\\ServiceRegister\\ListAccepted\\ListAccepted.js":"197","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\CreateNotification\\Block\\BlockNotification.js":"198","D:\\DATN\\qlcc_2_admin\\src\\view\\BrowsePost\\BrowsePost.js":"199","D:\\DATN\\qlcc_2_admin\\src\\view\\BrowsePost\\ListBrowsePost\\ListBrowsePost.js":"200","D:\\DATN\\qlcc_2_admin\\src\\view\\BrowsePost\\ListBrowsePost\\ServiceListBrowsePost.js":"201","D:\\DATN\\qlcc_2_admin\\src\\view\\BrowsePost\\DetailBrowsePost\\DetailBrowsePost.js":"202","D:\\DATN\\qlcc_2_admin\\src\\view\\BrowsePost\\DetailBrowsePost\\ServiceDetailBrowsePost.js.js":"203","D:\\DATN\\qlcc_2_admin\\src\\component\\SlideShow\\SlideShow.js":"204","D:\\DATN\\qlcc_2_admin\\src\\view\\BrowsePost\\AcceptedBrowsePost\\AcceptedBrowsePost.js":"205","D:\\DATN\\qlcc_2_admin\\src\\firebase.js":"206","D:\\DATN\\qlcc_2_admin\\src\\notifications.js":"207","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\ServiceDetailApart.js":"208","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\InfoApart\\InfoApart.js":"209","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\APIDetailApart.js":"210","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\Edit.js":"211","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\EditApart\\EditApart.js":"212","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\EditApart\\ServiceEditApart.js":"213","D:\\DATN\\qlcc_2_admin\\src\\component\\SnackBar\\Snackbar.js":"214","D:\\DATN\\qlcc_2_admin\\src\\component\\CustomLoadingOverlay\\CustomLoadingOverlay.js":"215","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\EditOwner\\EditOwner.js":"216","D:\\DATN\\qlcc_2_admin\\src\\component\\SearchTextField\\SearchTextField.js":"217","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\DetailUser\\EditUser.js":"218","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\DetailUser\\SearchApart.js":"219","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\DetailUser\\ServiceEditUser.js":"220","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\ListNotification\\ListNotification.js":"221","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\ListNotification\\ServiceListNotification.js":"222","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\CreateNotification\\Floor\\FloorNotifications.js":"223","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\CreateNotification\\SearchApart.js":"224","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestSelfRepair\\ServiceDetailRequestSelfRepair.js":"225","D:\\DATN\\qlcc_2_admin\\src\\view\\AdminAccount\\ListAdminAccount.js":"226","D:\\DATN\\qlcc_2_admin\\src\\view\\AdminAccount\\AddAdminAccount.js":"227","D:\\DATN\\qlcc_2_admin\\src\\view\\pushNotiAdmin.js":"228","D:\\DATN\\qlcc_2_admin\\src\\view\\PushNotiAdmin.js":"229","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\CreateNotification\\Apart\\ApartNotifications.js":"230","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\ListApart\\ListApartNotApp.js":"231","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\DetailNotification\\DetailNotification.js":"232","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\DetailNotification\\ServiceDetailNotification.js":"233","D:\\DATN\\qlcc_2_admin\\src\\privateRouter.js":"234"},{"size":518,"mtime":1614759804253,"results":"235","hashOfConfig":"236"},{"size":362,"mtime":499162500000,"results":"237","hashOfConfig":"236"},{"size":1067,"mtime":1614760076774,"results":"238","hashOfConfig":"236"},{"size":121,"mtime":1612431930899,"results":"239","hashOfConfig":"236"},{"size":99,"mtime":1612431939045,"results":"240","hashOfConfig":"236"},{"size":3425,"mtime":1614760501766,"results":"241","hashOfConfig":"236"},{"size":5074,"mtime":1614760787579,"results":"242","hashOfConfig":"236"},{"size":5610,"mtime":1614760768775,"results":"243","hashOfConfig":"236"},{"size":448,"mtime":1614759284045,"results":"244","hashOfConfig":"236"},{"size":1709,"mtime":1614760777799,"results":"245","hashOfConfig":"236"},{"size":4600,"mtime":1614760348712,"results":"246","hashOfConfig":"236"},{"size":4178,"mtime":1614760460153,"results":"247","hashOfConfig":"236"},{"size":1642,"mtime":1614759284040,"results":"248","hashOfConfig":"236"},{"size":4072,"mtime":1614759760610,"results":"249","hashOfConfig":"236"},{"size":1162,"mtime":1614760933480,"results":"250","hashOfConfig":"236"},{"size":100,"mtime":1614759760580,"results":"251","hashOfConfig":"236"},{"size":389,"mtime":1614760653877,"results":"252","hashOfConfig":"236"},{"size":593,"mtime":1614760954247,"results":"253","hashOfConfig":"236"},{"size":87,"mtime":1614759772577,"results":"254","hashOfConfig":"236"},{"size":629,"mtime":1614872439482,"results":"255","hashOfConfig":"256"},{"size":362,"mtime":499162500000,"results":"257","hashOfConfig":"256"},{"size":1017,"mtime":1616603227052,"results":"258","hashOfConfig":"256"},{"size":403,"mtime":1617021589971,"results":"259","hashOfConfig":"256"},{"size":4171,"mtime":1616568059124,"results":"260","hashOfConfig":"256"},{"size":5705,"mtime":1617022929112,"results":"261","hashOfConfig":"256"},{"size":2474,"mtime":1615969963920,"results":"262","hashOfConfig":"256"},{"size":8213,"mtime":1617034567999,"results":"263","hashOfConfig":"256"},{"size":5324,"mtime":1614766279115,"results":"264","hashOfConfig":"256"},{"size":652,"mtime":1614764060365,"results":"265","hashOfConfig":"256"},{"size":7001,"mtime":1614764114843,"results":"266","hashOfConfig":"256"},{"size":2422,"mtime":1614764494605,"results":"267","hashOfConfig":"256"},{"size":1544,"mtime":1614764278286,"results":"268","hashOfConfig":"256"},{"size":6720,"mtime":1614764455285,"results":"269","hashOfConfig":"256"},{"size":2919,"mtime":1614764544342,"results":"270","hashOfConfig":"256"},{"size":1675,"mtime":1614764842532,"results":"271","hashOfConfig":"256"},{"size":8314,"mtime":1614764829973,"results":"272","hashOfConfig":"256"},{"size":2238,"mtime":1614764926444,"results":"273","hashOfConfig":"256"},{"size":1329,"mtime":1614764948244,"results":"274","hashOfConfig":"256"},{"size":2106,"mtime":1616572182514,"results":"275","hashOfConfig":"256"},{"size":328,"mtime":1614769066851,"results":"276","hashOfConfig":"256"},{"size":3258,"mtime":1617034140911,"results":"277","hashOfConfig":"256"},{"size":2330,"mtime":1616570934576,"results":"278","hashOfConfig":"256"},{"size":2562,"mtime":1616568729781,"results":"279","hashOfConfig":"256"},{"size":651,"mtime":1614789934297,"results":"280","hashOfConfig":"256"},{"size":616,"mtime":1614789934312,"results":"281","hashOfConfig":"256"},{"size":2195,"mtime":1614790373102,"results":"282","hashOfConfig":"256"},{"size":1049,"mtime":1614790330949,"results":"283","hashOfConfig":"256"},{"size":1257,"mtime":1614790253658,"results":"284","hashOfConfig":"256"},{"size":1017,"mtime":1614790234613,"results":"285","hashOfConfig":"256"},{"size":298,"mtime":1614763807731,"results":"286","hashOfConfig":"256"},{"size":2958,"mtime":1614790319846,"results":"287","hashOfConfig":"256"},{"size":797,"mtime":1614790340830,"results":"288","hashOfConfig":"256"},{"size":1423,"mtime":1614790382518,"results":"289","hashOfConfig":"256"},{"size":813,"mtime":1615992896757,"results":"290","hashOfConfig":"256"},{"size":196,"mtime":1615988479472,"results":"291","hashOfConfig":"256"},{"size":939,"mtime":1617021725227,"results":"292","hashOfConfig":"256"},{"size":2721,"mtime":1615908509822,"results":"293","hashOfConfig":"256"},{"size":3653,"mtime":1615907271988,"results":"294","hashOfConfig":"256"},{"size":1217,"mtime":1615908405606,"results":"295","hashOfConfig":"256"},{"size":1040,"mtime":1615908369312,"results":"296","hashOfConfig":"256"},{"size":877,"mtime":1615908382427,"results":"297","hashOfConfig":"256"},{"size":1518,"mtime":1615908461832,"results":"298","hashOfConfig":"256"},{"size":460,"mtime":1616601531967,"results":"299","hashOfConfig":"256"},{"size":204,"mtime":1615970000768,"results":"300","hashOfConfig":"256"},{"size":2720,"mtime":1616567852704,"results":"301","hashOfConfig":"256"},{"size":2368,"mtime":1616570490997,"results":"302","hashOfConfig":"256"},{"size":1044,"mtime":1616590478891,"results":"303","hashOfConfig":"256"},{"size":1173,"mtime":1616591097948,"results":"304","hashOfConfig":"256"},{"size":718,"mtime":1616590572286,"results":"305","hashOfConfig":"256"},{"size":1041,"mtime":1616591135679,"results":"306","hashOfConfig":"256"},{"size":6512,"mtime":1617035090694,"results":"307","hashOfConfig":"256"},{"size":3362,"mtime":1616600063320,"results":"308","hashOfConfig":"256"},{"size":1057,"mtime":1617028325441,"results":"309","hashOfConfig":"256"},{"size":673,"mtime":1622972297713,"results":"310","hashOfConfig":"311"},{"size":362,"mtime":499162500000,"results":"312","hashOfConfig":"311"},{"size":813,"mtime":1615992896757,"results":"313","hashOfConfig":"311"},{"size":1498,"mtime":1624714146762,"results":"314","hashOfConfig":"311"},{"size":196,"mtime":1615988479472,"results":"315","hashOfConfig":"311"},{"size":7115,"mtime":1624892500292,"results":"316","hashOfConfig":"311"},{"size":4270,"mtime":1624700249747,"results":"317","hashOfConfig":"311"},{"size":1160,"mtime":1617726920520,"results":"318","hashOfConfig":"311"},{"size":16823,"mtime":1624700401375,"results":"319","hashOfConfig":"311"},{"size":6688,"mtime":1624714005694,"results":"320","hashOfConfig":"311"},{"size":652,"mtime":1614764060365,"results":"321","hashOfConfig":"311"},{"size":644,"mtime":1617726931551,"results":"322","hashOfConfig":"311"},{"size":2466,"mtime":1617726680958,"results":"323","hashOfConfig":"311"},{"size":2330,"mtime":1616570934576,"results":"324","hashOfConfig":"311"},{"size":6720,"mtime":1614764455285,"results":"325","hashOfConfig":"311"},{"size":7001,"mtime":1614764114843,"results":"326","hashOfConfig":"311"},{"size":3223,"mtime":1624608374413,"results":"327","hashOfConfig":"311"},{"size":13818,"mtime":1624764823691,"results":"328","hashOfConfig":"311"},{"size":199,"mtime":1624375985794,"results":"329","hashOfConfig":"311"},{"size":1544,"mtime":1614764278286,"results":"330","hashOfConfig":"311"},{"size":1675,"mtime":1614764842532,"results":"331","hashOfConfig":"311"},{"size":616,"mtime":1614789934312,"results":"332","hashOfConfig":"311"},{"size":2562,"mtime":1616568729781,"results":"333","hashOfConfig":"311"},{"size":651,"mtime":1614789934297,"results":"334","hashOfConfig":"311"},{"size":10455,"mtime":1624853750556,"results":"335","hashOfConfig":"311"},{"size":1246,"mtime":1618416319901,"results":"336","hashOfConfig":"311"},{"size":1044,"mtime":1616590478891,"results":"337","hashOfConfig":"311"},{"size":1049,"mtime":1614790330949,"results":"338","hashOfConfig":"311"},{"size":3653,"mtime":1615907271988,"results":"339","hashOfConfig":"311"},{"size":1017,"mtime":1614790234613,"results":"340","hashOfConfig":"311"},{"size":2721,"mtime":1615908509822,"results":"341","hashOfConfig":"311"},{"size":8314,"mtime":1614764829973,"results":"342","hashOfConfig":"311"},{"size":2996,"mtime":1624438591192,"results":"343","hashOfConfig":"311"},{"size":2238,"mtime":1614764926444,"results":"344","hashOfConfig":"311"},{"size":8076,"mtime":1624766436612,"results":"345","hashOfConfig":"311"},{"size":1057,"mtime":1617028325441,"results":"346","hashOfConfig":"311"},{"size":718,"mtime":1616590572286,"results":"347","hashOfConfig":"311"},{"size":797,"mtime":1614790340830,"results":"348","hashOfConfig":"311"},{"size":1217,"mtime":1615908405606,"results":"349","hashOfConfig":"311"},{"size":298,"mtime":1614763807731,"results":"350","hashOfConfig":"311"},{"size":1257,"mtime":1614790253658,"results":"351","hashOfConfig":"311"},{"size":1518,"mtime":1615908461832,"results":"352","hashOfConfig":"311"},{"size":1329,"mtime":1614764948244,"results":"353","hashOfConfig":"311"},{"size":2919,"mtime":1614764544342,"results":"354","hashOfConfig":"311"},{"size":2195,"mtime":1614790373102,"results":"355","hashOfConfig":"311"},{"size":1173,"mtime":1616591097948,"results":"356","hashOfConfig":"311"},{"size":877,"mtime":1615908382427,"results":"357","hashOfConfig":"311"},{"size":2958,"mtime":1614790319846,"results":"358","hashOfConfig":"311"},{"size":1041,"mtime":1616591135679,"results":"359","hashOfConfig":"311"},{"size":1040,"mtime":1615908369312,"results":"360","hashOfConfig":"311"},{"size":1423,"mtime":1614790382518,"results":"361","hashOfConfig":"311"},{"size":65,"mtime":1617682041417,"results":"362","hashOfConfig":"311"},{"size":1110,"mtime":1624635414838,"results":"363","hashOfConfig":"311"},{"size":1284,"mtime":1624428731606,"results":"364","hashOfConfig":"311"},{"size":480,"mtime":1624420394264,"results":"365","hashOfConfig":"311"},{"size":744,"mtime":1621580252016,"results":"366","hashOfConfig":"311"},{"size":7223,"mtime":1624608290875,"results":"367","hashOfConfig":"311"},{"size":15395,"mtime":1624853802228,"results":"368","hashOfConfig":"311"},{"size":926,"mtime":1624263564083,"results":"369","hashOfConfig":"311"},{"size":4523,"mtime":1624333945877,"results":"370","hashOfConfig":"311"},{"size":6561,"mtime":1624356557357,"results":"371","hashOfConfig":"311"},{"size":2050,"mtime":1624356349297,"results":"372","hashOfConfig":"311"},{"size":938,"mtime":1624190846504,"results":"373","hashOfConfig":"311"},{"size":6267,"mtime":1624628738518,"results":"374","hashOfConfig":"311"},{"size":4548,"mtime":1624451421909,"results":"375","hashOfConfig":"311"},{"size":6439,"mtime":1624356608958,"results":"376","hashOfConfig":"311"},{"size":2220,"mtime":1624356671463,"results":"377","hashOfConfig":"311"},{"size":6695,"mtime":1624356625911,"results":"378","hashOfConfig":"311"},{"size":2853,"mtime":1624356656119,"results":"379","hashOfConfig":"311"},{"size":17652,"mtime":1624285054303,"results":"380","hashOfConfig":"311"},{"size":3395,"mtime":1624190851298,"results":"381","hashOfConfig":"311"},{"size":11489,"mtime":1624852881029,"results":"382","hashOfConfig":"311"},{"size":2606,"mtime":1624355976060,"results":"383","hashOfConfig":"311"},{"size":1056,"mtime":1624091834234,"results":"384","hashOfConfig":"311"},{"size":4889,"mtime":1624356800008,"results":"385","hashOfConfig":"311"},{"size":2041,"mtime":1619627295348,"results":"386","hashOfConfig":"311"},{"size":1479,"mtime":1624356821920,"results":"387","hashOfConfig":"311"},{"size":6974,"mtime":1624356847701,"results":"388","hashOfConfig":"311"},{"size":17993,"mtime":1624853102457,"results":"389","hashOfConfig":"311"},{"size":374,"mtime":1620577228602,"results":"390","hashOfConfig":"311"},{"size":17556,"mtime":1624852839002,"results":"391","hashOfConfig":"311"},{"size":5216,"mtime":1624852060334,"results":"392","hashOfConfig":"311"},{"size":947,"mtime":1624695475245,"results":"393","hashOfConfig":"311"},{"size":2294,"mtime":1624680509821,"results":"394","hashOfConfig":"311"},{"size":14954,"mtime":1621930412529,"results":"395","hashOfConfig":"311"},{"size":324,"mtime":1621671466969,"results":"396","hashOfConfig":"311"},{"size":1145,"mtime":1624123074135,"results":"397","hashOfConfig":"311"},{"size":4395,"mtime":1624852122497,"results":"398","hashOfConfig":"311"},{"size":3804,"mtime":1621151782462,"results":"399","hashOfConfig":"311"},{"size":350,"mtime":1621151353227,"results":"400","hashOfConfig":"311"},{"size":363,"mtime":1621150694864,"results":"401","hashOfConfig":"311"},{"size":7708,"mtime":1624695849873,"results":"402","hashOfConfig":"311"},{"size":3008,"mtime":1621428709870,"results":"403","hashOfConfig":"311"},{"size":2420,"mtime":1621356927357,"results":"404","hashOfConfig":"311"},{"size":2914,"mtime":1621358087986,"results":"405","hashOfConfig":"311"},{"size":6345,"mtime":1624681366925,"results":"406","hashOfConfig":"311"},{"size":1185,"mtime":1624681199574,"results":"407","hashOfConfig":"311"},{"size":6285,"mtime":1624681428613,"results":"408","hashOfConfig":"311"},{"size":6213,"mtime":1624681476046,"results":"409","hashOfConfig":"311"},{"size":2959,"mtime":1624633483077,"results":"410","hashOfConfig":"311"},{"size":12185,"mtime":1624637747887,"results":"411","hashOfConfig":"311"},{"size":938,"mtime":1621435836903,"results":"412","hashOfConfig":"311"},{"size":17977,"mtime":1624674797524,"results":"413","hashOfConfig":"311"},{"size":15896,"mtime":1624675583950,"results":"414","hashOfConfig":"311"},{"size":1811,"mtime":1621418487932,"results":"415","hashOfConfig":"311"},{"size":6456,"mtime":1624682274262,"results":"416","hashOfConfig":"311"},{"size":17520,"mtime":1624765489112,"results":"417","hashOfConfig":"311"},{"size":1459,"mtime":1624682070843,"results":"418","hashOfConfig":"311"},{"size":946,"mtime":1621433067244,"results":"419","hashOfConfig":"311"},{"size":816,"mtime":1624353322655,"results":"420","hashOfConfig":"311"},{"size":3628,"mtime":1621565795683,"results":"421","hashOfConfig":"311"},{"size":2276,"mtime":1624266899693,"results":"422","hashOfConfig":"311"},{"size":18300,"mtime":1624891181383,"results":"423","hashOfConfig":"311"},{"size":976,"mtime":1624676717730,"results":"424","hashOfConfig":"311"},{"size":5082,"mtime":1624183893146,"results":"425","hashOfConfig":"311"},{"size":4845,"mtime":1624444015117,"results":"426","hashOfConfig":"311"},{"size":2270,"mtime":1621933219799,"results":"427","hashOfConfig":"311"},{"size":12808,"mtime":1624444679163,"results":"428","hashOfConfig":"311"},{"size":863,"mtime":1622186184095,"results":"429","hashOfConfig":"311"},{"size":2008,"mtime":1622361620694,"results":"430","hashOfConfig":"311"},{"size":15448,"mtime":1624639319677,"results":"431","hashOfConfig":"311"},{"size":3374,"mtime":1622384898958,"results":"432","hashOfConfig":"311"},{"size":4279,"mtime":1622796807813,"results":"433","hashOfConfig":"311"},{"size":5653,"mtime":1624639206261,"results":"434","hashOfConfig":"311"},{"size":3004,"mtime":1624675952803,"results":"435","hashOfConfig":"311"},{"size":2040,"mtime":1622798457280,"results":"436","hashOfConfig":"311"},{"size":5426,"mtime":1624370167970,"results":"437","hashOfConfig":"311"},{"size":973,"mtime":1622468271692,"results":"438","hashOfConfig":"311"},{"size":16126,"mtime":1624765863464,"results":"439","hashOfConfig":"311"},{"size":811,"mtime":1622649001810,"results":"440","hashOfConfig":"311"},{"size":943,"mtime":1624627946247,"results":"441","hashOfConfig":"311"},{"size":4710,"mtime":1624369506671,"results":"442","hashOfConfig":"311"},{"size":1838,"mtime":1624287010752,"results":"443","hashOfConfig":"311"},{"size":2107,"mtime":1622971430955,"results":"444","hashOfConfig":"311"},{"size":615,"mtime":1624183708396,"results":"445","hashOfConfig":"311"},{"size":7228,"mtime":1624445149394,"results":"446","hashOfConfig":"311"},{"size":2921,"mtime":1624200430906,"results":"447","hashOfConfig":"311"},{"size":2059,"mtime":1624695336876,"results":"448","hashOfConfig":"311"},{"size":13909,"mtime":1624127931478,"results":"449","hashOfConfig":"311"},{"size":658,"mtime":1623928213918,"results":"450","hashOfConfig":"311"},{"size":973,"mtime":1624617391792,"results":"451","hashOfConfig":"311"},{"size":300,"mtime":1624037895086,"results":"452","hashOfConfig":"311"},{"size":11244,"mtime":1624695325336,"results":"453","hashOfConfig":"311"},{"size":2329,"mtime":1624185462634,"results":"454","hashOfConfig":"311"},{"size":7033,"mtime":1624263214802,"results":"455","hashOfConfig":"311"},{"size":1197,"mtime":1624266257906,"results":"456","hashOfConfig":"311"},{"size":502,"mtime":1624252059486,"results":"457","hashOfConfig":"311"},{"size":7099,"mtime":1624697680631,"results":"458","hashOfConfig":"311"},{"size":564,"mtime":1624680762272,"results":"459","hashOfConfig":"311"},{"size":1923,"mtime":1624852636958,"results":"460","hashOfConfig":"311"},{"size":1196,"mtime":1624678875964,"results":"461","hashOfConfig":"311"},{"size":1107,"mtime":1624364083638,"results":"462","hashOfConfig":"311"},{"size":7295,"mtime":1624609428224,"results":"463","hashOfConfig":"311"},{"size":12626,"mtime":1624853829920,"results":"464","hashOfConfig":"311"},{"size":1383,"mtime":1624635370864,"results":"465","hashOfConfig":"311"},{"size":1383,"mtime":1624635370864,"results":"466","hashOfConfig":"311"},{"size":1820,"mtime":1624852558322,"results":"467","hashOfConfig":"311"},{"size":5166,"mtime":1624695610700,"results":"468","hashOfConfig":"311"},{"size":11032,"mtime":1624699186598,"results":"469","hashOfConfig":"311"},{"size":863,"mtime":1624698218622,"results":"470","hashOfConfig":"311"},{"size":564,"mtime":1624714183570,"results":"471","hashOfConfig":"311"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},"1040uil",{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"474"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"474"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},"191s2j8",{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"514"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"558","messages":"559","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"514"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"514"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"620","messages":"621","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"514"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"625","messages":"626","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"628"},"44z9rq",{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"628"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"628"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"628"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"658"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"628"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"628"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"679"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"684","usedDeprecatedRules":"628"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"693"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"628"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"679"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"729"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"729"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"679"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"742"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"628"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"752"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"628"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"628"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765","usedDeprecatedRules":"628"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"772","usedDeprecatedRules":"628"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"628"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"628"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783","usedDeprecatedRules":"628"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"788","usedDeprecatedRules":"628"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"793","usedDeprecatedRules":"628"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"628"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"803"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"808","usedDeprecatedRules":"628"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"811","usedDeprecatedRules":"628"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"628"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"628"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"628"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827","usedDeprecatedRules":"828"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"828"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"835","usedDeprecatedRules":"628"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"838","usedDeprecatedRules":"839"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"839"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"628"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"628"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"628"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"628"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"858","usedDeprecatedRules":"628"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863","usedDeprecatedRules":"628"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"628"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869","usedDeprecatedRules":"628"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"628"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"877","usedDeprecatedRules":"628"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"628"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"883","usedDeprecatedRules":"628"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"886","usedDeprecatedRules":"628"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"889","usedDeprecatedRules":"628"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"898","usedDeprecatedRules":"899"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"902","usedDeprecatedRules":"628"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905","usedDeprecatedRules":"628"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"910","usedDeprecatedRules":"628"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"913","usedDeprecatedRules":"628"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"916","usedDeprecatedRules":"628"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"919","usedDeprecatedRules":"628"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"922","usedDeprecatedRules":"628"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"925","usedDeprecatedRules":"628"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"928","usedDeprecatedRules":"628"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"628"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"628"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939","usedDeprecatedRules":"628"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"942","usedDeprecatedRules":"628"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"628"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948","usedDeprecatedRules":"628"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951","usedDeprecatedRules":"628"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"956","usedDeprecatedRules":"628"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"628"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"964","usedDeprecatedRules":"628"},{"filePath":"965","messages":"966","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"969","usedDeprecatedRules":"628"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"972","usedDeprecatedRules":"628"},{"filePath":"973","messages":"974","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"975","usedDeprecatedRules":"628"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978","usedDeprecatedRules":"628"},{"filePath":"979","messages":"980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"983","usedDeprecatedRules":"628"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986","usedDeprecatedRules":"987"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"990","usedDeprecatedRules":"628"},{"filePath":"991","messages":"992","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"995","usedDeprecatedRules":"628"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1002","usedDeprecatedRules":"628"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1005","usedDeprecatedRules":"628"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1008","usedDeprecatedRules":"628"},{"filePath":"1009","messages":"1010","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1015","usedDeprecatedRules":"628"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1018","usedDeprecatedRules":"628"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023","usedDeprecatedRules":"628"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1026","usedDeprecatedRules":"628"},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1029","usedDeprecatedRules":"628"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1032","usedDeprecatedRules":"628"},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1037","usedDeprecatedRules":"628"},"D:\\DATN\\qlcc_old\\src\\index.js",[],["1038","1039"],"D:\\DATN\\qlcc_old\\src\\reportWebVitals.js",[],"D:\\DATN\\qlcc_old\\src\\component\\Main\\main.js",[],"D:\\DATN\\qlcc_old\\src\\component\\Homepage\\homepage.js",[],"D:\\DATN\\qlcc_old\\src\\component\\Login\\login.js",[],"D:\\DATN\\qlcc_old\\src\\MatxLayout\\Layout1\\Layout1.jsx",[],"D:\\DATN\\qlcc_old\\src\\MatxLayout\\Layout1\\Layout1Topbar.jsx",[],"D:\\DATN\\qlcc_old\\src\\MatxLayout\\Layout1\\Layout1Sidenav.jsx",[],"D:\\DATN\\qlcc_old\\src\\MatxLayout\\SharedCompoents\\Brand.jsx",[],"D:\\DATN\\qlcc_old\\src\\MatxLayout\\SharedCompoents\\Sidenav.jsx",[],"D:\\DATN\\qlcc_old\\src\\MatxLayout\\SharedCompoents\\NotificationBar.jsx",[],"D:\\DATN\\qlcc_old\\src\\MatxLayout\\SharedCompoents\\ShoppingCart.jsx",[],"D:\\DATN\\qlcc_old\\src\\MatxLayout\\MatxTheme\\SidenavTheme.jsx",["1040"],"import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nconst SidenavTheme = ({ theme, settings }) => {\n\n  function darkHoverStyle() {\n    return theme.palette.type === \"dark\"\n      ? `.navigation .nav-item:hover,\n        .navigation .nav-item.active {\n          color: ${theme.palette.text.primary};\n        }`\n      : \"\";\n  }\n\n  function lightHoverStyle() {\n    return theme.palette.type === \"light\"\n      ? `.navigation .nav-item:hover,\n        .navigation .nav-item.active,\n        .navigation .submenu {\n          background: rgba(0, 0, 0, .08);\n        }`\n      : \"\";\n  }\n\n  return (\n    <Helmet>\n      <style>\n        {`\n        \n        ${\n          theme.palette.type === \"dark\"\n            ? `.sidenav {\n          color: ${theme.palette.text.secondary};\n        }`\n            : \" \"\n        }\n\n        .sidenav__hold {\n          background-image: url(${\n            settings.layout1Settings.leftSidebar.bgImgURL\n          });\n          opacity: 1 !important;\n        }\n        .sidenav__hold::after {\n          background: ${theme.palette.primary.main};\n          opacity: ${settings.layout1Settings.leftSidebar.bgOpacity};\n        }\n        .navigation .nav-item:not(.badge) {\n          color: ${theme.palette.text.primary};\n        }\n        .navigation .nav-item .icon-text::after {\n          background: ${theme.palette.text.primary};\n        }\n        .navigation .nav-item.active, \n        .navigation .nav-item.active:hover {\n          background: ${theme.palette.secondary.main};\n        }\n\n        \n        ${darkHoverStyle()}\n        \n      `}\n      </style>\n    </Helmet>\n  );\n};\n\nexport default SidenavTheme;\n","D:\\DATN\\qlcc_old\\src\\navigations.js",[],"D:\\DATN\\qlcc_old\\src\\redux\\actions\\NotificationActions.js",[],"D:\\DATN\\qlcc_old\\src\\appContext.js",[],"D:\\DATN\\qlcc_old\\src\\redux\\actions\\LayoutActions.js",[],"D:\\DATN\\qlcc_old\\src\\redux\\actions\\UserActions.js",[],"D:\\DATN\\qlcc_old\\src\\history.js",[],"D:\\DATN\\qlcc_2\\src\\index.js",[],["1041","1042"],"D:\\DATN\\qlcc_2\\src\\reportWebVitals.js",[],"D:\\DATN\\qlcc_2\\src\\view\\Main\\main.js",[],"D:\\DATN\\qlcc_2\\src\\view\\Homepage\\homepage.js",[],"D:\\DATN\\qlcc_2\\src\\layouts\\Layout.js",["1043"],"import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n// creates a beautiful scrollbar\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Navbar from \"../component/Navbars/Navbar\";\r\n// import Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"../component/Sidebar/Sidebar.js\";\r\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\nimport routes from \"../routes.js\";\r\nimport styles from \"../asset/jss/material-dashboard-react/layouts/adminStyle.js\";\r\n\r\nimport bgImage from \"../asset/img/sidebar-2.jpg\";\r\nimport logo from \"../asset/img/reactlogo.png\";\r\n\r\nlet ps;\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function Admin({ ...rest }) {\r\n  // styles\r\n  const classes = useStyles();\r\n  // ref to help us initialize PerfectScrollbar on windows devices\r\n  const mainPanel = React.createRef();\r\n  // states and functions\r\n  const [image] = React.useState(bgImage);\r\n  const [color] = React.useState(\"blue\");\r\n   //const [fixedClasses, setFixedClasses] = React.useState(\"dropdown show\");\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  // const handleImageClick = image => {\r\n  //   setImage(image);\r\n  // };\r\n  // const handleColorClick = color => {\r\n  //   setColor(color);\r\n  // };\r\n  // const handleFixedClick = () => {\r\n  //   if (fixedClasses === \"dropdown\") {\r\n  //     setFixedClasses(\"dropdown show\");\r\n  //   } else {\r\n  //     setFixedClasses(\"dropdown\");\r\n  //   }\r\n  // };\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const getRoute = () => {\r\n    return window.location.pathname !== \"/admin/maps\";\r\n  };\r\n  const resizeFunction = () => {\r\n    if (window.innerWidth >= 960) {\r\n      setMobileOpen(false);\r\n    }\r\n  };\r\n  // initialize and destroy the PerfectScrollbar plugin\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(mainPanel.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    window.addEventListener(\"resize\", resizeFunction);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n      window.removeEventListener(\"resize\", resizeFunction);\r\n    };\r\n  }, []);\r\n  const switchRoutes = (\r\n    <Switch>\r\n      {routes.map((prop, key) => {\r\n        // if (prop.layout === \"/admin\") {\r\n        //   return (\r\n        //     <Route\r\n        //       path={prop.layout + prop.path}\r\n        //       component={prop.component}\r\n        //       key={key}\r\n        //     />\r\n        //   );\r\n        // }\r\n        \r\n          return (\r\n            <Route\r\n              path={prop.layout + prop.path}\r\n              component={prop.component}\r\n              key={key}\r\n            />\r\n          );\r\n        \r\n        \r\n      })}\r\n      \r\n    </Switch>\r\n  );\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Sidebar\r\n        routes={routes}\r\n        logoText={\"Creative Tim\"}\r\n        logo={logo}\r\n        image={image}\r\n        handleDrawerToggle={handleDrawerToggle}\r\n        open={mobileOpen}\r\n        color={color}\r\n        {...rest}\r\n      />\r\n      <div className={classes.mainPanel} ref={mainPanel}>\r\n        <Navbar\r\n          routes={routes}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          {...rest}\r\n        />\r\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\r\n         {getRoute() ? (\r\n          <div className={classes.content}>\r\n            <div className={classes.container}>{switchRoutes}</div>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.map}>{switchRoutes}</div>\r\n        )}\r\n        {/* {getRoute() ? <Footer /> : null} */}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2\\src\\view\\Login\\login.js",[],"D:\\DATN\\qlcc_2\\src\\component\\Navbars\\Navbar.js",[],"D:\\DATN\\qlcc_2\\src\\component\\Navbars\\AdminNavbarLinks.js",["1044"],"D:\\DATN\\qlcc_2\\src\\component\\Sidebar\\Sidebar.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\layouts\\adminStyle.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\headerLinksStyle.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\headerStyle.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\sidebarStyle.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\dropdownStyle.js",[],"D:\\DATN\\qlcc_2\\src\\component\\CustomButtons\\Button.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\buttonStyle.js",[],"D:\\DATN\\qlcc_2\\src\\component\\CustomInput\\CustomInput.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\customInputStyle.js",[],"D:\\DATN\\qlcc_2\\src\\routes.js",[],"D:\\DATN\\qlcc_2\\src\\view\\Bill\\Bill.js",[],"D:\\DATN\\qlcc_2\\src\\view\\Profile\\profile.js",["1045","1046","1047","1048","1049","1050"],"D:\\DATN\\qlcc_2\\src\\view\\Bill\\bill.js",["1051","1052"],"import React,{useEffect, useState}  from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport DropdownButton from \"../../component/CustomButtons/DropdownButton\"\r\nimport{speciesChoice,timeChoice,headerElec} from \"./billService\"\r\nimport{createURL, handleData} from \"./billService\"\r\nimport TableList from '../../component/TableList/TableList.js';\r\nexport default function Bill()\r\n{   \r\n  // const [electricBill, setElectricBill]= useState(\"\");\r\n  // const [waterBill,setWaterBill]=useState(\"\"); \r\n  \r\n  const userInfo=useSelector(state=>state.user.info);\r\n  const token=userInfo[0].token;\r\n  const apartment_id=userInfo[0].infoUser.apartment_id;\r\n  const [url,setUrl]=useState(process.env.REACT_APP_API_LINK+`/api/elec-bill/all/${apartment_id}`);\r\n  const [bill,setBill]=useState([]); \r\n  const [header,setHeader]=useState(headerElec);\r\n  const [name,setName]=useState(\"Hóa đơn điện\")\r\n  const  handleSubmit=async(species,time)=>{\r\n    const result =createURL(species,time,apartment_id);\r\n    //console.log(result);\r\n    await setUrl(result.url);\r\n    await setHeader(result.header);\r\n    await setName(result.name);\r\n    console.log(\"submit\")\r\n    console.log(url,header,name);\r\n  }\r\n\r\n  useEffect(() => {\r\n      fetch(url, {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n         Authorization:'Bearer '+ `${token}`,\r\n         'Content-Type': 'application/json',\r\n    },\r\n      // body: JSON.stringify(body),\r\n    })\r\n      .then((res) => {\r\n        if(res.status === 200){\r\n    \r\n          return res.json();     \r\n      }else if(res.status === 500){\r\n         \r\n      }\r\n      })\r\n      .then((result) => {\r\n        setBill(handleData(result.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);       \r\n      });\r\n    },[url]);\r\n    return(\r\n        <div>\r\n            <GridContainer>\r\n            <GridItem xs={12} sm={12}>\r\n            <DropdownButton speciesChoice={speciesChoice} timeChoice={timeChoice} handleSubmit={(species,time)=>handleSubmit(species,time)} ></DropdownButton>\r\n            <TableList Header={header} Name={name} Data={bill} ></TableList>\r\n        </GridItem>\r\n      </GridContainer>\r\n         </div>   \r\n        );\r\n        \r\n}\r\n\r\n","D:\\DATN\\qlcc_2\\src\\component\\TableList\\TableList.js",[],"D:\\DATN\\qlcc_2\\src\\component\\Grid\\GridContainer.js",[],"D:\\DATN\\qlcc_2\\src\\component\\Grid\\GridItem.js",[],"D:\\DATN\\qlcc_2\\src\\component\\Table\\Table.js",[],"D:\\DATN\\qlcc_2\\src\\component\\Card\\Card.js",[],"D:\\DATN\\qlcc_2\\src\\component\\Card\\CardHeader.js",[],"D:\\DATN\\qlcc_2\\src\\component\\Card\\CardBody.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\tableStyle.js",[],"D:\\DATN\\qlcc_2\\src\\store.js",[],"D:\\DATN\\qlcc_2\\src\\redux\\reducer\\rootReducer.js",[],"D:\\DATN\\qlcc_2\\src\\redux\\reducer\\user.js",[],"D:\\DATN\\qlcc_2\\src\\component\\CustomTabs\\CustomTabs.js",[],"D:\\DATN\\qlcc_2\\src\\component\\Tasks\\Tasks.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\tasksStyle.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\checkboxAdnRadioStyle.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\tooltipStyle.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\customTabsStyle.js",[],"D:\\DATN\\qlcc_2\\src\\redux\\action\\userAction.js",[],"D:\\DATN\\qlcc_2\\src\\component\\Navbars\\LoginBar.js",[],"D:\\DATN\\qlcc_2\\src\\component\\CustomButtons\\DropdownButton.js",[],"D:\\DATN\\qlcc_2\\src\\view\\Bill\\billService.js",["1053"],"export const speciesChoice = [\r\n  // { id: 1, name: \"Tất cả\" },\r\n  { id: 2, name: \"Hóa đơn điện\", url: `/api/elec-bill/all/`,header:[\"Số thứ tự\",\"Thời gian\",\"Chỉ số cũ\",\"Chỉ số mới\",\"Số điện\",\"Giá chỉ số\",\"Tổng giá\"] },\r\n  { id: 3, name: \"Hóa đơn nước\", url: `/api/water-bill/all/`,header:[\"Số thứ tự\",\"Thời gian\",\"Chỉ số cũ\",\"Chỉ số mới\",\"Số điện\",\"Giá chỉ số\",\"Tổng giá\"] },\r\n  { id: 4, name: \"Hóa đơn khác\", url: `/api/other-bill/all/`,header:[\"Số thứ tự\",\"Thời gian\",\"Chỉ số cũ\",\"Chỉ số mới\",\"Số điện\",\"Giá chỉ số\",\"Tổng giá\"] },\r\n];\r\nexport const timeChoice = [\r\n  // { id: 1, name: \"Tất cả\" },\r\n  { id: 2, name: \"Tháng hiện tại\" },\r\n  { id: 3, name: \"Tháng trước\" },\r\n  { id: 4, name: \"Năm hiện tại\" },\r\n];\r\nexport const headerElec=[\"Số thứ tự\",\"Thời gian\",\"Chỉ số cũ\",\"Chỉ số mới\",\"Số điện\",\"Giá chỉ số\",\"Tổng giá\"];\r\nexport const headerWater=[\"Số thứ tự\",\"Thời gian\",\"Chỉ số cũ\",\"Chỉ số mới\",\"Số điện\",\"Giá chỉ số\",\"Tổng giá\"];\r\nexport const headerOther=[\"Số thứ tự\",\"Thời gian\",\"Chỉ số cũ\",\"Chỉ số mới\",\"Số điện\",\"Giá chỉ số\",\"Tổng giá\"];\r\nexport const createURL = (species, time, apartment_id) => {\r\n  if (species === null) {\r\n    return process.env.REACT_APP_API_LINK + `/api/elec-bill/all/${apartment_id}`;\r\n  } else {\r\n    for (const item of speciesChoice) {\r\n      if (species == item.name) {\r\n        return {name:item.name,url:process.env.REACT_APP_API_LINK + item.url+`${apartment_id}`,header:item.header};\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const createHeader=(species)=>{\r\n\r\n}\r\nexport const handleData=(data)=>\r\n{\r\n  const newData=[];\r\n  let count=1;\r\n  for (let line of data) {\r\n    //console.log(line);\r\n    let newLine=Object.values(line);//console.log(newLine);\r\n    newLine[0]=count;   //STT\r\n    newLine[1]=newLine[6]+\"/\"+newLine[7];//Thời gian\r\n\r\n    let temp=newLine[4];  // swap\r\n    newLine[4]=newLine[5];\r\n    newLine[5]= temp;\r\n    \r\n    newLine.splice(6,2);\r\n    newLine.splice(7,1)\r\n    //console.log(newLine);\r\n    for(let i=0;i<newLine.length;i++)\r\n    {\r\n      newLine[i]=newLine[i].toString();\r\n    }\r\n    count++;\r\n    newData.push(newLine);\r\n    //console.log(count);\r\n  }\r\n  \r\n return newData;\r\n}\r\n","D:\\DATN\\qlcc_2\\src\\component\\Card\\CardAvatar.js",[],"D:\\DATN\\qlcc_2\\src\\component\\Card\\CardFooter.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\cardAvatarStyle.js",[],"D:\\DATN\\qlcc_2\\src\\asset\\jss\\material-dashboard-react\\components\\cardFooterStyle.js",[],"D:\\DATN\\qlcc_2\\src\\view\\Profile\\changeProfile.js",["1054","1055","1056","1057","1058","1059","1060","1061"],"D:\\DATN\\qlcc_2\\src\\view\\Profile\\changePassword.js",["1062","1063","1064","1065","1066","1067","1068","1069"],"import React,{useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport CustomInput from \"../../component/CustomInput/CustomInput.js\";\r\nimport Button from \"../../component/CustomButtons/Button.js\";\r\nimport Card from \"../../component/Card/Card.js\";\r\nimport CardHeader from \"../../component/Card/CardHeader.js\";\r\nimport CardBody from \"../../component/Card/CardBody.js\";\r\nimport CardFooter from \"../../component/Card/CardFooter.js\";\r\n\r\nimport avatar from \"../../asset/img/faces/marc.jpg\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ChangePassword() {\r\n  const classes = useStyles();\r\n  const userInfo=useSelector(state=>state.user.info);\r\n  const token=userInfo[0].token;\r\n\r\n  const handleSubmit =()=>\r\n  {\r\n    // const body ={\r\n    //   ID_User:localStorage.getItem('id'),\r\n    //   Name:data\r\n    // }\r\n    // const token=JSON.parse(localStorage.getItem('token'));\r\n    \r\n    // const res =await fetch(linkurl+`boards/add`,\r\n    // {\r\n    //   method: \"POST\",\r\n    //   mode: \"cors\",\r\n    //   headers: {\r\n    //      Authorization:'Bearer '+ `${token}`,\r\n    //      'Content-Type': 'application/json',\r\n    // },\r\n    // body: JSON.stringify(body)\r\n    \r\n    // });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={8}>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                  <CustomInput\r\n                    labelText=\"Mật khẩu cũ\"\r\n                    id=\"old_password\"\r\n                    formControlProps={{\r\n                      fullWidth: true\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n              \r\n                <GridItem xs={12} sm={12} md={12}>\r\n                  <CustomInput\r\n                    labelText=\"Mật khẩu mới\"\r\n                    id=\"new_password\"\r\n                    formControlProps={{\r\n                      fullWidth: true\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n               \r\n                <GridItem xs={12} sm={12} md={12}>\r\n                  <CustomInput\r\n                    labelText=\"Xác nhận mật khẩu mới\"\r\n                    id=\"confirm_password\"\r\n                    formControlProps={{\r\n                      fullWidth: true\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n                \r\n                \r\n              </GridContainer>\r\n            \r\n          \r\n              <Button color=\"primary\" onClick={e=>handleSubmit(e)}>Lưu lại</Button>\r\n           \r\n          \r\n        </GridItem>\r\n        \r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}","D:\\DATN\\qlcc_2\\src\\view\\Profile\\serviceProfile.js",[],"D:\\DATN\\qlcc_2_admin\\src\\index.js",["1070"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport Main from './view/Main/main';\nimport notifications from \"./notifications\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Main/> \n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["1071","1072"],"D:\\DATN\\qlcc_2_admin\\src\\reportWebVitals.js",[],"D:\\DATN\\qlcc_2_admin\\src\\store.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Main\\main.js",["1073","1074"],"import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"../Login/login\";\r\nimport Admin from \"../../layouts/Layout\";\r\nimport {messaging} from \"../../firebase\"\r\nimport { PrivateRoute } from '../../privateRouter';\r\nexport default function Main()\r\n{   \r\n  // messaging.onMessage(async (payload) => {\r\n  //   console.log('Message received. ', payload);\r\n  //   // ...\r\n  // });\r\n  console.log(\"main\");\r\n    const LoginContainer = () => (\r\n        <div className=\"container\">\r\n          {/* <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} /> */}\r\n          <Route path=\"/login\" component={Login} />\r\n        </div>\r\n      )\r\n      \r\n      \r\n       const DefaultContainer = () => (\r\n          <div>\r\n               <Admin/>\r\n               {/* <Route path=\"/user/detail/:id\" component={DetailUser}/>\r\n               <Route path=\"/add/apart\" component={AddApart} /> \r\n               <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} /> */}\r\n               \r\n               \r\n          </div>\r\n       )\r\n    return (\r\n        <BrowserRouter>\r\n      \r\n        <div className=\"main-route-place\">\r\n            <Switch>\r\n                 <Route  exact path=\"/\" component={Login} /> \r\n                {/* <Route path=\"/\" component={LoginContainer}/> */}\r\n                <PrivateRoute component={DefaultContainer}/>  \r\n                    \r\n            </Switch>\r\n        </div>\r\n        \r\n        </BrowserRouter>\r\n    );\r\n} \r\n\r\n","D:\\DATN\\qlcc_2_admin\\src\\redux\\reducer\\rootReducer.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Login\\login.js",["1075","1076","1077","1078"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\n// import Link from \"@material-ui/core/Link\";\r\n// import Grid from \"@material-ui/core/Grid\";\r\n\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { addUser } from \"../../redux/action/userAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {messaging} from \"../../firebase.js\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n  const usernameCheck = /^[a-zA-Z0-9]+$/;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const submitUser = async () => {\r\n    //console.log(\"add\");\r\n    sendUser();\r\n  };\r\n  const checkUser = (username, password) => {\r\n    //console.log(username);\r\n    //console.log(password);\r\n\r\n    if (username === \"\" || !username.match(usernameCheck)) {\r\n      //console.log(\"check1\");\r\n      setContent(\"Tên đăng nhập rỗng hoặc có kí tự đặc biệt\");\r\n      return false;\r\n    }\r\n    if (password === \"\") {\r\n      //console.log(\"check2\");\r\n      setContent(\"Mật khẩu rỗng\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  \r\n  const changeToken_device=async(user_id,token)=>\r\n  {\r\n    messaging.requestPermission().then(()=>{\r\n      return messaging.getToken();\r\n    }).then(token_device=>{\r\n      console.log(user_id,token_device)\r\n      apiChangeToken(user_id,token_device,token)\r\n    })\r\n  }\r\n  const apiChangeToken=async(user_id,token_device,token)=>\r\n  {\r\n    try {\r\n      const body = {\r\n        user_id: user_id,\r\n        token_device: token_device,\r\n      };\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/auth/update-token-device-web`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(result.data);\r\n         } else console.log(\"SOMETHING WENT WRONG\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n  }\r\n  const sendUser = async () => {\r\n    try {\r\n      if (!checkUser(username, password)) {\r\n        // check format\r\n        setOpen(true);\r\n        return false;\r\n      }\r\n\r\n      const body = {\r\n        username: username,\r\n        password: password,\r\n      };\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/auth/login`,\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          setContent(\"Đăng nhập thành công \");\r\n          setOpen(true);\r\n          // push to redux\r\n          //console.log(\"success\");\r\n          console.log(result.infoUser._id);\r\n          \r\n          const action = addUser(result.infoUser,result.token);\r\n          dispatch(action);\r\n          await changeToken_device(result.infoUser._id,result.token);\r\n          \r\n          history.push(\"/admin/apart\");\r\n        } else if (res.status === 401) {\r\n          setContent(\"Tên đăng nhập hoặc mật khẩu sai\");\r\n          setOpen(true);\r\n        } else console.log(\"SOMETHING WENT WRONG\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">  \r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        {/* <Avatar className={classes.avatar}> */}\r\n          {/* <LockOutlinedIcon /> */}\r\n          <img style={{width:\"100px\"}} src={process.env.PUBLIC_URL + '/logo.PNG'}></img>\r\n        {/* </Avatar> */}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n         Đăng nhập\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoFocus\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={submitUser}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        autoHideDuration={2000}\r\n        message={content}\r\n        key={1}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\layouts\\Layout.js",["1079"],"import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n// creates a beautiful scrollbar\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Navbar from \"../component/Navbars/Navbar\";\r\n// import Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"../component/Sidebar/Sidebar.js\";\r\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\n// import routes from \"../routes.js\";\r\nimport RenderRoute from \"../routes\";\r\nimport styles from \"../asset/jss/material-dashboard-react/layouts/adminStyle.js\";\r\n\r\nimport bgImage from \"../asset/img/sidebar-2.jpg\";\r\nimport logo from \"../asset/img/reactlogo.png\";\r\n\r\nlet ps;\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function Admin({ ...rest }) {\r\n  // styles\r\n  const classes = useStyles();\r\n  // ref to help us initialize PerfectScrollbar on windows devices\r\n  const mainPanel = React.createRef();\r\n  // states and functions\r\n  const [image] = React.useState(bgImage);\r\n  const [color] = React.useState(\"blue\");\r\n   //const [fixedClasses, setFixedClasses] = React.useState(\"dropdown show\");\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const {render}=RenderRoute();\r\n  const routes=render()\r\n  // const handleImageClick = image => {\r\n  //   setImage(image);\r\n  // };\r\n  // const handleColorClick = color => {\r\n  //   setColor(color);\r\n  // };\r\n  // const handleFixedClick = () => {\r\n  //   if (fixedClasses === \"dropdown\") {\r\n  //     setFixedClasses(\"dropdown show\");\r\n  //   } else {\r\n  //     setFixedClasses(\"dropdown\");\r\n  //   }\r\n  // };\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const getRoute = () => {\r\n    return window.location.pathname !== \"/admin/maps\";\r\n  };\r\n  const resizeFunction = () => {\r\n    if (window.innerWidth >= 960) {\r\n      setMobileOpen(false);\r\n    }\r\n  };\r\n  // initialize and destroy the PerfectScrollbar plugin\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(mainPanel.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    window.addEventListener(\"resize\", resizeFunction);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n      window.removeEventListener(\"resize\", resizeFunction);\r\n    };\r\n  }, []);\r\n  const switchRoutes = (\r\n    <Switch>\r\n      {routes.map((prop, key) => {\r\n        // if (prop.layout === \"/admin\") {\r\n        //   return (\r\n        //     <Route\r\n        //       path={prop.layout + prop.path}\r\n        //       component={prop.component}\r\n        //       key={key}\r\n        //     />\r\n        //   );\r\n        // }\r\n        \r\n          return (\r\n            <Route\r\n              path={prop.layout + prop.path}\r\n              component={prop.component}\r\n              key={key}\r\n            />\r\n          );\r\n        \r\n        \r\n      })}\r\n      \r\n    </Switch>\r\n  );\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Sidebar\r\n        routes={routes}\r\n        logoText={\"Creative Tim\"}\r\n        logo={logo}\r\n        image={image}\r\n        handleDrawerToggle={handleDrawerToggle}\r\n        open={mobileOpen}\r\n        color={color}\r\n        {...rest}\r\n      />\r\n      <div className={classes.mainPanel} ref={mainPanel}>\r\n        <Navbar\r\n          routes={routes}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          {...rest}\r\n        />\r\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\r\n         {getRoute() ? (\r\n          <div className={classes.content}>\r\n            <div className={classes.container}>{switchRoutes}</div>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.map}>{switchRoutes}</div>\r\n        )}\r\n        {/* {getRoute() ? <Footer /> : null} */}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\redux\\reducer\\user.js",[],"D:\\DATN\\qlcc_2_admin\\src\\routes.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\Sidebar\\Sidebar.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\layouts\\adminStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\redux\\action\\userAction.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\Navbars\\Navbar.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\bill.js",["1080","1081"],["1082","1083"],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\sidebarStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Profile\\profile.js",["1084","1085","1086","1087","1088","1089","1090","1091","1092"],"import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../component/CustomButtons/Button.js\";\r\nimport Card from \"../../component/Card/Card.js\";\r\nimport CardAvatar from \"../../component/Card/CardAvatar.js\";\r\nimport CardBody from \"../../component/Card/CardBody.js\";\r\nimport CustomTabs from \"../../component/CustomTabs/CustomTabs.js\";\r\nimport ChangeProfile from \"./changeProfile.js\"\r\nimport ChangePassword from \"./changePassword\"\r\n\r\nimport avatar from \"../../asset/img/faces/marc.jpg\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function UserProfile() {\r\n  const classes = useStyles();\r\n  const userInfo=useSelector(state=>state.user.info);\r\n  const token=useSelector(state=>state.user.token);\r\n\r\n  const handleSubmit =()=>\r\n  {\r\n    // const body ={\r\n    //   ID_User:localStorage.getItem('id'),\r\n    //   Name:data\r\n    // }\r\n    // const token=JSON.parse(localStorage.getItem('token'));\r\n    \r\n    // const res =await fetch(linkurl+`boards/add`,\r\n    // {\r\n    //   method: \"POST\",\r\n    //   mode: \"cors\",\r\n    //   headers: {\r\n    //      Authorization:'Bearer '+ `${token}`,\r\n    //      'Content-Type': 'application/json',\r\n    // },\r\n    // body: JSON.stringify(body)\r\n    \r\n    // });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n      {/* <GridItem xs={12} sm={12} md={4}>\r\n          <Card profile>\r\n            <CardAvatar profile>\r\n              <a href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                <img src={avatar} alt=\"...\" />\r\n              </a>\r\n            </CardAvatar>\r\n            <CardBody profile>\r\n             \r\n              <Button color=\"primary\" >\r\n                Thay đổi ảnh đại diện\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem> */}\r\n        <GridItem xs={12} sm={12} md={12}>\r\n        <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Thay đổi thông tin cá nhân\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ChangeProfile/>\r\n                )\r\n              },\r\n              {\r\n                tabName: \"Đổi mật khẩu\",\r\n                //tabIcon: Code,\r\n                tabContent: (\r\n                  <ChangePassword/>\r\n                )\r\n              },\r\n              \r\n            ]}\r\n          />\r\n        </GridItem>\r\n       \r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}","D:\\DATN\\qlcc_2_admin\\src\\component\\Navbars\\AdminNavbarLinks.js",["1093","1094","1095","1096","1097","1098","1099","1100","1101"],"import React from \"react\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\nimport Divider from \"@material-ui/core/Divider\";\n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\n// import Dashboard from \"@material-ui/icons/Dashboard\";\n// import Search from \"@material-ui/icons/Search\";\n// core components\nimport CustomInput from \"../CustomInput/CustomInput.js\";\nimport Button from \"../CustomButtons/Button.js\";\nimport { firebase } from \"../../../src/firebase.js\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"../../asset/jss/material-dashboard-react/components/headerLinksStyle.js\";\nimport { addUser } from \"../../redux/action/userAction.js\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function AdminNavbarLinks() {\n  const classes = useStyles();\n  const history = useHistory();\n  const token = useSelector((state) => state.user.token);\n  const dispatch = useDispatch();\n  const [openNotification, setOpenNotification] = React.useState(null);\n  const [openProfile, setOpenProfile] = React.useState(null);\n  const [noti, setNoti] = React.useState({\n    bill: 1,\n    repair1: 1,\n    repair2: 1,\n    repair3: 1,\n    parking:1,\n    service: 1,\n    post: 1,\n    all: 0,\n  });\n  const [reload,setReload]=React.useState(true)\n  const handleClickNotification = (event) => {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n  const handleCloseNotification = () => {\n    setOpenNotification(null);\n  };\n  const handleClickProfile = (event) => {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n  const handleCloseProfile = () => {\n    setOpenProfile(null);\n  };\n  const handleLogout = () => {\n    let action = addUser({}, null);\n    dispatch(action);\n    // action= deleteApart(0);\n    // dispatch(action);\n    history.push(\"/\");\n  };\n  const handleProfile = () => {\n    history.push(\"/admin/profile\");\n  };\n  const messaging = firebase.messaging();\n  messaging.onMessage(async (payload) => {\n    console.log(\"Message received in noti \", payload);\n    setReload(!reload)\n  });\n  useEffect(() => {\n    const getRes = async () => {\n      try {\n        const res = await fetch(\n          process.env.REACT_APP_API_LINK + `/api/all-bill/count-bills?report=true`,\n          {\n            // get block\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + `${token}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        const res1 = await fetch(\n          process.env.REACT_APP_API_LINK + `/api/repair/count-notices?type=0&status=0&is_read_admin=false`,\n          {\n            // get block\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + `${token}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        const res2 = await fetch(\n          process.env.REACT_APP_API_LINK + `/api/repair/count-notices?type=2&status=0`,\n          {\n            // get block\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + `${token}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        const res3 = await fetch(\n          process.env.REACT_APP_API_LINK + `/api/repair/count-notices?type=1&status=0`,\n          {\n            // get block\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + `${token}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        const res4 = await fetch(\n          process.env.REACT_APP_API_LINK + `/api/noti-parking/unconfirm`,\n          {\n            // get block\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + `${token}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        ); const res5 = await fetch(\n          process.env.REACT_APP_API_LINK + `/api/register-service/count-register?status=0`,\n          {\n            // get block\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + `${token}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        const res6 = await fetch(\n          process.env.REACT_APP_API_LINK + `/api/post/count-post?status=0`,\n          {\n            // get block\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + `${token}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n       \n        if (res.status === 200  && res1.status === 200 &&res2.status === 200  &&res3.status === 200  &&res4.status === 200  &&res5.status === 200  &&res5.status === 200  ) {\n          console.log(\"Vo 200OK\");\n          const result = await res.json();\n          const result1 = await res1.json();\n          const result2 = await res2.json();\n          const result3 = await res3.json();\n          const result4 = await res4.json();\n          const result5 = await res5.json();\n          const result6 = await res6.json();\n          console.log(result4);\n          setNoti({\n            bill: result.count,repair1: result1.count,repair2: result2.count,repair3: result3.count,parking:result4.unconfirm,\n            service: result5.count,post: result6.count,\n            all:result.count+ result1.count+result2.count+ result3.count+result4.unconfirm+ result5.count+result6.count})\n        } else {\n          console.log(\"k data\");\n          \n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getRes();\n  }, [reload]);\n  return (\n    <div>\n      <div className={classes.searchWrapper}>\n        {/* <CustomInput\n          formControlProps={{\n            className: classes.margin + \" \" + classes.search\n          }}\n          inputProps={{\n            placeholder: \"Search\",\n            inputProps: {\n              \"aria-label\": \"Search\"\n            }\n          }}\n        /> */}\n        {/* <Button color=\"white\" aria-label=\"edit\" justIcon round>\n          <Search />\n        </Button> */}\n      </div>\n      {/* <Button\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n        justIcon={window.innerWidth > 959}\n        simple={!(window.innerWidth > 959)}\n        aria-label=\"Dashboard\"\n        className={classes.buttonLink}\n      >\n        <Dashboard className={classes.icons} />\n        <Hidden mdUp implementation=\"css\">\n          <p className={classes.linkText}>Dashboard</p>\n        </Hidden>\n      </Button> */}\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickNotification}\n          className={classes.buttonLink}\n        >\n          <Notifications className={classes.icons} />\n\n          {noti.all!==0&&<span className={classes.notifications}>{noti.all}</span>}\n          <Hidden mdUp implementation=\"css\">\n            <p onClick={handleCloseNotification} className={classes.linkText}>\n              Notification\n            </p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openNotification)}\n          anchorEl={openNotification}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openNotification }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"notification-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseNotification}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={e=>{handleCloseNotification(); history.push('/admin/reportbill')}}\n                      className={classes.dropdownItem}>\n                      Khiếu nại hóa đơn\n                      {noti.bill !== 0 && (<span className={classes.num_notifications}>{noti.bill}</span>)}\n                    </MenuItem>\n                    <MenuItem\n                      onClick={e=>{handleCloseNotification(); history.push('/admin/repair')}}\n                      className={classes.dropdownItem}>\n                      Yêu cầu sửa chữa khu vực chung\n                      {noti.repair1 !== 0 && (<span className={classes.num_notifications}>{noti.repair1}</span>)}\n                    </MenuItem>\n                    <MenuItem\n                      onClick={e=>{handleCloseNotification(); history.push('/admin/repair/repair')}}\n                      className={classes.dropdownItem}>\n                        Yêu cầu dịch vụ sửa chữa\n                      {noti.repair2 !== 0 && (<span className={classes.num_notifications}>{noti.repair2}</span>)}\n                    </MenuItem><MenuItem\n                      onClick={e=>{handleCloseNotification(); history.push('/admin/repair/self_repair')}}\n                      className={classes.dropdownItem}>\n                        Yêu cầu tự sửa chữa\n                      {noti.repair3 !== 0 && (<span className={classes.num_notifications}>{noti.repair3}</span>)}\n                    </MenuItem>\n                    <MenuItem\n                      onClick={e=>{handleCloseNotification(); history.push('/admin/noti_parking')}}\n                      className={classes.dropdownItem}>\n                        Khiếu nại bãi xe\n                      {noti.parking !== 0 && (<span className={classes.num_notifications}>{noti.parking}</span>)}\n                    </MenuItem>\n                    <MenuItem\n                      onClick={e=>{handleCloseNotification(); history.push('/admin/service_register')}}\n                      className={classes.dropdownItem}>\n                        Đăng kí sử dụng khu vực chung\n                      {noti.service !== 0 && (<span className={classes.num_notifications}>{noti.service}</span>)}\n                    </MenuItem>\n                    <MenuItem\n                      onClick={e=>{handleCloseNotification(); history.push('/admin/browse_post')}}\n                      className={classes.dropdownItem}>\n                        Yêu cầu đăng bài\n                      {noti.post !== 0 && (<span className={classes.num_notifications}>{noti.post}</span>)}\n                    </MenuItem>                                     \n                      <div style ={{width:\"280px\"}}></div>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickProfile}\n          className={classes.buttonLink}\n        >\n          <Person className={classes.icons} />\n          <Hidden mdUp implementation=\"css\">\n            <p className={classes.linkText}>Profile</p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openProfile)}\n          anchorEl={openProfile}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openProfile }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"profile-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseProfile}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleProfile}\n                      className={classes.dropdownItem}\n                      // href=\"/admin/profile\"\n                    >\n                      Thông tin cá nhân\n                    </MenuItem>\n                   \n                    <Divider light />\n                    <MenuItem\n                      onClick={handleLogout}\n                      className={classes.dropdownItem}\n                    >\n                      Đăng xuất\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n    </div>\n  );\n}\n","D:\\DATN\\qlcc_2_admin\\src\\component\\Navbars\\LoginBar.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\headerStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\CustomButtons\\Button.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\Grid\\GridItem.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\TableList\\TableList.js",[],["1102","1103"],"D:\\DATN\\qlcc_2_admin\\src\\component\\Grid\\GridContainer.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Profile\\changeProfile.js",["1104","1105","1106","1107","1108","1109","1110","1111"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"../../component/CustomButtons/Button.js\";\r\nimport { checkUser } from \"./serviceProfile.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { addUser,deleteUser,updateUser } from \"../../redux/action/userAction\";\r\nimport Snackbar from \"../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },myButton:{\r\n      float: \"right\"\r\n   }\r\n \r\n  }));\r\nexport default function ChangeProfile() {\r\n  const dispatch=useDispatch();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n  const nameCheck = /^[a-zA-Z0-9]+$/;\r\n  const phoneCheck = /^[0-9]+$/;\r\n  const emailCheck = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  const userInfo = useSelector((state) => state.user.info);\r\n  const token = useSelector((state) => state.user.token);\r\n\r\n  const [alertName, setAlertName] = useState(false);\r\n  const [alertPhone, setAlertPhone] = useState(false);\r\n  const [alertEmail, setAlertEmail] = useState(false);\r\n  const [name, setName] = useState(userInfo.name);\r\n  const [phone, setPhone] = useState(userInfo.phone);\r\n  const [email, setEmail] = useState(userInfo.email);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false); \r\nconst [reload,setReload]=useState(true)\r\n  const checkName = (name) => { \r\n    setName(name);\r\n    if (name !== \"\") {\r\n      setAlertName(false);\r\n      return true;\r\n    } else {\r\n      setAlertName(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkPhone = (phone) => {  \r\n    setPhone(phone);\r\n    if (phone !== \"\" && phone.match(phoneCheck)) {\r\n      setAlertPhone(false);\r\n      return true;\r\n    } else {\r\n      setAlertPhone(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkEmail = (email) => {  \r\n     setEmail(email);\r\n    if (email !== \"\" && email.match(emailCheck)) {\r\n      setAlertEmail(false);\r\n      return true;\r\n    } else {\r\n      setAlertEmail(true);\r\n      return false;\r\n    }\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  \r\n  const handleSubmit = async () => {\r\n    handleClose()\r\n    handleOpenLoading()\r\n    if (await checkName(name) && await checkEmail(email)&& await checkPhone(phone)) {\r\n      const body = {\r\n        user_id: userInfo._id,\r\n        name: name,\r\n        phone: phone,\r\n        email: email,\r\n      };\r\n      console.log(body);\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/auth/update-info`,\r\n          {\r\n            method: \"PUT\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          //delete\r\n          // let action1 = addUser({}, null);\r\n          // dispatch(action1);\r\n          // push in redux\r\n          \r\n          const action2 = updateUser(result.data);\r\n          dispatch(action2);\r\n          console.log(\"success\");\r\n          console.log(result);\r\n          handleCloseLoading()\r\n          handleOpenSnackBar(true)\r\n          setReload(!reload)\r\n        } else {console.log(\"SOMETHING WENT WRONG\")\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false)};\r\n      } catch (err) {\r\n        console.log(err);\r\n        handleCloseLoading()\r\n    handleOpenSnackBar(false)\r\n      }\r\n    } else {\r\n      handleCloseLoading()\r\n      handleOpenSnackBar(false)\r\n    }\r\n  };\r\n  // useEffect(() => {\r\n  //   handleOpenLoading() \r\n  //   //setIsLoading(true);\r\n  //   const getRes = async () => {\r\n  //     try{\r\n     \r\n  //     const res = await fetch(\r\n  //       process.env.REACT_APP_API_LINK + `/api/user/${id}`,\r\n  //       {\r\n  //         method: \"GET\",\r\n  //         headers: {\r\n  //           Authorization: \"Bearer \" + `${token}`,\r\n  //           \"Content-Type\": \"application/json\",\r\n  //         },\r\n  //       }\r\n  //     );\r\n        \r\n      \r\n  //     if (res.status === 200) {      \r\n  //       const result = await res.json();         \r\n  //       setName(result.data.name);\r\n  //       setEmail(result.data.email);\r\n  //       setPhone(result.data.phone)\r\n  //       handleCloseLoading()\r\n  //     } else {\r\n  //       const result = await res.json();\r\n  //       alert(result.message);\r\n       \r\n  //       handleOpenSnackBar(false)\r\n  //       handleCloseLoading()\r\n  //     }\r\n  //   }catch (err) {\r\n  //     console.log(err);\r\n     \r\n  //     handleOpenSnackBar(false)\r\n  //     handleCloseLoading()\r\n  //   }\r\n  //   };\r\n  //   getRes();\r\n  // }, [reload]);\r\n  return (\r\n    <div> <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          {/* <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Thông tin cá nhân</h4>\r\n            </CardHeader> */}\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={12} md={8}>\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Họ và tên\"\r\n                //style={{ margin: 8 }}       \r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                defaultValue={name}\r\n                onChange={(e) => checkName(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n                {alertName && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n            <GridItem xs={12} sm={12} md={8}>\r\n            <TextField\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                //style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                defaultValue={email}\r\n                onChange={(e) => checkEmail(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n                {alertEmail && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n            <GridItem xs={12} sm={12} md={8}>\r\n            <TextField\r\n                id=\"phone\"\r\n                label=\"Số điên thoại\"\r\n                //style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}type=\"number\"\r\n                variant=\"outlined\"\r\n                defaultValue={phone}\r\n                onChange={(e) =>checkPhone(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n                {alertPhone && (\r\n                  <Alert severity=\"error\" className={classes.alerts}>\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n          </GridContainer>\r\n          <GridItem xs={12} sm={12} md={9}>\r\n          <Button className={classes.myButton} color=\"primary\"  onClick={(e) => handleClickOpen()}>\r\n            Lưu lại\r\n          </Button></GridItem>\r\n        </GridItem>\r\n       \r\n      </GridContainer>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n                  Xác nhận chỉnh sửa\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n           \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => handleSubmit(e)} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\component\\CustomButtons\\DropdownButton.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\Card\\CardAvatar.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\Card\\Card.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\Tasks\\Tasks.js",[],["1112","1113"],"D:\\DATN\\qlcc_2_admin\\src\\component\\Card\\CardBody.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\CustomTabs\\CustomTabs.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\buttonStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\headerLinksStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\CustomInput\\CustomInput.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Profile\\changePassword.js",["1114","1115"],"import React,{useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../component/CustomButtons/Button.js\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Snackbar from \"../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ChangePassword() {\r\n  const classes = useStyles();\r\n  const userInfo=useSelector(state=>state.user.info);\r\n  const token=useSelector(state=>state.user.token); \r\n  const [oldPass,setOldPass]= useState();\r\n  const [password,setPassword]= useState();\r\n  const [confirm, setConfirm]= useState();\r\n  const [alertOld,setAlertOld]= useState(false);\r\n  const [alertPassword, setAlertPassword] = useState(false);\r\n  const [alertConfirm, setAlertConfirm] = useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\nconst [open, setOpen] = useState(false);\r\nconst handleClickOpen = () => {\r\n   setOpen(true);\r\n };\r\n const handleClose = () => {\r\n   setOpen(false);\r\n };\r\n  const checkOldPass=  (data)=>\r\n  {\r\n     setOldPass(data);\r\n    if(data!==\"\")\r\n     {  setAlertOld(false);\r\n    return true}\r\n    else\r\n   {setAlertOld(true);\r\n    \r\n  return false}\r\n  }\r\n  const checkPassword = (value) => { \r\n    setPassword(value);\r\n      checkConfirm(confirm,value)\r\n   if (value !== \"\") {\r\n     setAlertPassword(false);\r\n   \r\n     return true;\r\n   } else {\r\n     setAlertPassword(true);\r\n     return false;\r\n   }\r\n   \r\n };\r\n const checkConfirm = (value,password) => {\r\n   setConfirm(value);\r\n   if (value !== \"\" && value===password) {\r\n     setAlertConfirm(false);\r\n     return true;\r\n   } else {\r\n     setAlertConfirm(true);\r\n     return false;\r\n   }\r\n };\r\n const handleOpenSnackBar = (type) => {\r\n  if (type) setSnackType(true);\r\n  else setSnackType(false);\r\n  setOpenSnackBar(true);\r\n};\r\nconst handleCloseSnackBar = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n  setOpenSnackBar(false);\r\n};\r\nconst handleOpenLoading=()=>{\r\n  setIsHandle(true);\r\n}\r\nconst handleCloseLoading=()=>{\r\n  setIsHandle(false);\r\n}\r\n  const handleSubmit = async()=>\r\n  {handleOpenLoading()\r\n    handleClose()\r\n    if(await checkOldPass(oldPass) && await checkPassword(password)&& await checkConfirm(confirm,password))\r\n    {\r\n    const body ={\r\n      user_id:userInfo._id,\r\n      new_pass:password,\r\n      old_pass: oldPass\r\n    }\r\n    console.log(body);\r\n    try {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/auth/change-pass`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"success\");\r\n        console.log(result);\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(true);\r\n        setAlertOld(false);\r\n      } else if(res.status === 400){\r\n        console.log(\"400\");\r\n        setAlertOld(true);\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false);;\r\n      } \r\n      else {\r\n        console.log(\"SOMETHING WENT WRONG\")\r\n      handleCloseLoading()\r\n      handleOpenSnackBar(false);};\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleCloseLoading()\r\n      handleOpenSnackBar(false);\r\n    }\r\n  } else {\r\n    console.log(\"else cuoi\")\r\n    handleCloseLoading()\r\n    handleOpenSnackBar(false);\r\n  }\r\n}\r\n\r\n  return (\r\n    <div><LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          \r\n          <GridContainer>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"old_pass\"\r\n                label=\"Mật khẩu cũ\"\r\n                //style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                onChange={(e) => checkOldPass(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            {alertOld && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n            <GridItem xs={12} sm={12} md={9}>\r\n            <TextField\r\n                id=\"new_pass\"\r\n                label=\"Mật khẩu mới\"\r\n                //style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}type=\"password\"\r\n                variant=\"outlined\"   \r\n                onChange={(e) => checkPassword(e.target.value)}\r\n              />\r\n            </GridItem>\r\n              {alertPassword && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n            <GridItem xs={12} sm={12} md={9}>\r\n            <TextField\r\n                id=\"phone\"\r\n                label=\"Nhập lại mật khẩu mới\"\r\n                //style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}type=\"password\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => checkConfirm(e.target.value,password)}\r\n              />\r\n            </GridItem>{alertConfirm && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                   Không trùng khớp mật khẩu\r\n                  </Alert>\r\n                )}\r\n          </GridContainer>\r\n          <Button color=\"primary\" onClick={e=>handleClickOpen(e)}>Lưu lại</Button>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n                  Xác nhận chỉnh sửa\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n           \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => handleSubmit(e)} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}","D:\\DATN\\qlcc_2_admin\\src\\view\\Profile\\serviceProfile.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\cardAvatarStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\tasksStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\Card\\CardHeader.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\customTabsStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\customInputStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\dropdownStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\Table\\Table.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\Card\\CardFooter.js",[],["1116","1117"],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\tooltipStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\cardFooterStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\checkboxAdnRadioStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\asset\\jss\\material-dashboard-react\\components\\tableStyle.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Login\\ServiceLogin.js",[],["1118","1119"],"D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\UserAccount.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\AdminAccount\\AdminAccount.js",["1120"],"import React from \"react\";\r\n// @material-ui/core components\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../component/CustomButtons/Button.js\";\r\nimport CustomTabs from \"../../component/CustomTabs/CustomTabs.js\";\r\nimport ListAdminAccount from \"./ListAdminAccount.js\"\r\nimport AddAdmin from \"./AddAdminAccount.js\"\r\n\r\n\r\nexport default function Apart() {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n        <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Danh sách tài khoản\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListAdminAccount/>\r\n                )\r\n              }, \r\n              {\r\n                tabName: \"Tạo tào khoản\",\r\n                //tabIcon: Code,\r\n                tabContent: (\r\n                  <AddAdmin/>\r\n                )\r\n              },\r\n              \r\n            ]}\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}","D:\\DATN\\qlcc_2_admin\\src\\view\\AdminAccount\\ServiceAdminAccount.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\ListUserAccount\\ServiceUserAccount.js",[],["1121","1122"],"D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\ListUserAccount\\ListUserAccount.js",["1123","1124","1125"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleData } from \"./ServiceUserAccount\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  \r\n}));\r\nexport default function UserAccount() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n  \r\n  const [reload,setReload]=useState();\r\n const [openSnackBar,setOpenSnackBar]=useState(false);\r\n const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\nconst [open, setOpen] = useState(false);\r\n\r\nconst [id,setID]=useState(\"\");\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: false,\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"name\",\r\n      label: \"Tên người dùng\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },{\r\n        name: \"phone\",\r\n        label: \"Số điện thoại\",\r\n        options: {\r\n          filter: true,\r\n          sort: false,\r\n        },\r\n      },\r\n    {\r\n        name: \"license_plates\",\r\n        label: \"Biển số xe\",\r\n        options: {\r\n          filter: true,\r\n          sort: false,\r\n        },\r\n      },  \r\n    {\r\n      name: \"\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n            <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              color=\"red\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0])}\r\n            >\r\n              <EditIcon color=\"primary\"/>\r\n            </Fab>\r\n          </Tooltip>\r\n         <Tooltip\r\n                id=\"tooltip-top-start\"\r\n                title=\"Xóa\"\r\n                placement=\"top\"\r\n                classes={{ tooltip: classes.tooltip }}\r\n              >\r\n                <Fab\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  aria-label=\"add\"\r\n                  className={classes.margin}\r\n                  onClick={() => {setID(tableMeta.rowData[0]); handleClickOpen()}}\r\n                >\r\n                  <Close />\r\n                </Fab>\r\n          </Tooltip>\r\n          </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleClick = (id) => {\r\n    history.push(`/admin/user_account/${id}`);\r\n  };\r\n  const handleDelete=async()=>{\r\n    console.log(id);\r\n    handleOpenLoading()\r\n    console.log(\"submit\");\r\n    handleClose();\r\n    try {\r\n  \r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK +\r\n          `/api/user/delete/${id}`, \r\n        {\r\n          method: \"DELETE\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n         \r\n          }, \r\n         \r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"delete ok\");\r\n        setReload(!reload);\r\n        handleOpenSnackBar(true)\r\n        handleCloseLoading()\r\n      } else{ console.log(\"SOMETHING WENT WRONG\")\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()};\r\n    }catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n  }\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/user/all`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        setData(await handleData(result.data));\r\n        handleCloseLoading()\r\n        \r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false);\r\n      }\r\n    } catch (err) {\r\n      console.log(err); \r\n      handleCloseLoading()\r\n      handleOpenSnackBar(false);\r\n     \r\n    }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\"> Xác nhận xóa người dùng</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\AddUserAccount\\AddUserAccount.js",["1126","1127","1128","1129"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport { handleApart } from \"./ServiceAddUserAccount.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport SearchApart from \"../DetailUser/SearchApart.js\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  alerts: {\r\n    marginTop: \"18px\",\r\n  },\r\n  myButton:{\r\n    float: \"right\"\r\n }\r\n\r\n}));\r\nexport default function ChangeProfile() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n  const [isHandle,setIsHandle]=useState(false);\r\n  const [reload,setReload]=useState(true)\r\n  //   const userInfo = useSelector((state) => state.user.info);\r\n  const nameCheck = /^[a-zA-Z0-9]+$/;\r\n  const phoneCheck = /^[0-9]+$/;\r\n  const emailCheck = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  const token = useSelector((state) => state.user.token);\r\n  const [alertName, setAlertName] = useState(false);\r\n  const [alertPhone, setAlertPhone] = useState(false);\r\n  const [alertEmail, setAlertEmail] = useState(false);\r\n  const [alertID_Card, setAlertID_Card] = useState(false);\r\n  const [alertAddress, setAlertAddress] = useState(false);\r\n  const [alertLicense_plates, setAlertLicense_plates] = useState(false);\r\n  const [alertApart, setAlertApart] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [id_card, setId_card] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [license_plates, setLicense_plates] = useState(\"\");\r\n  const [block_id, setBlock_id] = useState(\"\");\r\n  const [apart_id, setApart_id] = useState(\"\");\r\n  const [apartList, setApartList] = useState({list:[{name:\"Không có căn hộ\"}],default:[]});\r\n\r\n  \r\n  const checkName = (name) => { \r\n    setName(name);\r\n    if (name !== \"\") {\r\n      setAlertName(false);\r\n      return true;\r\n    } else {\r\n      setAlertName(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkPhone = (phone) => {  \r\n    setPhone(phone);\r\n    if (phone !== \"\" && phone.match(phoneCheck)) {\r\n      setAlertPhone(false);\r\n      return true;\r\n    } else {\r\n      setAlertPhone(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkEmail = (email) => {  \r\n     setEmail(email);\r\n    if (email !== \"\" && email.match(emailCheck)) {\r\n      setAlertEmail(false);\r\n      return true;\r\n    } else {\r\n      setAlertEmail(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkID_Card = (id_card) => {  \r\n     setId_card(id_card);\r\n    if (id_card !== \"\" && id_card.match(nameCheck)) {\r\n      setAlertID_Card(false);\r\n      return true;\r\n    } else {\r\n      setAlertID_Card(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkAddress = (address) => {\r\n    if (address !== \"\") {  \r\n      setAddress(address);\r\n      setAlertAddress(false);\r\n      return true;\r\n    } else {\r\n      setAlertAddress(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkLicense_plates = (license_plates) => {\r\n    if (license_plates !== \"\") { \r\n       setLicense_plates(license_plates);\r\n      setAlertLicense_plates(false);\r\n      return true;\r\n    } else {\r\n      setAlertLicense_plates(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkApart = (apart_id) => {\r\n    if (apart_id !== \"\") { \r\n       setApart_id(apart_id);\r\n      setAlertApart(false);\r\n      return true;\r\n    } else {\r\n      setAlertApart(true);\r\n      return false;\r\n    }\r\n  };\r\n  const changeData=async(apart)=>\r\n  {\r\n       let result=await handleApart(apart);\r\n       setApart_id(result.apart_id)\r\n       setBlock_id(result.block_id)\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    handleClose()\r\n    handleOpenLoading()\r\n    if (\r\n      checkName(name) &&\r\n      checkPhone(phone) &&\r\n      checkEmail(email) &&\r\n      checkID_Card(id_card) &&\r\n      checkAddress(address) && checkApart(apart_id)\r\n    ) {\r\n      const body = {\r\n        name: name,\r\n        phone: phone,\r\n        email: email,\r\n        identify_card: id_card,\r\n        native_place: address,\r\n        apartment_id: apart_id, //[\"6061e00355f5a919c47d3586\"]\r\n        block_id: block_id, //[\"6051fc3a449d422710797e73\"]\r\n        license_plates: [license_plates], //[\"78N2-8668\"]\r\n      };\r\n      console.log(body);\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/user/add`,\r\n          {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n\r\n          console.log(\"success\");\r\n          console.log(result);\r\n          handleCloseLoading()\r\n          handleOpenSnackBar(true);\r\n          setReload(!reload)\r\n        } else if(res.status === 400){\r\n          setAlertID_Card(true)\r\n          handleCloseLoading()\r\n          handleOpenSnackBar(false);\r\n        } else {\r\n          console.log(\"SOMETHING WENT WRONG\")\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false);};\r\n      } catch (err) {\r\n        console.log(err);\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false);\r\n      }\r\n    } else {\r\n      handleCloseLoading()\r\n      handleOpenSnackBar(false);\r\n    }\r\n    \r\n  };\r\n\r\n  useEffect(() => { \r\n    handleOpenLoading()\r\n    setIsLoad(true);\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/aparts-empty`,\r\n        {\r\n          // get content\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        console.log(result.data);\r\n        setApartList({list:result.data,default:[]})\r\n        setIsLoad(false);\r\n        handleCloseLoading()\r\n        // setData(await handleData(result.data, result1.data));\r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false);\r\n      }} catch (err) {\r\n      console.log(err); \r\n      handleCloseLoading()\r\n      handleOpenSnackBar(false);\r\n     \r\n    }\r\n     \r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n   \r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={12}>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"name\"\r\n                  label=\"Họ và tên\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => checkName(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertName && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Tên không hợp lệ \r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridContainer />\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  //defaultValue={email}\r\n                  onChange={(e) => checkEmail(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertEmail && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Email không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"phone\"\r\n                  label=\"Số điên thoại\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => checkPhone(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertPhone && (\r\n                  <Alert severity=\"error\" className={classes.alerts}>\r\n                    Số điện thoại không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"cmnd\"\r\n                  label=\"Số CMND/CCCD\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  //defaultValue={cmnd}\r\n                  onChange={(e) => checkID_Card(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertID_Card && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Số CMND không hợp lệ hoặc đã tồn tại\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"address\"\r\n                  label=\"Quê quán\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  //defaultValue={address}\r\n                  onChange={(e) => checkAddress(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertAddress && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Quê quán không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"license_plates\"\r\n                  label=\"Biển số xe\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  //defaultValue={address}\r\n                  onChange={(e) => checkLicense_plates(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertLicense_plates && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Biển số xe không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n                  {!isLoad && ( <GridItem xs={12} sm={12} md={9}>\r\n                <SearchApart data={apartList} changeData={changeData}></SearchApart>\r\n                </GridItem>\r\n               )}\r\n              <GridItem xs={12} sm={12} md={3}>\r\n              {alertApart && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Căn hộ không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n\r\n              <GridItem xs={12} sm={12} md={6}>\r\n             \r\n            \r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                <Button className={classes.myButton} color=\"primary\" onClick={(e) => handleClickOpen()}>\r\n                  Lưu lại\r\n                </Button>\r\n              </GridItem>\r\n            </GridContainer>\r\n          </GridItem>\r\n        </GridContainer>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n              Xác nhận tạo tài khoản\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n           \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => handleSubmit()} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </LoadingOverlay>\r\n     \r\n\t\t\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\AddUserAccount\\ServiceAddUserAccount.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\Bill.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ElectricBill\\ElectricBill.js",["1130","1131","1132","1133","1134","1135"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleData, calTotal, calFilter } from \"./ServiceElectricBill\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer\";\r\nimport GridItem from \"../../../component/Grid/GridItem\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\nexport default function ElectricBill(props) {\r\n  const classes = useStyles();\r\n  //const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const { selectMonth, selectYear, reLoad } = props;\r\n  const [data, setData] = useState([]);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\n  const [statis, setStatis] = useState({\r\n    total: 0,\r\n    total_pay: 0,\r\n    total_not_pay: 0,\r\n  });\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"apart\",\r\n      label: \"Căn hộ\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"time\",\r\n      label: \"Thời gian\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"old_index\",\r\n      label: \"Chỉ số cũ\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"new_index\",\r\n      label: \"Chỉ số mới\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"consume\",\r\n      label: \"Số điện\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n\r\n    {\r\n      name: \"total\",\r\n      label: \"Tổng giá\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_pay\",\r\n      label: \"Tình trạng.\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"flag\",\r\n      label: \"flag\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_pay_value\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        \r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n\r\n  ];\r\n  \r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK +\r\n          `/api/elec-bill/all/${selectMonth}/${selectYear}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200 || res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        const result1 = await res1.json();\r\n        setData(await handleData(result.data, result1.data));\r\n        setStatis(calTotal(result.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, [reLoad]);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n    <GridContainer>\r\n    <GridContainer xs={12} sm={12} md={12}>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3 style={{marginLeft:\"30px\"}}>Thông kê tháng</h3>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3>Tổng tiền : {<NumberFormat value={statis.total} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => value} />}</h3>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3 style={{ color: \"green\" }}>Tiền đã thu : {<NumberFormat value={statis.total_pay} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => value} />}</h3>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3 style={{ color: \"red\" }}>\r\n            Tiền còn lại: {<NumberFormat value={statis.total_not_pay} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => value} />}\r\n          </h3>\r\n        </GridItem>\r\n      </GridContainer>\r\n\r\n    \r\n\r\n      <GridItem xs={12} sm={12} md={12}>\r\n        <MUIDataTable\r\n          title={\"\"}\r\n          data={data}\r\n          columns={columns}\r\n          options={options}\r\n        />\r\n      </GridItem>\r\n    </GridContainer>\r\n    </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ElectricBill\\ServiceElectricBill.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\BillService.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\DetailUser\\DetailUser.js",["1136","1137","1138","1139","1140","1141","1142"],"import React,{useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\n// import Button from \"../../../component/CustomButtons/Button.js\";\r\nimport Card from \"../../../component/Card/Card.js\";\r\nimport CardAvatar from \"../../../component/Card/CardAvatar.js\";\r\n// import CardBody from \"../../../component/Card/CardBody.js\";\r\nimport CustomTabs from \"../../../component/CustomTabs/CustomTabs.js\";\r\nimport InfoUser from \"./InfoUser.js\"\r\nimport avatar from \"../../../asset/img/faces/marc.jpg\";\r\nimport {useParams} from 'react-router-dom';\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport EditUser from \"./EditUser.js\"\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function UserProfile() {\r\n  const classes = useStyles();\r\n  const token=useSelector(state=>state.user.token);\r\n  const [data,setData]= useState(\"\");\r\n  const [apart,setApart]=useState([]);\r\n  const [isLoading,setIsLoading]=useState(false);\r\n  const {id}=useParams();\r\n  const [image,setImage]=useState(\"\");\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\nconst [reload,setReload]=useState(false);\r\nconst handleOpenSnackBar = (type) => {\r\n  if (type) setSnackType(true);\r\n  else setSnackType(false);\r\n  setOpenSnackBar(true);\r\n};\r\nconst handleCloseSnackBar = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n  setOpenSnackBar(false);\r\n};\r\nconst handleOpenLoading=()=>{\r\n  setIsHandle(true);\r\n}\r\nconst handleCloseLoading=()=>{\r\n  setIsHandle(false);\r\n}\r\nconst handleReload=()=>{\r\n  setReload(!reload);\r\n}\r\nconst getUrl = async (key) => {\r\n  if (key.length >= 1) {\r\n    try {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/uploadv2/image-url?key=${key}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"get image OK\");\r\n        return result.imageUrl;\r\n        // setImage(result.imageUrl);\r\n        // setIsLoad(false);\r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  else{\r\n      return \"\"\r\n  }\r\n};\r\n  useEffect(() => {\r\n    handleOpenLoading() \r\n    setIsLoading(true);\r\n    const getRes = async () => {\r\n      try{\r\n     \r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/user/${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n        \r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts?owner.id=${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200|| res1.status===200) {\r\n        \r\n        const result = await res.json();\r\n        const result1= await res1.json();\r\n        console.log(result1.data);\r\n        \r\n        setData(result.data);\r\n        setApart(result1.data);\r\n        console.log(result.data.avatar!==\"\");\r\n        if(result.data.avatar!==\"\") setImage(await getUrl(result.data.avatar))\r\n        else setImage(\"\")\r\n        setIsLoading(false);\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n        setIsLoading(false);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    }catch (err) {\r\n      console.log(err);\r\n      setIsLoading(false);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div> <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <GridContainer>\r\n      <GridItem xs={12} sm={12} md={4}>\r\n          <Card profile >\r\n            <CardAvatar style={{marginTop:\"20px\"}} profile>    \r\n          \r\n               {image!==\"\"? <img src={image} alt=\"...\" /> : <img  src={process.env.PUBLIC_URL + '/noImage.jpg'}></img>}\r\n            </CardAvatar>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={8}>\r\n        <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[  \r\n              {\r\n                tabName: \"Thông tin tài khoản\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    !isLoading ? <InfoUser apart={apart} data={data} />: <div>Loading....</div>\r\n                )\r\n              }, \r\n               {\r\n                tabName: \"Chỉnh sửa căn hộ\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <EditUser id={id} handleOpenLoading={handleOpenLoading} handleCloseLoading={handleCloseLoading} handleReload={handleReload}/>\r\n                )\r\n              },    \r\n             \r\n                    \r\n            ]}\r\n          />\r\n        </GridItem>\r\n       \r\n      </GridContainer>\r\n     </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n\r\n    </div>\r\n  );\r\n}","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\DetailUser\\InfoUser.js",["1143"],"import React from \"react\";\r\n\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\n// import Button from \"../../../component/CustomButtons/Button.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },autoField: {\r\n    marginTop: theme.spacing(3),\r\n    \r\n  },\r\n}));\r\nexport default function InfoUser(props) {\r\n  const classes = useStyles();\r\n  const { data, apart } = props;\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Họ và tên\"\r\n            //style={{ margin: 8 }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n            \r\n            variant=\"outlined\"\r\n            defaultValue={data.name}\r\n          />\r\n        </GridItem>\r\n\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <TextField\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            //style={{ margin: 8 }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n            \r\n            variant=\"outlined\"\r\n            defaultValue={data.email}\r\n          />\r\n        </GridItem>\r\n\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <TextField\r\n            id=\"phone\"\r\n            label=\"Số điên thoại\"\r\n            //style={{ margin: 8 }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n            \r\n            variant=\"outlined\"\r\n            defaultValue={data.phone}\r\n          />\r\n        </GridItem>\r\n\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <TextField\r\n            id=\"cmnd\"\r\n            label=\"Số CMND\"\r\n            //style={{ margin: 8 }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n            \r\n            variant=\"outlined\"\r\n            defaultValue={data.identify_card}\r\n          />\r\n        </GridItem>\r\n\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <TextField\r\n            id=\"address\"\r\n            label=\"Quê quán\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            \r\nInputProps={{\r\n  readOnly: true,\r\n}}\r\n\r\n            variant=\"outlined\"\r\n            defaultValue={data.native_place}\r\n          />\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Autocomplete\r\n            multiple\r\n            disableClearable={true}\r\n            closeIcon={<></>}\r\n            limitTags={5}\r\n            id=\"multiple-limit-tags\"\r\n            options={apart}\r\n            getOptionLabel={(option) => option.name}\r\n            defaultValue={apart}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                className={classes.autoField}\r\n                variant=\"outlined\"\r\n                label=\"Danh sách căn hộ\"\r\n                placeholder=\"\"\r\n              />\r\n            )}\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\WaterBill\\WaterBill.js",["1144","1145","1146","1147"],"import { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport NumberFormat from 'react-number-format';\r\nimport { useSelector } from \"react-redux\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer\";\r\nimport GridItem from \"../../../component/Grid/GridItem\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\";\r\nimport { calTotal, handleData } from \"./ServiceWaterBill\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  \r\n}));\r\nexport default function WaterBill(props) {\r\n  const classes = useStyles();\r\n  //const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const {selectMonth,selectYear,reLoad}=props;\r\n  const [data, setData] = useState([]);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\n  const [statis, setStatis] = useState({\r\n    total: 0,\r\n    total_pay: 0,\r\n    total_not_pay: 0,\r\n  });\r\n\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"apart\",\r\n      label: \"Căn hộ\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"time\",\r\n      label: \"Thời gian\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"old_index\",\r\n      label: \"Chỉ số cũ\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"new_index\",\r\n      label: \"Chỉ số mới\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"consume\",\r\n      label: \"Số điện\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n\r\n    {\r\n      name: \"total\",\r\n      label: \"Tổng giá\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_pay\",\r\n      label: \"Tình trạng.\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"flag\",\r\n      label: \"flag\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_pay_value\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        \r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n\r\n  ];\r\n\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      \r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/water-bill/all/${selectMonth}/${selectYear}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200|| res1.status===200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        const result1 = await res1.json();\r\n        setData(await handleData(result.data,result1.data));\r\n        setStatis(calTotal(result.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, [reLoad]);\r\n  return (\r\n    <div><LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n    <GridContainer>\r\n    <GridContainer xs={12} sm={12} md={12}>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3 style={{marginLeft:\"30px\"}}>Thông kê tháng</h3>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3>Tổng tiền : {<NumberFormat value={statis.total} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => value} />}</h3>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3 style={{ color: \"green\" }}>Tiền đã thu : {<NumberFormat value={statis.total_pay} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => value} />}</h3>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3 style={{ color: \"red\" }}>\r\n            Tiền còn lại: {<NumberFormat value={statis.total_not_pay} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => value} />}\r\n          </h3>\r\n        </GridItem>\r\n      </GridContainer>\r\n\r\n    \r\n\r\n    <GridItem xs={12} sm={12} md={12}>\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    </GridItem>\r\n  </GridContainer>\r\n  </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n  </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\WaterBill\\ServiceWaterBill.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\OtherBill\\OtherBill.js",["1148","1149","1150","1151","1152"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleData ,calTotal, calFilter} from \"./ServiceOtherBill\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport GridContainer from \"../../../component/Grid/GridContainer\";\r\nimport GridItem from \"../../../component/Grid/GridItem\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport NumberFormat from 'react-number-format';\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\nexport default function OtherBill(props) {\r\n  const classes = useStyles();\r\n  //const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const { selectMonth, selectYear, reLoad } = props;\r\n  const [data, setData] = useState([]);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\n  const [statis, setStatis] = useState({\r\n    total: 0,\r\n    total_pay: 0,\r\n    total_not_pay: 0,\r\n  });\r\n\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"apart\",\r\n      label: \"Căn hộ\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"time\",\r\n      label: \"Thời gian\",\r\n        options: {\r\n          display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"apart_management\",\r\n      label: \"Phí quản lý\",\r\n      options: {\r\n        \r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"parking_fees\",\r\n      label: \"Phí đỗ xe\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"maintenance_fee\",\r\n      label: \"Phí bảo trì\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"service_charge\",\r\n      label: \"Phí phục vụ\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"total\",\r\n      label: \"Tổng giá\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"note\",\r\n      label: \"Ghi chú\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_pay\",\r\n      label: \"Tình trạng.\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"flag\",\r\n      label: \"flag\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_pay_value\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        \r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n\r\n  ];\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK +\r\n          `/api/other-bill/all/${selectMonth}/${selectYear}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200 || res1.status === 200) {\r\n       \r\n        const result = await res.json();\r\n        const result1 = await res1.json(); \r\n        // console.log(\"Vo 200OK\");\r\n        console.log(result);\r\n        setData(await handleData(result.data, result1.data));\r\n        setStatis(calTotal(result.data));\r\n        \r\n        handleCloseLoading()\r\n        \r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, [reLoad]);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <GridContainer xs={12} sm={12} md={12}>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3 style={{marginLeft:\"30px\"}}>Thông kê tháng</h3>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3>Tổng tiền : {<NumberFormat value={statis.total} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => value} />}</h3>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3 style={{ color: \"green\" }}>Tiền đã thu : {<NumberFormat value={statis.total_pay} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => value} />}</h3>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3 style={{ color: \"red\" }}>\r\n            Tiền còn lại: {<NumberFormat value={statis.total_not_pay} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => value} />}\r\n          </h3>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n      </LoadingOverlay>\r\n    <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\OtherBill\\ServiceOtherBill.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ImportBill\\ImportBill.js",["1153","1154","1155","1156","1157","1158","1159","1160","1161"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {\r\n  createTimeChoice,\r\n  type,\r\n  handleDataTable,\r\n  columns,\r\n  columnsOther,\r\n} from \"./ImportBillService.js\";\r\nimport DialogTable from \"./DialogTable.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  myButton: {\r\n    float: \"right\",\r\n  },\r\n}));\r\nexport default function InfoBill() {\r\n  const date = new Date();\r\n  const currentMonth = date.getMonth();\r\n  const currentYear = date.getFullYear();\r\n  const history=useHistory();\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [selectType, setSelectType] = useState(\"Hóa đơn điện\");\r\n  const [selectMonth, setSelectMonth] = useState(\"\");\r\n  const [selectYear, setSelectYear] = useState(currentYear);\r\n  const { month, year } = createTimeChoice();\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [fileSource, setFileSource] = useState();\r\n  const [data, setData] = useState();\r\n  const [fileName1, setFileName1] = useState(\"\");\r\n  const [fileSource1, setFileSource1] = useState();\r\n  const [data1, setData1] = useState();\r\n  const [fileName2, setFileName2] = useState(\"\");\r\n  const [fileSource2, setFileSource2] = useState();\r\n  const [data2, setData2] = useState();\r\n  const [selectedData, setSelectedData] = useState();\r\n  const [selectedCol, setSelectedCol] = useState();\r\n  const [isClear, setIsClear] = useState(true);\r\n  const [open, setOpen] = useState(false); // dialog review\r\n  const [open1, setOpen1] = useState(false); //dialog xác nhận\r\n\r\n  const [openSnackBar, setOpenSnackBar] = useState(false);\r\n  const [snackType, setSnackType] = useState(true);\r\n  const [isHandle, setIsHandle] = useState(false);\r\n  \r\n  const handeFile = async (file, type) => {\r\n    // let arr = file[0].type.split(\"/\");\r\n\r\n    //console.log(\"fileExtension: \" + arr.pop()); //fileExtension\r\n    //console.log(\"fileMediaType: \" + arr.pop()); //fileMediaType\r\n    //console.log(path);\r\n    // console.log(fileName);\r\n    const reader = new FileReader();\r\n    await reader.readAsText(file[0]);\r\n    reader.onloadend = async () => {\r\n      switch (type) {\r\n        case 0:\r\n          //console.log(reader.result);\r\n          await setFileName(file[0].name.split(\".\").shift());\r\n          await setFileSource(reader.result);\r\n          setData(handleDataTable(reader.result));\r\n          break;\r\n        case 1:\r\n          //console.log(reader.result);\r\n          await setFileName1(file[0].name.split(\".\").shift());\r\n          await setFileSource1(reader.result);\r\n          setData1(handleDataTable(reader.result));\r\n          break;\r\n        case 2:\r\n          //console.log(reader.result);\r\n          await setFileName2(file[0].name.split(\".\").shift());\r\n          await setFileSource2(reader.result);\r\n          setData2(handleDataTable(reader.result));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  };\r\n  const handleSelectMonth = async (month) => {\r\n    setSelectMonth(month);\r\n    await checkClear(month, selectYear);\r\n  };\r\n  const handleSelectYear = async (year) => {\r\n    setSelectYear(year);\r\n    await checkClear(selectMonth, year);\r\n  };\r\n  const checkClear = async (month, year) => {\r\n    try {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/all-bill/all/${month}/${year}`,\r\n        {\r\n          method: \"GET\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        if (result.data.length !== 0) {\r\n          console.log(\"not clear\");\r\n          setIsClear(false);\r\n        } else {\r\n          console.log(\"clear\");\r\n          setIsClear(true);\r\n        }\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        handleOpenSnackBar(false);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false);\r\n    }\r\n  };\r\n  const deleteData = async () => {\r\n    try {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK +\r\n          `/api/all-bill/delete/${selectMonth}/${selectYear}`,\r\n        {\r\n          method: \"DELETE\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"delete ok\");\r\n        return true;\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        handleOpenSnackBar(false);\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n  const handleOpenLoading = () => {\r\n    setIsHandle(true);\r\n  };\r\n  const handleCloseLoading = () => {\r\n    setIsHandle(false);\r\n  };\r\n  const handleSubmit = async () => {\r\n    handleClose1();\r\n    handleOpenLoading();\r\n    let temp;\r\n    if ( selectMonth !== \"\" &&fileSource !== undefined &&fileSource1 !== undefined &&fileSource2 !== undefined) {\r\n      if (isClear === false) temp = await deleteData();\r\n      else temp=true;\r\n\r\n      if (temp && (await getlink(fileName, fileSource, 0)) &&(await getlink(fileName1, fileSource1, 1)) &&(await getlink(fileName2, fileSource2, 2)))\r\n     { handleOpenSnackBar(true);\r\n        setIsClear(false)}\r\n      else {\r\n       handleOpenSnackBar(false);}\r\n    }\r\n    else{ handleOpenSnackBar(false);}\r\n    handleCloseLoading();\r\n    \r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClickOpen1 = () => {\r\n    setOpen1(true);\r\n  };\r\n\r\n  const handleClose1 = () => {\r\n    setOpen1(false);\r\n  };\r\n  const getlink = async (name, source, type) => {\r\n    try {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK +\r\n          `/api/upload-csv/signed-url?fileName=${name}&extension=csv&mediaType=text`, ///api/upload-csv/signed-url?fileName=electric&extension=vnd.ms-excel&mediaType=application\r\n        {\r\n          method: \"GET\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"getlink ok\");\r\n        return await upload(result.uploadUrl, result.key, source, type);\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        handleOpenSnackBar(false);\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false);\r\n      return false;\r\n    }\r\n  };\r\n  const upload = async (uploadUrl, key, source, type) => {\r\n    try {\r\n      const res = await fetch(uploadUrl, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"text/csv\" },\r\n        body: source,\r\n      });\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"upload ok\");\r\n        return await importFile(key, type);\r\n        // } else if (res.status === 500) {\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        handleOpenSnackBar(false);\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false);\r\n      return false;\r\n    }\r\n  };\r\n  const importFile = async (key, type) => {\r\n    const body = {\r\n      key: key,\r\n      month: parseInt(selectMonth),\r\n      year: parseInt(selectYear),\r\n    };\r\n    console.log(body);\r\n    let temp = \"a\";\r\n    console.log(\"selectType\" + selectType);\r\n    if (type === 0) temp = `/api/elec-bill/import-file`;\r\n    if (type === 1) temp = `/api/water-bill/import-file`;\r\n    if (type === 2) temp = `/api/other-bill/import-file`;\r\n\r\n    console.log(temp);\r\n    try {\r\n      const res = await fetch(process.env.REACT_APP_API_LINK + temp, {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(result);\r\n        console.log(\"import ok\");\r\n        return true;\r\n        // } else if (res.status === 500) {\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        handleOpenSnackBar(false);\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false);\r\n      return false;\r\n    }\r\n  };\r\n  const createTable = async (type) => {\r\n    switch (type) {\r\n      case 0:\r\n        setSelectedData(data);\r\n        setSelectedCol(columns);\r\n        break;\r\n      case 1:\r\n        setSelectedData(data1);\r\n        setSelectedCol(columns);\r\n        break;\r\n      case 2:\r\n        setSelectedData(data2);\r\n        setSelectedCol(columnsOther);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    handleClickOpen();\r\n  };\r\n  //\r\n \r\n  return (\r\n    <div>\r\n      <LoadingOverlay\r\n        active={isHandle}\r\n        spinner\r\n        text=\"Đang xử lý vui lòng chờ...\"\r\n      >\r\n        <GridContainer>\r\n          <hr></hr>\r\n          <GridItem xs={12} sm={12} md={12}>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Nhập hóa đơn</h4>\r\n            </CardHeader>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"outlined-select-currency-native\"\r\n                  select\r\n                  label=\"Tháng\"\r\n                  margin=\"normal\"\r\n                  //defaultValue={currentMonth}\r\n                  onChange={(e) => handleSelectMonth(e.target.value)}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                >\r\n                  {month.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {!isClear && (\r\n                  <Alert id={isClear} severity=\"warning\">\r\n                    Tháng đã có dữ liệu. Hệ thống sẽ xóa dữ liệu cũ nếu tiếp tục\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"outlined-select-currency-native\"\r\n                  select\r\n                  label=\"Năm\"\r\n                  margin=\"normal\"\r\n                  defaultValue={currentYear}\r\n                  onChange={(e) => handleSelectYear(e.target.value)}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                >\r\n                  {year.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.id}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}></GridItem>\r\n              <GridItem xs={12} sm={12} md={2}>\r\n                <label style={{ margin: \"50px 15px 15px 15px \" }}>\r\n                  Hóa đơn điện\r\n                </label>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={5}>\r\n                <input\r\n                  style={{ margin: \"15px\" }}\r\n                  type=\"file\"\r\n                  onChange={(e) => handeFile(e.target.files, 0)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={4}>\r\n                <Button color=\"primary\" onClick={(e) => createTable(0)}>\r\n                  Xem trước\r\n                </Button>\r\n              </GridItem>\r\n\r\n              <GridItem xs={12} sm={12} md={2}>\r\n                <label style={{ margin: \"15px\" }}>Hóa đơn nước</label>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={5}>\r\n                <input\r\n                  style={{ margin: \"15px\" }}\r\n                  type=\"file\"\r\n                  onChange={(e) => handeFile(e.target.files, 1)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={4}>\r\n                <Button color=\"primary\" onClick={(e) => createTable(1)}>\r\n                  Xem trước\r\n                </Button>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={2}>\r\n                <label style={{ margin: \"15px\" }}>Hóa đơn khác</label>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={5}>\r\n                <input\r\n                  style={{ margin: \"15px\" }}\r\n                  type=\"file\"\r\n                  onChange={(e) => handeFile(e.target.files, 2)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={4}>\r\n                <Button color=\"primary\" onClick={(e) => createTable(2)}>\r\n                  Xem trước\r\n                </Button>\r\n              </GridItem>\r\n            </GridContainer>\r\n          </GridItem>\r\n          <div />\r\n\r\n          <GridItem xs={12} sm={12} md={9}>\r\n            <Button\r\n              className={classes.myButton}\r\n              color=\"primary\"\r\n              onClick={(e) => handleClickOpen1()}\r\n            >\r\n              Tạo\r\n            </Button>\r\n          </GridItem>\r\n        </GridContainer>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">Xác nhận</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <DialogTable\r\n                data={selectedData}\r\n                columns={selectedCol}\r\n              ></DialogTable>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Trở về\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={open1}\r\n          onClose={handleClose1}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {isClear\r\n              ? \"Xác nhận xử lý\"\r\n              : \"Xác nhận xóa dữ liệu cũ trước khi xử lý\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              {!isClear && (\r\n                <Alert severity=\"warning\">\r\n                  Tháng đã có dữ liệu. Hệ thống sẽ xóa dữ liệu cũ nếu tiếp tục\r\n                </Alert>\r\n              )}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose1} color=\"primary\">\r\n              Hủy\r\n            </Button>\r\n            <Button onClick={(e) => handleSubmit()} color=\"primary\">\r\n              Xác nhận\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </LoadingOverlay>\r\n      <Snackbar\r\n        open={openSnackBar}\r\n        type={snackType}\r\n        handleClose={handleCloseSnackBar}\r\n      ></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ImportBill\\ImportBillService.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\AllBill\\AllBill.js",["1162","1163","1164","1165"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer\";\r\nimport GridItem from \"../../../component/Grid/GridItem\";\r\nimport { handleData, calTotal} from \"./ServiceAllBill\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Check from \"@material-ui/icons/Check\";\r\n\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport NumberFormat from 'react-number-format';\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function AllBill(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const { selectMonth, selectYear, reLoad } = props;\r\n  const [data, setData] = useState([]);\r\n  const [open,setOpen]=useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\n  const [selectedRow,setSelectRow]=useState([null, 0, null, null, 0, 0, 0, 0, null, false]);\r\n  const [reload2,setReload2]=useState(true);\r\n  const [statis, setStatis] = useState({\r\n    total: 0,\r\n    total_pay: 0,\r\n    total_not_pay: 0,\r\n  });\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"apart\",\r\n      label: \"Căn hộ\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"time\",\r\n      label: \"Thời gian\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"electric\",\r\n      label: \"Tiền điện\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"water\",\r\n      label: \"Tiền nước\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"other\",\r\n      label: \"Chi phí khác\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n\r\n    {\r\n      name: \"total\",\r\n      label: \"Tổng tiền\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_pay\",\r\n      label: \"Tình trạng.\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"flag\",\r\n      label: \"flag\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_pay_value\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        //display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n            <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              color=\"red\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0])}\r\n            >\r\n              <EditIcon color=\"primary\"/>\r\n            </Fab>\r\n          </Tooltip>\r\n          {  !tableMeta.rowData[9]?\r\n          <Tooltip\r\n          id=\"tooltip-top\"\r\n          title=\"Thanh toán\"\r\n          placement=\"top\"\r\n          classes={{ tooltip: classes.tooltip }}\r\n        >\r\n          <Fab\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={classes.margin}\r\n            onClick={() => handleIsPay(tableMeta.rowData)}\r\n          >\r\n            <Check />\r\n          </Fab>\r\n        </Tooltip>: <Tooltip\r\n                id=\"tooltip-top-start\"\r\n                title=\"Hủy thanh toán\"\r\n                placement=\"top\"\r\n                classes={{ tooltip: classes.tooltip }}\r\n              >\r\n                <Fab\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  aria-label=\"add\"\r\n                  className={classes.margin}\r\n                  onClick={() => handleIsPay(tableMeta.rowData)}\r\n                >\r\n                  <Close />\r\n                </Fab>\r\n              </Tooltip>}\r\n            \r\n          </div>\r\n              \r\n            \r\n          );\r\n        },\r\n        \r\n      },\r\n    },\r\n  ];\r\n  const handleClick = (id) => {\r\n    console.log(id);\r\n    history.push(`/admin/bill/detail/all/${id}`);\r\n  };\r\n  const handleIsPay = (row) => {\r\n    setSelectRow(row);\r\n    handleClickOpen();\r\n    console.log(row);\r\n    //history.push(`/userdetails/${id}`);\r\n  };\r\n  const handleSubmit= async()=>{\r\n    handleOpenLoading()\r\n    console.log(\"submit\");\r\n    handleClose();\r\n    try {\r\n      const body=\r\n      {\r\n        bill_id:selectedRow[0],\r\n        status:!selectedRow[9]\r\n      }\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK +\r\n          `/api/all-bill/change-pay`, \r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n         \r\n          }, \r\n          body:JSON.stringify(body)\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"ok\");\r\n        setReload2(!reload2);\r\n        handleOpenSnackBar(true)\r\n        handleCloseLoading()\r\n      } else{ console.log(\"SOMETHING WENT WRONG\")\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()};\r\n    }catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n  }\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK +\r\n          `/api/all-bill/all/${selectMonth}/${selectYear}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200 || res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        \r\n        const result = await res.json();\r\n        const result1 = await res1.json();\r\n        console.log(result);\r\n        setData(await handleData(result.data, result1.data));\r\n        setStatis(calTotal(result.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, [reLoad,reload2]);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n    <GridContainer>\r\n      <GridContainer xs={12} sm={12} md={12}>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3 style={{marginLeft:\"30px\"}}>Thông kê tháng</h3>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3>Tổng tiền : {<NumberFormat value={statis.total} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => value} />}</h3>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3 style={{ color: \"green\" }}>Tiền đã thu : {<NumberFormat value={statis.total_pay} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => value} />}</h3>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <h3 style={{ color: \"red\" }}>\r\n            Tiền còn lại: {<NumberFormat value={statis.total_not_pay} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => value} />}\r\n          </h3>\r\n        </GridItem>\r\n      </GridContainer>\r\n\r\n      <GridItem xs={12} sm={12} md={12}>\r\n        <MUIDataTable\r\n          title={\"\"}\r\n          data={data}\r\n          columns={columns}\r\n          options={options}\r\n        />\r\n      </GridItem>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{selectedRow[9]||false?\"Xác nhận hủy thanh toán\":\"Xác nhận thanh toán\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n           <div>Căn hộ: {selectedRow[2]} </div> \r\n            <div>Tổng tiền: {selectedRow[7]}</div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </GridContainer>\r\n    </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\AllBill\\ServiceAllBill.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ReportBill\\ReportBill.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ReportBill\\NewReport.js",["1166","1167"],"import Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\";\r\nimport { handleData } from \"./ServiceReportBill.js\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\nexport default function NewReport(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [isHandle, setIsHandle] = useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n\r\n  // const { selectMonth, selectYear, reLoad } = props;\r\n  const [data, setData] = useState([]);\r\n\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"apart_name\",\r\n      label: \"Căn hộ\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"time\",\r\n      label: \"Thời gian\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"total_money\",\r\n      label: \"Tổng giá\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_pay\",\r\n      label: \"Tình trạng.\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_pay_value\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n\r\n    {\r\n      name: \"\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n              <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              color=\"red\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0])}\r\n            >\r\n              <EditIcon color=\"primary\"/>\r\n            </Fab>\r\n          </Tooltip>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleClick = (id) => {\r\n    console.log(id);\r\n    history.push(`/admin/reportbill/${id}`);\r\n  };\r\n  \r\n const handleOpenSnackBar = (type) => {\r\n  if (type) setSnackType(true);\r\n  else setSnackType(false);\r\n  setOpenSnackBar(true);\r\n};\r\nconst handleCloseSnackBar = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n  setOpenSnackBar(false);\r\n};\r\n  const handleOpenLoading = () => {\r\n    setIsHandle(true);\r\n  };\r\n  const handleCloseLoading = () => {\r\n    setIsHandle(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/all-bill/all-report`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"Vo 200OK\");\r\n        console.log(result.data);\r\n        setData(await handleData(result.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false)\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay\r\n        active={isHandle}\r\n        spinner\r\n        text=\"Đang xử lý vui lòng chờ...\"\r\n      >\r\n        <MUIDataTable\r\n          title={\"\"}\r\n          data={data}\r\n          columns={columns}\r\n          options={options}\r\n        />\r\n      </LoadingOverlay>\r\n      <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\component\\Dialog\\AlertDialogSlide.js",[],["1168","1169"],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ReportBill\\ServiceReportBill.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ReportBill\\HandledReport.js",["1170","1171"],"import Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\";\r\nimport { createTimeChoice } from \"../BillService.js\";\r\nimport { handleData } from \"./ServiceReportBill.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    \r\n  },\r\n}));\r\nexport default function HandledReport(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  //   const { selectMonth, selectYear, reLoad } = props;\r\n  const {month,year}= createTimeChoice()  \r\n  const [isHandle,setIsHandle]=useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n  const date = new Date();\r\n  const currentMonth = date.getMonth();\r\n  const currentYear = date.getFullYear();\r\n  const [selectMonth, setSelectMonth] = useState(currentMonth);\r\n  const [selectYear, setSelectYear] = useState(currentYear);\r\n  const [reload,setReload]=useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"apart_name\",\r\n      label: \"Căn hộ\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"time\",\r\n      label: \"Thời gian\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"total_money\",\r\n      label: \"Tổng giá\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_pay\",\r\n      label: \"Tình trạng.\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_pay_value\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n\r\n    {\r\n      name: \"\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n              <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              color=\"red\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0])}\r\n            >\r\n              <EditIcon color=\"primary\"/>\r\n            </Fab>\r\n          </Tooltip>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleClick = (id) => {\r\n    console.log(id);\r\n    history.push(`reportbill/${id}`);\r\n  };\r\n  const changeMonth=(month)=>\r\n  {\r\n    setSelectMonth(month);\r\n    setReload(!reload);\r\n  }\r\n   const changeYear=(year)=>{\r\n     setSelectYear(year)\r\n    setReload(!reload);\r\n   }\r\n   const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  \r\n const handleOpenSnackBar = (type) => {\r\n  if (type) setSnackType(true);\r\n  else setSnackType(false);\r\n  setOpenSnackBar(true);\r\n};\r\nconst handleCloseSnackBar = (event, reason) => {\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n  setOpenSnackBar(false);\r\n};\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK +\r\n          `/api/all-bill/all-resolved/${selectMonth}/${selectYear}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"Vo 200OK\");\r\n        console.log(result);\r\n        setData(await handleData(result.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n  return ( \r\n  <div>\r\n    <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n    <GridContainer>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <TextField\r\n            id=\"outlined-select-currency-native\"\r\n            select\r\n            label=\"Tháng\"\r\n            defaultValue={currentMonth}\r\n            onChange={(e) => changeMonth(e.target.value)}\r\n            SelectProps={{\r\n              native: true,\r\n            }}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n          >\r\n            {month.map((option) => (\r\n              <option key={option.id} value={option.id}>\r\n                {option.id}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={3}>\r\n          <TextField\r\n            id=\"outlined-select-currency-native\"\r\n            select\r\n            label=\"Năm\"\r\n            defaultValue={currentYear}\r\n            onChange={(e) => changeYear(e.target.value)}\r\n            SelectProps={{\r\n              native: true,\r\n            }}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n          >\r\n            {year.map((option) => (\r\n              <option key={option.id} value={option.id}>\r\n                {option.id}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        </GridItem>\r\n      \r\n      <GridItem xs={12} sm={12} md={12}>\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n      </GridItem>\r\n     \r\n    \r\n    </GridContainer> \r\n    </LoadingOverlay>\r\n      <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ReportBill\\DetailReport.js",["1172","1173","1174","1175","1176","1177","1178","1179","1180"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport Card from \"../../../component/Card/Card.js\";\r\n\r\nimport SlideShow from \"../../../component/SlideShow/SlideShow.js\"\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport NumberFormat from 'react-number-format';\r\nimport PushNotiAdmin from \"../../PushNotiAdmin.js\"\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  myButton:{\r\n    float: \"right\",\r\n    width:\"200px\"\r\n }\r\n}));\r\nexport default function DetailReport(props) {\r\n  //const dispatch = useDispatch();\r\n  const {PushNotificationAdmin}=PushNotiAdmin()\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const { id } = useParams();\r\n  const [data, setData] = useState({\r\n    id: \"\",\r\n    apart_id: \"\",\r\n    apart_name: \"\",\r\n    electric_bill: 0,\r\n    water_bill: 0,\r\n    year: 0,\r\n  });\r\n  \r\n  const [image, setImage] = useState([]);\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [selected, setSelected] = useState(true);// true:chấp nhận|| false:không chấp nhận\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false); \r\nconst [reload,setReload]=useState(true);\r\nconst [token_device,setToken_device]=useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    handleClose();\r\n    let body = {};\r\n    handleOpenLoading()\r\n    try {\r\n      if (selected)\r\n        body = {\r\n          apart_id: data.apart_id,\r\n          title: \"Khiếu nại đã được xử lý\",\r\n          content:\r\n            \"BQL chung cư thông báo, khiếu nại của anh/chị đã được giải quyết. Đề nghị kiểm tra lại.\",\r\n        };\r\n      else\r\n        body = {\r\n          apart_id: data.apart_id,\r\n          title: \"Khiếu nại không được xác nhận\",\r\n          content:\r\n            \"BQL chung cư thông báo, khiếu nại của anh/chị chưa hợp lệ. Đề nghị liên hệ BQL để giải quyết.\",\r\n        };\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/bill-noti/create-confirm`,\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"ok\");\r\n        if(await handleChangeReport()){\r\n          if (selected) await handleChangeStatus();\r\n            \r\n            setReload(!reload)\r\n            handleCloseLoading()\r\n            PushNotification()\r\n            handleOpenSnackBar(true)\r\n            PushNotificationAdmin()\r\n        }\r\n        else{ handleOpenSnackBar(false)\r\n          handleCloseLoading()}\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n    }\r\n  };\r\n  const handleChangeStatus = async () => {\r\n    try {\r\n      const body = {\r\n        bill_id: data.id,\r\n        status: !data.is_pay,\r\n      };\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/all-bill/change-pay`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"ok\");\r\n       \r\n        handleOpenSnackBar(true)\r\n        handleCloseLoading()\r\n        return true\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n        return false\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n      \r\n    }\r\n  };\r\n  const PushNotification = async () => {\r\n    try {\r\n      let body\r\n      if (selected)\r\n      body = {\r\n        tokens: [token_device],\r\n        title: \"Khiếu nại đã được xử lý\",\r\n        content:\r\n          \"BQL chung cư thông báo, khiếu nại của anh/chị đã được giải quyết. Đề nghị kiểm tra lại.\",\r\n          type: 1,\r\n      };\r\n    else\r\n      body = {\r\n        tokens: [token_device],\r\n        title: \"Khiếu nại không được xác nhận\",\r\n        content:\r\n          \"BQL chung cư thông báo, khiếu nại của anh/chị chưa hợp lệ. Đề nghị liên hệ BQL để giải quyết.\",\r\n          type: 1,\r\n      };\r\n\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/push-noti/add-notice`,\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"push noti ok\");\r\n        //history.push(`/admin/reportbill`);\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const handleChangeReport = async () => {\r\n    try {\r\n      const body = {\r\n        bill_id: data.id,\r\n        status: false,\r\n      };\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/all-bill/change-report`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"ok\");\r\n        return true;\r\n        \r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n        return false\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n      return false\r\n    }\r\n  };\r\n  \r\n  const handleClickOpen = (temp) => {\r\n    setSelected(temp);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  const getUrl = async (key) => {\r\n    let temp=[];\r\n    if (key.length >= 1) {\r\n      try {\r\n        for (let i=0;i<key.length;i++)\r\n       { const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/uploadv2/image-url?key=${key[i]}`,\r\n          {\r\n            // get apart\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\"get url ok\");\r\n          temp[i]={value:result.imageUrl};\r\n        } else {\r\n          handleOpenSnackBar(false)\r\n        }}\r\n        console.log(temp);\r\n        return temp;\r\n      } catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n      }\r\n    }\r\n    else\r\n   return [\"\"]\r\n  };\r\n\r\n  const getTokenApart = async (data) => {\r\n    try {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/user/token-device/${data}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"user OK\");\r\n        console.log(result);\r\n        setToken_device(result.token_device)\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/all-bill/${id}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"Vo 200OK\");\r\n        console.log(result.data);\r\n        setData(result.data);\r\n        await getTokenApart(result.data.apart_id)\r\n        setImage(await getUrl(await result.data.image));\r\n        setIsLoad(false);\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)  \r\n      }}catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n      }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div>\r\n       <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      {!isLoad ? (\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={5}>\r\n            <Card profile>\r\n            <SlideShow  images={image}></SlideShow>\r\n            </Card>\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={7}>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>\r\n                {data.report ? \"Khiếu nại chưa xử lý\" : \"Khiếu nại đã xử lý\"}\r\n              </h4>\r\n            </CardHeader>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <TextField\r\n                  id=\"aprt_name\"\r\n                  label=\"Tên Phòng\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  value={data.apart_name || \"\"}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"time\"\r\n                  label=\"Thời gian\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  value={data.month + \"/\" + data.year}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n<NumberFormat value={data.electric_bill} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => <TextField\r\n                  id=\"elec\"\r\n                  label=\"Hóa đơn điện\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                 value={value}\r\n                />} />\r\n                <NumberFormat value={data.water_bill} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) =>  <TextField\r\n                  id=\"water\"\r\n                  label=\"Hóa đơn nước\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                value={value}\r\n                />} />\r\n               <NumberFormat value={data.other_bill} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) =>  <TextField\r\n                  id=\"other\"\r\n                  label=\"Hóa đơn khác\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  value={value}\r\n                />} />\r\n               <NumberFormat value={data.total_money} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) =>  \r\n               <TextField\r\n                  id=\"total\"\r\n                  label=\"Tổng tiền\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  value={value}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />} />\r\n                <TextField\r\n                  id=\"is_pay\"\r\n                  label=\"Tình trạng\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  value={\r\n                    data.is_pay ? \"Đã thanh toán\" : \"Chưa thanh toán\"\r\n                  }\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                ></TextField>\r\n              </GridItem>\r\n            </GridContainer>\r\n          </GridItem>\r\n          <div />\r\n          <GridItem xs={12} sm={12} md={3} />\r\n          <GridItem xs={12} sm={12} md={3}>\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={6}>\r\n            {data.report ? (\r\n              <>\r\n                <Button  className={classes.myButton} color=\"primary\" onClick={(e) => handleClickOpen(true)}>\r\n                  Chấp nhận\r\n                </Button>\r\n                <Button  className={classes.myButton} color=\"primary\" onClick={(e) => handleClickOpen(false)}>\r\n                  Không chấp nhận\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </GridItem>\r\n        </GridContainer>\r\n      ) : (\r\n        <div>Đang xử lý, vui lòng chờ...</div>\r\n      )}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {selected ? \"Xác nhận đã xử lý\" : \"Xác nhận không xử lý\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            <div>Căn hộ: {data.apart_name}</div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n     </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\ImportBill\\DialogTable.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\AllBill\\DetailAllBill.js",["1181","1182","1183","1184","1185","1186"],"// import avatar from \"../../../asset/img/faces/marc.jpg\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport NumberFormat from 'react-number-format';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\";\r\nimport { content, handleData, title } from \"./ServiceDetailAllBill.js\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  myButton:{\r\n     float: \"right\",\r\n     width:\"200px\"\r\n  }\r\n}));\r\nexport default function DetailAllBill(props) {\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.user.token);\r\n  const date = new Date();\r\n  const currentDate = date.getDate();\r\n  const currentMonth = date.getMonth();\r\n  const currentYear = date.getFullYear();\r\n  const { bill_id } = useParams();\r\n  const [data, setData] = useState({\r\n    id: \"\",\r\n    apart_id: \"\",\r\n    apart_name: \"\",\r\n    electric_bill: 0,\r\n    water_bill: 0,\r\n    year: 0,\r\n  });\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [open1, setOpen1] = useState(false);\r\n  const [open2, setOpen2] = useState(false);\r\n  const [reload, setReload] = useState(true);\r\n  const [isLate, setIsLate] = useState(false);\r\n  const [isDenied, setIsDenied] = useState(false);\r\n  const [isHandle,setIsHandle]=useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n   const [snackType,setSnackType]=useState(true);\r\n  const checkTime = (data) => {\r\n    if (isLastMonth(data) && currentDate >= process.env.REACT_APP_TIME_LATE) {\r\n      setIsLate(true);\r\n    }\r\n    if (isLastMonth(data) && currentDate >= process.env.REACT_APP_TIME_DENIED) {\r\n      setIsDenied(true);\r\n    }\r\n  };\r\n  const isLastMonth=(data)=>\r\n  { \r\n    if(parseInt(currentMonth)===parseInt(data.month) &&parseInt(currentYear)===parseInt(data.year))\r\n    return true;\r\n  }\r\n  const handleSubmit = async () => {\r\n    console.log(\"submit\");\r\n    handleClose();\r\n    try {\r\n      const body = {\r\n        bill_id: data.id,\r\n        status: !data.is_pay,\r\n      };\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/all-bill/change-pay`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"ok\");\r\n        setReload(!reload);\r\n      } else console.log(\"SOMETHING WENT WRONG\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const handleNoti1 = async() => {\r\n      handleOpenLoading()\r\n      handleClose1()\r\n      const body = {\r\n        apart_id: data.apart_id,\r\n        apart_name: data.apart_name,\r\n        month: data.month,\r\n        year: data.year,\r\n        total_money: data.total_money \r\n        \r\n      };\r\n      console.log(body);\r\n     handleNoti(body,`/api/bill-noti/create-reminder`,\"POST\")\r\n    \r\n\r\n  };\r\n  const handleNoti2 = () => {\r\n    handleOpenLoading()\r\n    handleClose2()\r\n  const body = {\r\n        apart_id: data.apart_id,\r\n        apart_name: data.apart_name,\r\n        month: data.month,\r\n        year: data.year,\r\n    \r\n      };\r\n      console.log(body);\r\n     handleNoti(body,`/api/bill-noti/create-stop`,\"POST\")\r\n  };\r\n  const handleNoti = async(body, url,method)=>\r\n  {\r\n    try {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + url,\r\n        {\r\n          method: method,\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"noti ok\");\r\n        await PushNotification();\r\n        handleOpenSnackBar(true)\r\n        handleCloseLoading()\r\n      } else {console.log(\"SOMETHING WENT WRONG\");\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()}\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n  \r\n  };\r\n  const PushNotification=async()=>\r\n  {\r\n    try {\r\n        const body = {\r\n          tokens: [data.token_device],\r\n          title: title,\r\n          body: content,\r\n          type: 1,\r\n        };\r\n\r\n        console.log(body);\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/push-noti/add-notice`,\r\n          {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          console.log(\"push noti ok\");\r\n         \r\n        } else {\r\n          console.log(\"SOMETHING WENT WRONG\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n  }\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClickOpen1 = () => {\r\n    setOpen1(true);\r\n  };\r\n\r\n  const handleClose1 = () => {\r\n    setOpen1(false);\r\n  };\r\n  const handleClickOpen2 = () => {\r\n    setOpen2(true);\r\n  };\r\n\r\n  const handleClose2 = () => {\r\n    setOpen2(false);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  const getToken_device =async(data,apart_id)=>\r\n  {\r\n    try {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/user/token-device/${apart_id}`,\r\n        {\r\n          method: \"GET\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        \r\n        console.log(\"get token device ok\");\r\n        setData(await handleData(data,result.token_device));\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        handleOpenSnackBar(false)\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n    }\r\n  }\r\n  \r\n  \r\n  useEffect(() => {\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/all-bill/${bill_id}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    \r\n\r\n      if (res.status === 200 ) {\r\n        const result = await res.json();\r\n       \r\n        console.log(\"Vo 200OK\");\r\n        console.log(result);\r\n        await getToken_device(result.data,result.data.apart_id)\r\n        checkTime(result.data);\r\n        setIsLoad(false);\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n      }\r\n    }catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n     \r\n    }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      {!isLoad ? (\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={12}>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Chi tiết hóa đơn tổng</h4>\r\n            </CardHeader>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n              \r\n                <TextField\r\n                  id=\"apart_name\"\r\n                  label=\"Tên Phòng\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.apart_name || \"\"}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"time\"\r\n                  label=\"Thời gian\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.month + \"/\" + data.year}\r\n                />\r\n\r\n                <NumberFormat value={data.electric_bill} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) => <TextField\r\n                  id=\"elec\"\r\n                  label=\"Hóa đơn điện\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={value}\r\n                />} />\r\n                <NumberFormat value={data.water_bill} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) =>  <TextField\r\n                  id=\"water\"\r\n                  label=\"Hóa đơn nước\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={value}\r\n                />} />\r\n               <NumberFormat value={data.other_bill} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) =>  <TextField\r\n                  id=\"other\"\r\n                  label=\"Hóa đơn khác\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={value}\r\n                />} />\r\n               <NumberFormat value={data.total_money} className=\"foo\" displayType={'text'} thousandSeparator={true} suffix={' VND'} renderText={(value, props) =>  \r\n               <TextField\r\n                  id=\"total\"\r\n                  label=\"Tổng tiền\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={value}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />} />\r\n               \r\n                <TextField\r\n                  id=\"is_pay\"\r\n                  label=\"Tình trạng\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={\r\n                    data.is_pay ? \"Đã thanh toán\" : \"Chưa thanh toán\"\r\n                  }\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                ></TextField>\r\n              </GridItem>\r\n            </GridContainer>\r\n          </GridItem>\r\n          <div />\r\n\r\n          \r\n          <GridItem xs={12} sm={12} md={4}>\r\n           \r\n          </GridItem>\r\n          {data.is_pay ? (\r\n             <GridItem xs={12} sm={12} md={8}  >\r\n                <Button  className={classes.myButton} color=\"primary\" onClick={(e) => handleClickOpen()}>\r\n                Hủy thanh toán\r\n                </Button>\r\n              </GridItem>\r\n            ) :\r\n          <GridItem xs={12} sm={12} md={8}>\r\n            <Button  className={classes.myButton} color=\"primary\" onClick={(e) => handleClickOpen()}>\r\n                Thanh toán\r\n              </Button>\r\n            {isLate &&\r\n              <Button className={classes.myButton} color=\"primary\" onClick={(e) => handleClickOpen1()}>\r\n                Thông báo trễ hạn\r\n              </Button>\r\n            }\r\n            {isDenied &&(\r\n              <Button  className={classes.myButton} color=\"primary\" onClick={(e) => handleClickOpen2()}>\r\n                Thông báo cắt điện nước\r\n              </Button>\r\n            )}\r\n              \r\n          </GridItem>\r\n        }\r\n        </GridContainer>\r\n      ) : (\r\n        <div>Đang xử lý, vui lòng chờ...</div>\r\n      )}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {data.is_pay || false\r\n            ? \"Xác nhận hủy thanh toán\"\r\n            : \"Xác nhận thanh toán\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            <div>Căn hộ: {data.apart_name}</div>\r\n            <div>Tổng tiền: {data.total_money}</div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={open1}\r\n        onClose={handleClose1}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Xác nhận thông báo trễ hạn\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Căn hộ: {data.apart_name}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose1} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => handleNoti1()} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={open2}\r\n        onClose={handleClose2}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Xác nhận thông báo cắt điện\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Căn hộ: {data.apart_name}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose2} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => handleNoti2()} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\ListApart\\ListApart.js",["1187","1188","1189","1190"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleData } from \"./ServiceListApart.js\";\r\nimport CustomButton from \"../../../component/CustomButtons/Button.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nconst useStyles = makeStyles(styles);\r\nexport default function ListApart() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n  const [isHandle,setIsHandle]=useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n  console.log( JSON.parse(localStorage.getItem(\"state\")).user.token!==\"\");\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"name\",\r\n      label: \"Tên phòng\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"block\",\r\n      label: \"Toà nhà\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"status\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"status_name\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"\",\r\n      options: { filter: false,\r\n        sort: false,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n            <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              // color=\"primary\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0])}\r\n            >\r\n              <EditIcon color=\"primary\"/>\r\n            </Fab>\r\n          </Tooltip>\r\n          </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleClick = (id) => {\r\n\r\n    history.push(`/admin/apart/detail/${id}`);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n  const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n   \r\n    const getRes = async () => { \r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/block/all`,\r\n        {\r\n          // get block\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200 || res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        const result1 = await res1.json();\r\n        console.log(result.data);\r\n        setData(await handleData(result.data, result1.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false)\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n  }\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n      \r\n      </LoadingOverlay>\r\n      <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\ListApart\\ServiceListApart.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\Apart.js",["1191","1192","1193","1194"],"import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../component/CustomButtons/Button.js\";\r\n\r\nimport CustomTabs from \"../../component/CustomTabs/CustomTabs.js\";\r\nimport ListApart from \"./ListApart/ListApart.js\";\r\nimport ListApartNotApp from \"./ListApart/ListApartNotApp.js\"\r\n//import AddApart from \"./AddApart/AddApart.js\"\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Apart() {\r\n  const classes = useStyles();\r\n  const userInfo=useSelector(state=>state.user.info);\r\n  const token=useSelector(state=>state.user.token);\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n        <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Danh sách căn hộ\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListApart/>\r\n                )\r\n              },\r\n              {\r\n                tabName: \"Danh sách căn hộ không sử dụng app\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListApartNotApp/>\r\n                )\r\n              },\r\n              // {\r\n              //   tabName: \"Thêm căn hộ\",\r\n              //   //tabIcon: Code,\r\n              //   tabContent: (\r\n              //     <AddApart/>\r\n              //   )\r\n              // },\r\n              \r\n            ]}\r\n          />\r\n        </GridItem>\r\n       \r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\AddApart\\AddApart.js",["1195","1196","1197","1198","1199"],"import React, { useEffect, useState } from \"react\";\r\nimport {useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport { directionList, typeList } from \"./ServiceAddApart.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  alerts: {\r\n    marginTop: \"18px\",\r\n  },\r\n  myButton:{\r\n    float: \"right\"\r\n }\r\n}));\r\nexport default function AddApart() {\r\n  const classes = useStyles();\r\n  const [blockList, setBlockList] = useState([]);\r\n  const nameCheck = /^[a-zA-Z0-9]+$/;\r\n  const phoneCheck = /^[0-9]+$/;\r\n  const token = useSelector((state) => state.user.token);\r\n  const [alertApartName, setAlertApartName] = useState(false);\r\n  const [alertBlock, setAlertBlock] = useState(false);\r\n  const [alertArea, setAlertArea] = useState(false);\r\n  const [alertDirection, setAlertDirection] = useState(false);\r\n  const [alertType, setAlertType] = useState(false);\r\n  const [alertDescription, setAlertDescription] = useState(false);\r\n\r\n  const [apartName, setApartName] = useState(\"\");\r\n  const [block, setBlock] = useState(\"\");\r\n  const [area, setArea] = useState(\"\");\r\n  const [direction, setDirection] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const [nameFile, setNameFile] = useState([]);\r\n  const [fileExtension, setFileExtenstion] = useState([]);\r\n  const [fileMediaType, setFileMediaType] = useState([]);\r\n  //const [fileData, setFileData] = useState([]);\r\n  const [review,setReview]=useState([{src:\"\"}]);\r\n  const [isSelectFile,setIsSelectFile]=useState(false);\r\n  const [isLoad,setIsLoad]=useState(true);\r\n\r\n  const checkApartName = (name) => {\r\n    if (name !== \"\" && name.match(nameCheck)) {\r\n      setAlertApartName(false);\r\n      setApartName(name);\r\n    } else setAlertApartName(true);\r\n  };\r\n  const checkBlock = (block) => {\r\n    if (block !== \"\") {\r\n      setAlertBlock(false);\r\n      setBlock(block);\r\n    } else setAlertBlock(true);\r\n  };\r\n  const checkArea = (area) => {\r\n    if (area !== \"\" && area.match(phoneCheck)) {\r\n      setAlertArea(false);\r\n      setArea(area);\r\n    } else setAlertArea(true);\r\n  };\r\n  const checkDirection = (direction) => {\r\n    if (true) {\r\n      setAlertDirection(false);\r\n      setDirection(direction);\r\n    } else setAlertDirection(true);\r\n  };\r\n  const checkType = (Type) => {\r\n    if (true) {\r\n      setAlertType(false);\r\n      setType(Type);\r\n    } else setAlertType(true);\r\n  };\r\n  const checkDescription = (address) => {\r\n    if (address !== \"\") {\r\n      setAlertDescription(false);\r\n      setDescription(address);\r\n    } else setAlertDescription(true);\r\n  };\r\n\r\n  const handeFile = async (file,imageUrl) => {\r\n    console.log(file);\r\n    console.log(imageUrl);\r\n    setImage(file)\r\n    let name = [];\r\n    let extension = [];\r\n    let type = [];\r\n    let data = [];\r\n    let reviewImage=[];\r\n    if (file !== undefined) {\r\n      for (let i = 0; i < file.length; i++) {\r\n        let arr = file[i].type.split(\"/\");\r\n        extension.push(arr.pop());\r\n        type.push(arr.pop());\r\n        name.push(file[i].name.split(\".\").shift());\r\n        reviewImage[i]={\r\n          src: URL.createObjectURL(file[i])\r\n  }\r\n      }\r\n      // console.log(name);\r\n      // console.log(extension);\r\n      // console.log(type);\r\n      // console.log(review);\r\n      setReview(reviewImage);\r\n      setNameFile(name);\r\n      setFileExtenstion(extension);\r\n      setFileMediaType(type);\r\n      //setFileData(data);\r\n      setIsSelectFile(true); \r\n      \r\n    }\r\n  };\r\n  const handleSubmit = () => {\r\n    getlink();\r\n  };\r\n\r\n  const getlink = async () => {\r\n    if (nameFile.length !== 0) {\r\n      try {\r\n        let url=[];\r\n        let key=[];\r\n        for (let i = 0; i < nameFile.length; i++) {\r\n          console.log(fileExtension[i] +fileMediaType[i] );\r\n          const res = await fetch(\r\n            process.env.REACT_APP_API_LINK +\r\n              `/api/uploadv2/signed-url?fileName=${nameFile[i]}&extension=${fileExtension[i]}&mediaType=${fileMediaType[i]}`, ///api/upload-csv/signed-url?fileName=electric&extension=vnd.ms-excel&mediaType=application\r\n            {\r\n              method: \"GET\",\r\n              mode: \"cors\",\r\n              headers: {\r\n                Authorization: \"Bearer \" + `${token}`,\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          if (res.status === 200) {\r\n            const result = await res.json();\r\n            console.log(\"image ok\" +i);\r\n            url.push(result.uploadUrl);\r\n            key.push(result.key);\r\n          } else if (res.status === 500) {\r\n          } else console.log(\"SOMETHING WENT WRONG\");\r\n        }\r\n        console.log(key);\r\n        upload(url,key);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    else\r\n    {\r\n        \r\n    }\r\n  };\r\n  const upload = async (url,key) => {\r\n    try {\r\n      \r\n      for(let i=0;i<url.length;i++)\r\n     \r\n      { \r\n      const res = await fetch(url[i], {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": fileMediaType[i]+\"/\"+fileExtension[i] },\r\n        body: image[i],\r\n      });\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"upload ok\" +i);\r\n       \r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        //setIsError(true);\r\n      }}\r\n      //console.log(key);\r\n      addApart(key);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const addApart = async (key) => {\r\n    if (true) {\r\n      const body = {\r\n        name: apartName,\r\n        block: block,\r\n        area: parseInt(area),\r\n        direction: direction.id,\r\n        type: type.id,\r\n        images: key,\r\n        description: description,\r\n      };\r\n      console.log(body);\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/apart/add`,\r\n          {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n\r\n          console.log(\"add apart\");\r\n          console.log(result);\r\n        } else if (res.status === 500) {\r\n        } else console.log(\"SOMETHING WENT WRONG\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setIsLoad(true);\r\n    const getRes = async () => {\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/block/all`,\r\n        {\r\n          // get block\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result1 = await res1.json();\r\n        console.log(result1.data);\r\n        console.log(directionList);\r\n        setBlockList(result1.data);\r\n        setBlock(result1.data[0]._id);\r\n        setType(typeList[0]);\r\n        setDirection(directionList[0]);\r\n        setIsLoad(false);\r\n        // setData(await handleData(result.data, result1.data));\r\n      } else {\r\n        const result = await res1.json();\r\n        alert(result.message);\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        {!isLoad &&<GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"apartname\"\r\n                label=\"Tên căn hộ\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                onChange={(e) => checkApartName(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertApartName && (\r\n                <Alert className={classes.alerts} severity=\"error\">\r\n                  Tên căn hộ không hợp lệ\r\n                </Alert>\r\n              )}\r\n            </GridItem>\r\n            <GridContainer />\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"outlined-select-currency-native\"\r\n                select\r\n                label=\"Tòa nhà\"\r\n                margin=\"normal\"\r\n                onChange={(e) => checkBlock(e.target.value)}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n              >\r\n                {blockList.map((option) => (\r\n                  <option key={option.id} value={option._id}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertBlock && (\r\n                <Alert className={classes.alerts} severity=\"error\">\r\n                  Tòa nhà không hợp lệ\r\n                </Alert>\r\n              )}\r\n            </GridItem>\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"area\"\r\n                label=\"Diện tích căn hộ(m2)\"\r\n                //style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                onChange={(e) => checkArea(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertArea && (\r\n                <Alert severity=\"error\" className={classes.alerts}>\r\n                  Diện tích không hợp lệ\r\n                </Alert>\r\n              )}\r\n            </GridItem>\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"direction\"\r\n                select\r\n                label=\"Hướng căn hộ\"\r\n                margin=\"normal\"\r\n                onChange={(e) => checkDirection(e.target.value)}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n              >\r\n                {directionList.map((option) => (\r\n                  <option key={option.id} value={option.id}>\r\n                    {option.id}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertDirection && <Alert className={classes.alerts} severity=\"error\">Tòa nhà không hợp lệ</Alert>}\r\n            </GridItem>\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"type\"\r\n                select\r\n                label=\"Loại căn hộ\"\r\n                margin=\"normal\"\r\n                defaultValue={typeList[0]}\r\n                onChange={(e) => checkType(e.target.value)}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n              >\r\n                {typeList.map((option) => (\r\n                  <option key={option.id} value={option.id}>\r\n                    {option.id}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertType && (\r\n                <Alert className={classes.alerts} severity=\"error\">\r\n                  Loại căn hộ không hợp lệ\r\n                </Alert>\r\n              )}\r\n            </GridItem>\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"description\"\r\n                label=\"Mô tả\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                //defaultValue={address}\r\n                onChange={(e) => checkDescription(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertDescription && (\r\n                <Alert className={classes.alerts} severity=\"error\">\r\n                  Mô tả không hợp lệ\r\n                </Alert>\r\n              )}\r\n            </GridItem>\r\n\r\n            <GridItem xs={12} sm={12} md={2} style={{ marginTop: \"15px\" }}>\r\n              <label style={{ marginTop: \"50px\" }}>Ảnh căn hộ</label>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <input\r\n                style={{ marginTop: \"15px\" }}\r\n                type=\"file\"\r\n                onChange={(e) => handeFile(e.target.files,e.target.value)}\r\n                multiple\r\n                accept=\"image/*\"\r\n              />\r\n            </GridItem>\r\n            {<GridItem xs={12} sm={12} md={6}>\r\n              {isSelectFile && review.map((option) => (\r\n                  <img src={option.src} alt=\"Girl in a jacket\" style={{width:\"50px\",height:\"50px\"}}></img>\r\n                ))}\r\n                 {/* {<img src={review[0].src} alt=\"Girl in a jacket\" style={{width:\"30px\",height:\"30px\"}}></img>} */}\r\n               {/* {<img src={review[1].src} alt=\"Girl in a jacket\" style={{width:\"30px\",height:\"30px\"}}></img>} */}\r\n            </GridItem>}\r\n          </GridContainer>\r\n          <GridItem xs={12} sm={12} md={9}>\r\n          <Button className={classes.myButton} color=\"primary\" onClick={(e) => handleSubmit(e)}>\r\n            Lưu lại\r\n          </Button>\r\n          </GridItem>\r\n        </GridItem>}\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n",["1200","1201"],"D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\AddApart\\ServiceAddApart.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Block\\Block.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Block\\ListBlock\\ListBlock.js",["1202","1203","1204"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleData } from \"./ServiceListBlock.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nconst useStyles = makeStyles(styles);\r\nexport default function ListBlock() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n  const [isHandle,setIsHandle]=useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"name\",\r\n      label: \"Tên tòa nhà\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    // {\r\n    //   name: \"block\",\r\n    //   label: \"Toà nhà\",\r\n    //   options: {\r\n    //     filter: true,\r\n    //     sort: false,\r\n    //   },\r\n    // },\r\n    \r\n    {\r\n      name: \"\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n            <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0])}\r\n            >\r\n              <EditIcon />\r\n            </Fab>\r\n          </Tooltip>\r\n          </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleClick = (id) => {\r\n    // e.preventDefault();\r\n    console.log(id);\r\n    history.push(`/admin/block/detail/${id}`);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n  const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/block/all`,\r\n        {\r\n          // get block\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        \r\n        const result1 = await res1.json();\r\n        setData(handleData(result1.data));\r\n        console.log(result1.data);\r\n        handleCloseLoading()\r\n      } else {\r\n        const result1 = await res1.json();\r\n        //alert(result1.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n      \r\n       </LoadingOverlay> \r\n       <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Block\\AddBlock\\AddBlock.js",["1205","1206","1207","1208","1209","1210"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport { directionList ,typeList } from \"./ServiceAddBlock.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Block } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  alerts:{\r\n    marginTop:\"18px\"\r\n  }\r\n}));\r\nexport default function AddBlock() {\r\n  const classes = useStyles();\r\n  //   const [open, setOpen] = useState(false);\r\n  //   const [content, setContent] = useState(\"\");\r\n  //   const userInfo = useSelector((state) => state.user.info);\r\n  const nameCheck =  /^[a-zA-Z0-9]+$/;\r\n  \r\n  const token = useSelector((state) => state.user.token);\r\n  const [alertApartName, setAlertApartName] = useState(false);\r\n  const [apartName, setApartName] = useState(\"\");\r\n  const checkApartName = (name) => {\r\n    if (name !== \"\"&& name.match(nameCheck)) {\r\n      setAlertApartName(false);\r\n      setApartName(name);\r\n    } else setAlertApartName(true);\r\n  };\r\n  \r\n  const handleSubmit = async () => {\r\n    if (true) {\r\n      const body = {       \r\n          name: apartName,\r\n      };\r\n      console.log(body);\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/block/add`,\r\n          {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n\r\n          console.log(\"success\");\r\n          console.log(result);\r\n        } else if (res.status === 500) {\r\n        } else console.log(\"SOMETHING WENT WRONG\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"apartname\"\r\n                label=\"Tên căn hộ\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                onChange={(e) => checkApartName(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertApartName && <Alert className={classes.alerts} severity=\"error\">Tên tòa nhà không hợp lệ</Alert>}\r\n            </GridItem>\r\n            <GridContainer />   \r\n          <Button color=\"primary\" onClick={(e) => handleSubmit(e)}>\r\n            Lưu lại\r\n          </Button>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n",["1211","1212"],"D:\\DATN\\qlcc_2_admin\\src\\view\\Block\\ListBlock\\ServiceListBlock.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Block\\AddBlock\\ServiceAddBlock.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Block\\DetailBlock\\EditBlock.js",["1213","1214","1215"],"import React, { useEffect, useState } from \"react\";\r\nimport {useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\n// import { directionList ,typeList } from \"./ServiceAddBlock.js.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {useParams} from \"react-router-dom\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  alerts:{\r\n    marginTop:\"18px\"\r\n  },\r\n  myButton:{\r\n    float: \"right\"\r\n }\r\n\r\n}));\r\nexport default function EditBlock() {\r\n  const classes = useStyles();\r\n  //   const [open, setOpen] = useState(false);\r\n  //   const [content, setContent] = useState(\"\");\r\n  //   const userInfo = useSelector((state) => state.user.info);\r\n  const nameCheck =  /^[a-zA-Z0-9]+$/;\r\n  const { id } = useParams();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [isLoad,setIsLoad]=useState(true);\r\n  const [isHandle,setIsHandle]=useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n  const [data,setData]=useState();\r\n\r\n  const [alertApartName, setAlertApartName] = useState(false);\r\n  const [apartName, setApartName] = useState(\"\");\r\n  \r\n  const checkApartName = (name) => {\r\n    if (name !== \"\"&& name.match(nameCheck)) {\r\n      setAlertApartName(false);\r\n      setApartName(name);\r\n      return true\r\n    } else {setAlertApartName(true)\r\n    return false};\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n  \r\n  const handleSubmit = async () => {\r\n    handleClose();\r\n    handleOpenLoading();\r\n    if (checkApartName(apartName)) {\r\n      const body = {       \r\n          name: apartName,\r\n          block_id:data._id\r\n      };\r\n      console.log(body);\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/block/update`,\r\n          {\r\n            method: \"PUT\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n\r\n          console.log(\"success\");\r\n          console.log(result);\r\n          handleOpenSnackBar(true);\r\n          handleCloseLoading();\r\n        } else  {\r\n          console.log(\"SOMETHING WENT WRONG\")\r\n          handleOpenSnackBar(false)\r\n          handleCloseLoading()\r\n      };\r\n      } catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    } else {\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading();\r\n    }\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    handleOpenLoading();\r\n    const getRes = async () => {\r\n      try{\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/block/${id}`,\r\n        {\r\n          // get block\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result1 = await res1.json();\r\n        setData(result1.data);\r\n        setApartName(result1.data.name)\r\n        console.log(result1.data);\r\n        setIsLoad(false);\r\n        handleCloseLoading();\r\n      } else {\r\n        const result1 = await res1.json();\r\n        alert(result1.message);\r\n      }}catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n    } \r\n    getRes();\r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n       <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Thông tin tòa nhà</h4>\r\n            </CardHeader>\r\n            { !isLoad && \r\n             <GridContainer>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"apartname\"\r\n                label=\"Tên tòa nhà\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                defaultValue={data.name}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                className={classes.textField}\r\n                variant=\"outlined\"\r\n                onChange={(e) => checkApartName(e.target.value)}\r\n              />\r\n            </GridItem>\r\n             <GridItem xs={12} sm={12} md={3}>\r\n              {alertApartName && <Alert className={classes.alerts} severity=\"error\">Không hợp lệ</Alert>}\r\n            </GridItem>\r\n            </GridContainer>}\r\n           \r\n            <GridContainer /> \r\n            <GridItem xs={12} sm={12} md={9}>\r\n          <Button className={classes.myButton} color=\"primary\" onClick={handleClickOpen}>\r\n            Lưu lại chỉnh sửa\r\n          </Button></GridItem>  \r\n        </GridItem>\r\n      </GridContainer>\r\n\r\n\r\n      \r\n      <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n                  Xác nhận chỉnh sửa\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n           \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => handleSubmit(e)} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </LoadingOverlay>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\PublicArea\\PublicArea.js",["1216","1217","1218"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport CustomTabs from \"../../../component/CustomTabs/CustomTabs.js\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Repair from \"../Repair/Repair.js\";\r\nimport ListPublicArea from \"./ListPublicArea.js\"\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function PublicArea() {\r\n  const classes = useStyles();\r\n  const userInfo = useSelector((state) => state.user.info);\r\n  const token = useSelector((state) => state.user.token);\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Repair />\r\n        </GridItem>\r\n        <hr></hr>\r\n        <hr></hr>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>Sửa chữa khu vục chung</h4>\r\n          </CardHeader>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Chưa xác nhận\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListPublicArea type={0} status={0}  />\r\n                )\r\n              },\r\n                // {\r\n                //   tabName: \"Đã xác nhận\",\r\n                //   //tabIcon: BugReport,\r\n                //   tabContent: (      \r\n                //       <ListPublicArea type={0} status={1}/>\r\n                //   )\r\n                // },\r\n                // {\r\n                //   tabName: \"Đã sửa xong\",\r\n                //   //tabIcon: Code,\r\n                //   tabContent: (\r\n                //     <ListPublicArea type={0} status={2}/>\r\n                //   )\r\n                // },\r\n                // {\r\n                //   tabName: \"Không duyệt\",\r\n                //   //tabIcon: Code,\r\n                //   tabContent: (\r\n                //     <ListPublicArea type={0} status={3}/>\r\n                //   )\r\n                // },\r\n              \r\n            ]}\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\Repair\\Repair.js",["1219","1220","1221","1222"],"import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport CustomButton from \"../../../component/CustomButtons/Button.js\";\r\nimport {useHistory} from \"react-router-dom\"\r\nconst styles = {\r\n  \r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Apart() {\r\n  const classes = useStyles();\r\n  const userInfo=useSelector(state=>state.user.info);\r\n  const token=useSelector(state=>state.user.token);\r\n  const history=useHistory();\r\n  return (\r\n      \r\n        <GridItem xs={12} sm={12} md={12}>\r\n        <CustomButton\r\n              variant=\"outlined\"\r\n              color=\"rose\"\r\n              onClick={() => history.push(\"/admin/repair\")}\r\n            >\r\n              Sửa chữa khu vục chung\r\n            </CustomButton>\r\n            <CustomButton\r\n              variant=\"outlined\"\r\n              color=\"rose\"\r\n              onClick={() => history.push(\"/admin/repair/repair\")}\r\n            >\r\n              Sửa chữa dịch vụ\r\n            </CustomButton>\r\n            <CustomButton\r\n              variant=\"outlined\"\r\n              color=\"rose\"\r\n              onClick={() => history.push(\"/admin/repair/self_repair\")}\r\n            >\r\n              Tự sửa chữa\r\n            </CustomButton>\r\n        \r\n        {/* <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Danh sách căn hộ\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <LinkPublicArea/>\r\n                )\r\n              },\r\n              {\r\n                tabName: \"Danh sách căn hộ\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <LinkRequestRepair/>\r\n                )\r\n              },\r\n              {\r\n                tabName: \"Thêm căn hộ\",\r\n                //tabIcon: Code,\r\n                tabContent: (\r\n                  <LinkRequestSelfRepair/>\r\n                )\r\n              },\r\n              \r\n            ]}\r\n          /> */}\r\n        </GridItem>\r\n       \r\n      \r\n  );\r\n}","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestRepair\\RequestRepair.js",["1223","1224","1225"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport CustomTabs from \"../../../component/CustomTabs/CustomTabs.js\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Repair from \"../Repair/Repair.js\";\r\nimport ListRequestRepair from \"./ListRequestRepair\"\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function PublicArea() {\r\n  const classes = useStyles();\r\n  const userInfo = useSelector((state) => state.user.info);\r\n  const token = useSelector((state) => state.user.token);\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Repair />\r\n        </GridItem>\r\n        <hr></hr>\r\n        <hr></hr>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>Sửa chữa dịch vụ</h4>\r\n          </CardHeader>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Chưa xác nhận\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListRequestRepair type={2} status={0}  />\r\n                )\r\n              },\r\n              {\r\n                tabName: \"Đã xác nhận\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListRequestRepair type={2} status={1}/>\r\n                )\r\n              },\r\n              {\r\n                tabName: \"Đã sửa xong\",\r\n                //tabIcon: Code,\r\n                tabContent: (\r\n                  <ListRequestRepair type={2} status={2}/>\r\n                )\r\n              },\r\n              {\r\n                tabName: \"Không duyệt\",\r\n                //tabIcon: Code,\r\n                tabContent: (\r\n                  <ListRequestRepair type={2} status={3}/>\r\n                )\r\n              },\r\n              \r\n            ]}\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\PublicArea\\ListPublicArea.js",["1226","1227","1228","1229"],"import Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\nimport { handleData } from \"../ServiceRepair.js\";\r\n import Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\n  import LoadingOverlay from \"react-loading-overlay\";\r\n  import PushNotiAdmin from \"../../PushNotiAdmin.js\"\r\nconst useStyles = makeStyles(styles);\r\nexport default function ListPublicArea(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const {type,status}=props;\r\n  const token = useSelector((state) => state.user.token);\r\n  const {PushNotificationAdmin}=PushNotiAdmin()\r\n  const [data, setData] = useState([]);\r\n   const [openSnackBar,setOpenSnackBar]=useState(false);\r\n    const [snackType,setSnackType]=useState(true);\r\n  const [isHandle,setIsHandle]=useState(false);\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"apart\",\r\n      label: \"Tên phòng\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"time\",\r\n      label: \"Ngày tạo\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_admin\",\r\n      label: \"\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_admin_value\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_admin_name\",\r\n      label: \"Tình trạng.\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"\",\r\n      options: { filter: false,\r\n        sort: false,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n            <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              color=\"red\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0],tableMeta.rowData[4])}\r\n            >\r\n              <EditIcon color=\"primary\"/>\r\n            </Fab>\r\n          </Tooltip>\r\n           </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleClick = async(id,is_read_admin) => {\r\n    // e.preventDefault();\r\n    console.log(is_read_admin);\r\n    if(!is_read_admin) await handleChangeStatus(id);\r\n    history.push(`/admin/repair/detail/${id}`);\r\n  };\r\n  const handleChangeStatus = async (id) => {\r\n    try {\r\n      const body=\r\n      {\r\n        notice_id: id,\r\n        admin_status: true\r\n      }\r\n    \r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/repair/admin/update-is-read`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"ok\");\r\n        PushNotificationAdmin()\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getRes = async () => {\r\n      handleOpenLoading() \r\n      try{\r\n      const res = await fetch(\r\n       \r\n        process.env.REACT_APP_API_LINK + `/api/repair/notices?type=${type}&status=${status}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200 || res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        const result1 = await res1.json();\r\n        console.log(result.data);\r\n        setData(await handleData(result.data, result1.data));\r\n        \r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div> <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      /></LoadingOverlay>\r\n    <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\ServiceRepair.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestRepair\\ListRequestRepair.js",["1230","1231","1232","1233"],"import Fab from \"@material-ui/core/Fab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\nimport { handleData } from \"../ServiceRepair.js\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nconst useStyles = makeStyles(styles);\r\nexport default function LinkRequestRepair(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { type, status } = props;\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"apart\",\r\n      label: \"Tên phòng\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"time\",\r\n      label: \"Ngày tạo\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_admin\",\r\n      label: \"\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_admin_value\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_admin_name\",\r\n      label: \"Tình trạng.\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"Chi tiết\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n              <Tooltip\r\n                id=\"tooltip-top\"\r\n                title=\"Chi tiết\"\r\n                placement=\"top\"\r\n                classes={{ tooltip: classes.tooltip }}\r\n              >\r\n                <Fab\r\n                  size=\"small\"\r\n                  color=\"red\"\r\n                  aria-label=\"add\"\r\n                  className={classes.margin}\r\n                  onClick={() =>\r\n                    handleClick(tableMeta.rowData[0], tableMeta.rowData[4])\r\n                  }\r\n                >\r\n                  <EditIcon color=\"primary\" />\r\n                </Fab>\r\n              </Tooltip>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  const handleClick = async (id, is_read_admin) => {\r\n    // e.preventDefault();\r\n    console.log(is_read_admin);\r\n    if (!is_read_admin) await handleChangeStatus(id);\r\n    history.push(`/admin/repair/repair/detail/${id}`);\r\n  };\r\n  const handleChangeStatus = async (id) => {\r\n    try {\r\n      const body = {\r\n        notice_id: id,\r\n        admin_status: true,\r\n      };\r\n\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/repair/admin/update-is-read`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"ok\");\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK +\r\n          `/api/repair/notices?type=${type}&status=${status}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200 || res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        const result1 = await res1.json();\r\n        console.log(result.data);\r\n        setData(await handleData(result.data, result1.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div>\r\n       <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      /></LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestSelfRepair\\ListRequestSelfRepair.js",["1234","1235","1236","1237"],"import Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\";\r\nimport { handleData } from \"../ServiceRepair.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function LinkRequestRepair(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const {type,status}=props;\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\n\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"apart\",\r\n      label: \"Tên phòng\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"time\",\r\n      label: \"Ngày tạo\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_admin\",\r\n      label: \"\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_admin_value\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_admin_name\",\r\n      label: \"Tình trạng.\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"Chi tiết\",\r\n      options: {filter: false,\r\n        sort: false,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n            <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              color=\"red\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0],tableMeta.rowData[4])}\r\n            >\r\n              <EditIcon color=\"primary\"/>\r\n            </Fab>\r\n          </Tooltip>\r\n           </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleClick = async(id,is_read_admin) => {\r\n    // e.preventDefault();\r\n    console.log(is_read_admin);\r\n    if(!is_read_admin) await handleChangeStatus(id);\r\n    history.push(`/admin/repair/self_repair/detail/${id}`);\r\n  };\r\n  const handleChangeStatus = async (id) => {\r\n    try {\r\n      const body=\r\n      {\r\n        notice_id: id,\r\n        admin_status: true\r\n      }\r\n    \r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/repair/admin/update-is-read`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"ok\");\r\n     \r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/repair/notices?type=${type}&status=${status}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200 || res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        const result1 = await res1.json();\r\n        console.log(result.data);\r\n        setData(await handleData(result.data, result1.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div> <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      /></LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestSelfRepair\\RequestSelfRepair.js",["1238","1239","1240"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport CustomTabs from \"../../../component/CustomTabs/CustomTabs.js\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Repair from \"../Repair/Repair.js\";\r\nimport ListRequestSelfRepair from \"./ListRequestSelfRepair\"\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function RequestSelfRepair() {\r\n  const classes = useStyles();\r\n  const userInfo = useSelector((state) => state.user.info);\r\n  const token = useSelector((state) => state.user.token);\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Repair />\r\n        </GridItem>\r\n        <hr></hr>\r\n        <hr></hr>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>Tự sửa chữa</h4>\r\n          </CardHeader>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Chưa xác nhận\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListRequestSelfRepair type={1} status={0}  />\r\n                )\r\n              },\r\n              {\r\n                tabName: \"Đã xác nhận\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListRequestSelfRepair type={1} status={1}/>\r\n                )\r\n              },\r\n              // {\r\n              //   tabName: \"Đã sửa xong\",\r\n              //   //tabIcon: Code,\r\n              //   tabContent: (\r\n              //     <ListRequestSelfRepair type={1} status={2}/>\r\n              //   )\r\n              // },\r\n              {\r\n                tabName: \"Không duyệt\",\r\n                //tabIcon: Code,\r\n                tabContent: (\r\n                  <ListRequestSelfRepair type={1} status={3}/>\r\n                )\r\n              },\r\n              \r\n            ]}\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\PublicArea\\DetailPublicArea.js",["1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport Card from \"../../../component/Card/Card.js\";\r\nimport CardAvatar from \"../../../component/Card/CardAvatar.js\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {handleData,returnStatus} from \"../ServiceDetail.js\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n}));\r\nexport default function DetailPublicArea(props) {\r\n  //const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const { notice_id } = useParams();\r\n  const [data, setData] = useState({\r\n    id: \"\",\r\n    apart_id: \"\",\r\n    apart_name: \"\",\r\n    electric_bill: 0,\r\n    water_bill: 0,\r\n    year: 0,\r\n    status_value:\"\",\r\n    next_status_value:\"\"\r\n  });\r\n  const [isError, setIsError] = useState(false);\r\n  const [image, setImage] = useState();\r\n  const [commentImage,setCommentImage]=useState();\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [reload,setReload]=useState(false);\r\n  const [selected, setSelected] = useState(true); // true:chấp nhận|| false:không chấp nhận\r\n  //   const token = useSelector((state) => state.user.token);\r\n\r\n  \r\n  const handleChangeStatus = async () => {\r\n    try {   \r\n      handleClose();\r\n      const body = {\r\n        notice_id: data._id,\r\n        status: data.next_status\r\n    };\r\n    \r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/repair/update-status`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"ok\");\r\n     \r\n        setIsError(false);  \r\n        setReload(!reload);\r\n        //history.push(`/admin/reportbill`);\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        setIsError(true);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const renderButton =()=>\r\n  { \r\n    //let str=returnStatus(data.status)   \r\n    return(  \r\n  <Button color=\"primary\" onClick={(e) => handleClickOpen(true)}>\r\n    {data.next_status_value}\r\n  </Button>)\r\n  }\r\n \r\n  const getUrl = async (key) => {\r\n    if (key.length >=1) {\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/uploadv2/image-url?key=${key}`,\r\n          {\r\n            // get apart\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\"Vo 200OK\");\r\n          return (result.imageUrl)\r\n          // setImage(result.imageUrl);\r\n          // setIsLoad(false);\r\n        } else {\r\n          const result = await res.json();\r\n          console.log(result.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    setIsLoad(false);\r\n  };\r\n  const handleClickOpen = (temp) => {\r\n    setSelected(temp);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const getUserAndApart = async (data)=>\r\n  { \r\n    const res = await fetch(\r\n      process.env.REACT_APP_API_LINK + `/api/user/${data.author}`,\r\n      {\r\n        // get apart\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const res1 = await fetch(\r\n      process.env.REACT_APP_API_LINK + `/api/apart/${data.apart_id}`,\r\n      {\r\n        // get apart\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    if (res.status === 200&& res1.status === 200) {\r\n      const result = await res.json();\r\n      const result1 = await res1.json();\r\n      console.log(\"Vo 200OK\");\r\n      setData (handleData(data,result.data,result1.data));\r\n      //setData(result.data);\r\n      setIsLoad(false);\r\n    } else {\r\n      const result = await res.json();\r\n      console.log(result.message);\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    setIsLoad(true);\r\n    const getRes = async () => {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/repair/${notice_id}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"Vo 200OK\");\r\n        await getUserAndApart(result.data)\r\n        if(result.data.image!==\"\") setImage( await getUrl(result.data.image));\r\n       \r\n       \r\n        setIsLoad(false);\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n      }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div>\r\n      {!isLoad ? (\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={5}>\r\n            <Card profile>\r\n              <CardAvatar>\r\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                  <img src={image} alt=\"Không có ảnh\" width=\"400\" height=\"400\" />\r\n                </a>\r\n              </CardAvatar>\r\n            </Card>\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={7}>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>\r\n                Chi tiết thông báo sửa chữa chung\r\n              </h4>\r\n            </CardHeader>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <TextField\r\n                  id=\"apart_name\"\r\n                  label=\"Tên Phòng\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.apart_name || \"\"}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"time\"\r\n                  label=\"Thời gian\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.time}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"author\"\r\n                  label=\"Người gửi\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.author_name}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  id=\"title\"\r\n                  label=\"Tiêu đề\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.title}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  id=\"content\"\r\n                  label=\"Nội dung\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.content}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n                {/* <TextField\r\n                  id=\"is_pay\"\r\n                  label=\"Trạng thái hiện tại\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={ data.status_value }\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                ></TextField> */}\r\n              </GridItem>\r\n            </GridContainer>\r\n          </GridItem>\r\n          <div />\r\n          <GridItem xs={12} sm={12} md={3} />\r\n          <GridItem xs={12} sm={12} md={6}>\r\n            {/* {isHandle && (\r\n            <div style={{ marginTop: \"15px\" }}>Đang xử lý, vui lòng chờ...</div>\r\n          )}*/}\r\n            {isError && (\r\n              <div style={{ marginTop: \"15px\" }}>Vui lòng thử lại</div>\r\n            )}\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={3}>          \r\n               {/* {renderButton()} */}\r\n          </GridItem>\r\n        </GridContainer>\r\n      ) : (\r\n        <div>Đang xử lý, vui lòng chờ...</div>\r\n      )}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Xác nhận chuyển trạng thái\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Chuyển từ {data.status_value} thành {data.next_status_value}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={handleChangeStatus} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\ServiceDetail.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestRepair\\DetailRequestRepair.js",["1253","1254","1255","1256","1257","1258","1259","1260"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport Card from \"../../../component/Card/Card.js\";\r\nimport CardAvatar from \"../../../component/Card/CardAvatar.js\";\r\nimport CardBody from \"../../../component/Card/CardBody.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { handleData, title, content } from \"../ServiceDetail.js\";\r\nimport PushNotiAdmin from \"../../PushNotiAdmin.js\"\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  myButton: {\r\n    float: \"right\",\r\n  },\r\n}));\r\nexport default function DetailRequestRepair(props) {\r\n  //const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const {PushNotificationAdmin}=PushNotiAdmin()\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const { notice_id } = useParams();\r\n  const [data, setData] = useState({\r\n    id: \"\",\r\n    apart_id: \"\",\r\n    apart_name: \"\",\r\n    electric_bill: 0,\r\n    water_bill: 0,\r\n    year: 0,\r\n    status_value: \"\",\r\n    next_status_value: \"\",\r\n    evaluation: {\r\n      is_evaluate: false,\r\n      comment: \"\",\r\n      image: \"\",\r\n      is_like: true,\r\n    },\r\n  });\r\n  const [isError, setIsError] = useState(false);\r\n  const [image, setImage] = useState();\r\n  const [commentImage, setCommentImage] = useState();\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [open1, setOpen1] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false); \r\n  //const [selected, setSelected] = useState(true); // true:chấp nhận|| false:không chấp nhận\r\n  //   const token = useSelector((state) => state.user.token);\r\n\r\n  const handleChangeStatus = async (next_status) => {\r\n    try {\r\n      handleClose();\r\n      handleClose1();\r\n      handleOpenLoading()\r\n      const body = {\r\n        notice_id: data._id,\r\n        status: next_status,\r\n      };\r\n\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/repair/update-status`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"ok\");\r\n        await PushNotification();\r\n        PushNotificationAdmin();\r\n        setIsError(false);\r\n        setReload(!reload);\r\n        //history.push(`/admin/reportbill`);\r\n        handleOpenSnackBar(true)\r\n        handleCloseLoading()\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        setIsError(true);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n    }\r\n  };\r\n  const PushNotification = async () => {\r\n    try {\r\n      const body = {\r\n        tokens: [data.token_device],\r\n        title: title,\r\n        body: content,\r\n        type: 2,\r\n      };\r\n\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/push-noti/add-notice`,\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"push noti ok\");\r\n        //history.push(`/admin/reportbill`);\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getUrl = async (key) => {\r\n    if (key.length >= 1) {\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/uploadv2/image-url?key=${key}`,\r\n          {\r\n            // get apart\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\"Vo 200OK\");\r\n\r\n          return result.imageUrl;\r\n          // setImage(result.imageUrl);\r\n          // setIsLoad(false);\r\n        } else {\r\n          const result = await res.json();\r\n          console.log(result.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        \r\n      }\r\n    }\r\n    setIsLoad(false);\r\n  };\r\n  const handleClickOpen = (temp) => {\r\n    // setSelected(temp);\r\n    setOpen(true);\r\n  };\r\n  const handleClickOpen1 = (temp) => {\r\n    //setSelected(temp);\r\n    setOpen1(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClose1 = () => {\r\n    setOpen1(false);\r\n  };\r\n  const renderButton = () => {\r\n    console.log(data.status);\r\n    if (data.status === 0) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            className={classes.myButton}\r\n            color=\"primary\"\r\n            onClick={(e) => handleClickOpen(true)}\r\n          >\r\n            {data.next_status_value}\r\n          </Button>\r\n          <Button\r\n            className={classes.myButton}\r\n            color=\"primary\"\r\n            onClick={(e) => handleClickOpen1(true)}\r\n          >\r\n            Không duyệt\r\n          </Button>\r\n        </div>\r\n      );\r\n    } else if (data.status === 2||data.status === 3) {\r\n      return <div></div>;\r\n    } else {\r\n      return (\r\n        <Button className={classes.myButton} color=\"primary\" onClick={(e) => handleClickOpen(true)}>\r\n          {data.next_status_value}\r\n        </Button>\r\n      );\r\n    }\r\n  }; const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  const getUserAndApart = async (data) => {\r\n    try{\r\n    const res = await fetch(\r\n      process.env.REACT_APP_API_LINK + `/api/user/${data.author}`,\r\n      {\r\n        // get apart\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const res1 = await fetch(\r\n      process.env.REACT_APP_API_LINK + `/api/apart/${data.apart_id}`,\r\n      {\r\n        // get apart\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    if (res.status === 200 && res1.status === 200) {\r\n      const result = await res.json();\r\n      const result1 = await res1.json();\r\n      console.log(\"Vo 200OK\");\r\n      setData(handleData(data, result.data, result1.data));\r\n      setIsLoad(false);\r\n    } else {\r\n      const result = await res.json();\r\n      console.log(result.message);\r\n      handleOpenSnackBar(false)\r\n    }\r\n  }catch (err) {\r\n    console.log(err);\r\n    handleOpenSnackBar(false)\r\n  }\r\n  };\r\n  useEffect(() => {\r\n    setIsLoad(true);\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/repair/${notice_id}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"Vo 200OK\");\r\n\r\n        await getUserAndApart(result.data);\r\n        if (result.data.image !== \"\") setImage(await getUrl(result.data.image));\r\n        if (result.data.evaluation.is_evaluate === true)\r\n          setCommentImage(await getUrl(result.data.evaluation.image));\r\n        setIsLoad(false);\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n      }\r\n    }catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      \r\n    }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div> <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      {!isLoad ? (\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={5}>\r\n            <Card profile>\r\n              <CardAvatar>\r\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                  <img\r\n                    src={image}\r\n                    alt=\"Không có ảnh\"\r\n                    width=\"400\"\r\n                    height=\"400\"\r\n                  />\r\n                </a>\r\n              </CardAvatar>\r\n            </Card>\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={7}>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>\r\n                Chi tiết thông báo dịch vụ sửa chữa\r\n              </h4>\r\n            </CardHeader>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <TextField\r\n                  id=\"apart_name\"\r\n                  label=\"Tên Phòng\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.apart_name || \"\"}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"time\"\r\n                  label=\"Thời gian\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.time}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"author\"\r\n                  label=\"Người gửi\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.author_name}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  id=\"title\"\r\n                  label=\"Tiêu đề\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.title}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  id=\"content\"\r\n                  label=\"Nội dung\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.content}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  id=\"is_pay\"\r\n                  label=\"Trạng thái hiện tại\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.status_value}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                ></TextField>\r\n              </GridItem>\r\n            </GridContainer>\r\n          </GridItem>\r\n          <div />\r\n          <GridItem xs={12} sm={12} md={3} />\r\n          <GridItem xs={12} sm={12} md={4}>\r\n            {/* {isHandle && (\r\n            <div style={{ marginTop: \"15px\" }}>Đang xử lý, vui lòng chờ...</div>\r\n          )}*/}\r\n            {isError && (\r\n              <div style={{ marginTop: \"15px\" }}>Vui lòng thử lại</div>\r\n            )}\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={5}>\r\n            {renderButton()}\r\n          </GridItem>\r\n        </GridContainer>\r\n      ) : (\r\n        <div>Đang xử lý, vui lòng chờ...</div>\r\n      )}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Xác nhận chuyển trạng thái\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Chuyển từ {data.status_value} thành {data.next_status_value}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button\r\n            onClick={(e) => handleChangeStatus(data.next_status)}\r\n            color=\"primary\"\r\n          >\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={open1}\r\n        onClose={handleClose1}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Xác nhận chuyển trạng thái\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Chuyển từ {data.status_value} thành Không duyệt\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose1} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => handleChangeStatus(3)} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <GridContainer>\r\n        <hr></hr>\r\n        <hr></hr>\r\n       {data.evaluation.is_evaluate&& <GridItem xs={12} sm={12} md={12}>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>Đánh giá</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={10}>\r\n                Nội dung: {data.evaluation.comment}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={2}>\r\n                {data.evaluation.is_like ? <ThumbUpIcon /> : <ThumbDownIcon />}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                {commentImage && (\r\n                  <img\r\n                    src={commentImage}\r\n                    alt=\"Không có ảnh\"\r\n                    style={{ width: \"100px\", height: \"100px\" }}\r\n                  ></img>\r\n                )}\r\n              </GridItem>\r\n            </GridContainer>\r\n          </CardBody>\r\n        </GridItem>}\r\n      </GridContainer>\r\n\r\n      </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestSelfRepair\\DetailRequestSelfRepair.js",["1261","1262","1263","1264","1265","1266","1267","1268","1269"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport Card from \"../../../component/Card/Card.js\";\r\nimport CardAvatar from \"../../../component/Card/CardAvatar.js\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {handleData,title,content} from \"./ServiceDetailRequestSelfRepair.js\"\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport PushNotiAdmin from \"../../PushNotiAdmin.js\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  myButton:{\r\n    float: \"right\",\r\n    width:\"200px\"\r\n }\r\n}));\r\nexport default function DetailRequestSelfRepair(props) {\r\n  //const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const { notice_id } = useParams();\r\n  const {PushNotificationAdmin}=PushNotiAdmin()\r\n  const [data, setData] = useState({\r\n    id: \"\",\r\n    apart_id: \"\",\r\n    apart_name: \"\",\r\n    electric_bill: 0,\r\n    water_bill: 0,\r\n    year: 0,\r\n    status_value:\"\",\r\n    next_status_value:\"\"\r\n  });\r\n  const [isError, setIsError] = useState(false);\r\n  const [image, setImage] = useState();\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [open1, setOpen1] = useState(false);\r\n  const [reload,setReload]=useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n  const [isHandle,setIsHandle]=useState(false);\r\n  \r\n  \r\n  const handleChangeStatus = async (next_status) => {\r\n    try {   \r\n      handleClose();\r\n      handleClose1();\r\n      handleOpenLoading()\r\n      const body = {\r\n        notice_id: data._id,\r\n        status: next_status\r\n    };\r\n    \r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/repair/update-status`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"ok\");\r\n        await PushNotification();\r\n        PushNotificationAdmin()\r\n        setIsError(false);  \r\n        setReload(!reload);\r\n        //history.push(`/admin/reportbill`);\r\n        handleOpenSnackBar(true)\r\n        handleCloseLoading()\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        setIsError(true);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n  };\r\n  const PushNotification=async()=>\r\n  {\r\n    try {\r\n        const body = {\r\n          tokens: [data.token_device],\r\n          title: title,\r\n          body: content,\r\n          type: 2,\r\n        };\r\n\r\n        console.log(body);\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/push-noti/add-notice`,\r\n          {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          //const result = await res.json();\r\n          console.log(\"push noti ok\");\r\n          //history.push(`/admin/reportbill`);\r\n        } else {\r\n          console.log(\"SOMETHING WENT WRONG\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n  }\r\n  \r\n \r\n  const getUrl = async (key) => {\r\n    if (key.length >=1) {\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/uploadv2/image-url?key=${key}`,\r\n          {\r\n            // get apart\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\"Vo 200OK\");\r\n          return (result.imageUrl)\r\n          // setImage(result.imageUrl);\r\n          // setIsLoad(false);\r\n        } else {\r\n          const result = await res.json();\r\n          console.log(result.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        \r\n      }\r\n    }\r\n    setIsLoad(false);\r\n  };\r\n  const handleClickOpen = (temp) => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClickOpen1 = (temp) => {\r\n    setOpen1(true);\r\n  };\r\n\r\n  const handleClose1 = () => {\r\n    setOpen1(false);\r\n  };\r\n  const renderButton = () => {\r\n    console.log(data.status);\r\n    if (data.status === 0) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            className={classes.myButton}\r\n            color=\"primary\"\r\n            onClick={(e) => handleClickOpen(true)}\r\n          >\r\n            {data.next_status_value}\r\n          </Button>\r\n          <Button\r\n            className={classes.myButton}\r\n            color=\"primary\"\r\n            onClick={(e) => handleClickOpen1(true)}\r\n          >\r\n            Không duyệt\r\n          </Button>\r\n        </div>\r\n      );\r\n    } else if (data.status === 1||data.status === 3) {\r\n      return <div></div>;\r\n    } else {\r\n      return (\r\n        <Button className={classes.myButton} color=\"primary\" onClick={(e) => handleClickOpen(true)}>\r\n          {data.next_status_value}\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  const getUserAndApart = async (data)=>\r\n  { \r\n    try{\r\n    const res = await fetch(\r\n      process.env.REACT_APP_API_LINK + `/api/user/${data.author}`,\r\n      {\r\n        // get apart\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const res1 = await fetch(\r\n      process.env.REACT_APP_API_LINK + `/api/apart/${data.apart_id}`,\r\n      {\r\n        // get apart\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    if (res.status === 200&& res1.status === 200) {\r\n      const result = await res.json();\r\n      const result1 = await res1.json();\r\n      console.log(\"Vo 200OK\");\r\n      setData (handleData(data,result.data,result1.data));\r\n      //setData(result.data);\r\n      setIsLoad(false);\r\n    } else {\r\n      const result = await res.json();\r\n      console.log(result.message);\r\n      handleOpenSnackBar(false)\r\n      \r\n    }}\r\n    catch(err)\r\n    {\r\n      handleOpenSnackBar(false)\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    const getRes = async () => {\r\n      setIsLoad(true);\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/repair/${notice_id}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"Vo 200OK\"); \r\n        await getUserAndApart(result.data)\r\n        if(result.data.image!==\"\") setImage( await getUrl(result.data.image));\r\n       \r\n        setIsLoad(false);\r\n      \r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n      }}\r\n      catch(err){ handleOpenSnackBar(false)}\r\n      \r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      {!isLoad ? (\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={5}>\r\n            <Card profile>\r\n              <CardAvatar>\r\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                  <img src={image} alt=\"không có ảnh\" width=\"400\" height=\"400\" />\r\n                </a>\r\n              </CardAvatar>\r\n            </Card>\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={7}>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>\r\n                Chi tiết thông báo sửa chữa chung\r\n              </h4>\r\n            </CardHeader>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <TextField\r\n                  id=\"apart_name\"\r\n                  label=\"Tên Phòng\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.apart_name || \"\"}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"time\"\r\n                  label=\"Thời gian\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.time}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"author\"\r\n                  label=\"Người gửi\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.author_name}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  id=\"title\"\r\n                  label=\"Tiêu đề\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.title}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  id=\"content\"\r\n                  label=\"Nội dung\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.content}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  id=\"is_pay\"\r\n                  label=\"Trạng thái hiện tại\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={ data.status_value }\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                ></TextField>\r\n              </GridItem>\r\n            </GridContainer>\r\n          </GridItem>\r\n          <div />\r\n          <GridItem xs={12} sm={12} md={3} />\r\n          \r\n          <GridItem xs={12} sm={12} md={9}>          \r\n               {renderButton()}\r\n          </GridItem>\r\n        </GridContainer>\r\n      ) : (\r\n        <div>Đang xử lý, vui lòng chờ...</div>\r\n      )}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Xác nhận chuyển trạng thái\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Chuyển từ {data.status_value} thành {data.next_status_value}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={e=>handleChangeStatus(data.next_status)} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open1}\r\n        onClose={handleClose1}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Xác nhận chuyển trạng thái\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Chuyển từ {data.status_value} thành Không duyệt\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose1} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => handleChangeStatus(3)} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Parking\\Parking.js",["1270","1271","1272","1273"],"import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../component/CustomButtons/Button.js\";\r\n\r\nimport CustomTabs from \"../../component/CustomTabs/CustomTabs.js\";\r\nimport ListParking from \"./ListParking/ListParking.js\";\r\n//import AddApart from \"./AddApart/AddApart.js\"\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Parking() {\r\n  const classes = useStyles();\r\n  const userInfo=useSelector(state=>state.user.info);\r\n  const token=useSelector(state=>state.user.token);\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n        <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Danh sách khiếu nại bãi xe\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListParking/>\r\n                )\r\n              },\r\n              \r\n              \r\n            ]}\r\n          />\r\n        </GridItem>\r\n       \r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}","D:\\DATN\\qlcc_2_admin\\src\\view\\Parking\\ListParking\\ListParking.js",["1274","1275","1276","1277"],"import Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\";\r\nimport { handleData } from \"./ServiceListParking\";\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\n \r\nexport default function ListParking(props) { \r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //const {type,status}=props;\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\n\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"user\",\r\n      label: \"Người gửi\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"time\",\r\n      label: \"Ngày tạo\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_admin\",\r\n      label: \"\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_admin_value\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_admin_name\",\r\n      label: \"Tình trạng.\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_confirm\",\r\n      label: \"Xử lý\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_confirm_name\",\r\n      label: \"Xử lý.\",\r\n      options: {\r\n        display: \"excluded\", \r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"Chi tiết\",\r\n      options: { filter: false,\r\n        sort: false,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            \r\n            <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              color=\"red\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() =>  handleClick(tableMeta.rowData[0],tableMeta.rowData[4])}\r\n            >\r\n              <EditIcon color=\"primary\"/>\r\n            </Fab>\r\n          </Tooltip>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleClick = async(id,is_read_admin) => {\r\n    // e.preventDefault();\r\n    console.log(is_read_admin);\r\n    if(!is_read_admin) await handleChangeStatus(id);\r\n    history.push(`/admin/noti_parking/${id}`);\r\n  };\r\n  const handleChangeStatus = async (id) => {\r\n    try {\r\n      const body=\r\n      {\r\n        notice_id: id\r\n      }\r\n    \r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/noti-parking/change-is-read`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"ok\");\r\n     \r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  useEffect(() => {handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/noti-parking/allreport`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/user/all`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200 || res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        const result1 = await res1.json();\r\n        console.log(result.data);\r\n        setData(await handleData(result.data, result1.data)); \r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div><LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      /> </LoadingOverlay>\r\n      <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Parking\\DetailParking\\DetailParking.js",["1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport Card from \"../../../component/Card/Card.js\";\r\nimport CardAvatar from \"../../../component/Card/CardAvatar.js\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { handleData, title, content } from \"./ServiceDetailParking.js\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PushNotiAdmin from \"../../PushNotiAdmin.js\"\r\nimport Search from \"@material-ui/icons/Search\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  myButton: {\r\n    float: \"right\",\r\n    width: \"200px\",\r\n  },\r\n}));\r\nexport default function DetailPublicArea(props) {\r\n  //const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const { notice_id } = useParams();\r\n  const {PushNotificationAdmin}=PushNotiAdmin()\r\n  const [data, setData] = useState({\r\n    id: \"\",\r\n    apart_id: \"\",\r\n    apart_name: \"\",\r\n    electric_bill: 0,\r\n    water_bill: 0,\r\n    year: 0,\r\n    status_value: \"\",\r\n    next_status_value: \"\",\r\n  });\r\n  const [openSnackBar, setOpenSnackBar] = useState(false);\r\n  const [snackType, setSnackType] = useState(true);\r\n  const [isHandle, setIsHandle] = useState(false);\r\n  const [image, setImage] = useState();\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n  const [selected, setSelected] = useState(true); // true:chấp nhận|| false:không chấp nhận\r\n  //   const token = useSelector((state) => state.user.token);\r\n  const [dataLicense,setDataLicense]=useState(\"\");\r\n  const handleChangeStatus = async () => {\r\n    try {\r\n      handleClose();\r\n      handleOpenLoading();\r\n      const body = {\r\n        notice_id: data._id,\r\n        status: data.next_status,\r\n      };\r\n\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/noti-parking/change-confirm`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\" changestatus ok\");\r\n        await createNotification();\r\n        PushNotificationAdmin()\r\n        setReload(!reload);\r\n        handleOpenSnackBar(true);\r\n        handleCloseLoading();\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        handleOpenSnackBar(false);\r\n        handleCloseLoading();\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false);\r\n      handleCloseLoading();\r\n    }\r\n  };\r\n  const createNotification = async () => {\r\n    try {\r\n      const body = {\r\n        title: \"Xác nhận khiếu nại\",\r\n        content:\r\n          \"Báo cáo của anh/chị đã được tiếp nhận. BQL sẽ tiến hành xử lý. Cảm ơn báo cáo của anh/chị.\",\r\n        user_id: data.author,\r\n      };\r\n\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/noti-parking/create`,\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"noti ok\");\r\n        await PushNotification();\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const PushNotification = async () => {\r\n    try {\r\n      const body = {\r\n        tokens: [data.token_device],\r\n        title: title,\r\n        body: content,\r\n        type: 2,\r\n      };\r\n\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/push-noti/add-notice`,\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"push noti ok\");\r\n        //history.push(`/admin/reportbill`);\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n  const handleOpenLoading = () => {\r\n    setIsHandle(true);\r\n  };\r\n  const handleCloseLoading = () => {\r\n    setIsHandle(false);\r\n  };\r\n  const renderButton = () => {\r\n    //let str=returnStatus(data.status)\r\n    return (\r\n      <Button\r\n        className={classes.myButton}\r\n        color=\"primary\"\r\n        onClick={(e) => handleClickOpen(true)}\r\n      >\r\n        Đã xử lý\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const getUrl = async (key) => {\r\n    if (key.length >= 1) {\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/uploadv2/image-url?key=${key}`,\r\n          {\r\n            // get apart\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\"get image OK\");\r\n          return result.imageUrl;\r\n          // setImage(result.imageUrl);\r\n          // setIsLoad(false);\r\n        } else {\r\n          const result = await res.json();\r\n          console.log(result.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    setIsLoad(false);\r\n  };\r\n  const handleClickOpen = (temp) => {\r\n    setSelected(temp);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const searchUser =async(license)=>\r\n  {\r\n    try {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/user/search?search=${license}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"get phone OK\");\r\n        console.log(result.data[0].phone);\r\n        setDataLicense(result.data[0].phone)\r\n        \r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message); \r\n        setDataLicense(\"Không tìm thấy\")\r\n        //handleOpenSnackBar(false);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false);\r\n    }\r\n  }\r\n  const getUserAndApart = async (data) => {\r\n    try {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/user/${data.author}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"user OK\");\r\n        setData(handleData(data, result.data));\r\n        //setData(result.data);\r\n        setIsLoad(false);\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setIsLoad(true);\r\n    const getRes = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK +\r\n            `/api/noti-parking/notice/${notice_id}`,\r\n          {\r\n            // get apart\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\" useEffect OK\");\r\n          console.log(result.data.image);\r\n          await getUserAndApart(result.data);\r\n          if (result.data.image !== \"\")\r\n            setImage(await getUrl(result.data.image));\r\n          setIsLoad(false);\r\n        } else {\r\n          const result = await res.json();\r\n          console.log(result.message);\r\n          handleOpenSnackBar(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false);\r\n      }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div>\r\n      <LoadingOverlay\r\n        active={isHandle}\r\n        spinner\r\n        text=\"Đang xử lý vui lòng chờ...\"\r\n      >\r\n        {!isLoad ? (\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={12} md={5}>\r\n              <Card profile>\r\n                <CardAvatar>\r\n                  <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                    <img\r\n                      src={image}\r\n                      alt=\"Không có ảnh\"\r\n                      width=\"400\"\r\n                      height=\"400\"\r\n                    />\r\n                  </a>\r\n                </CardAvatar>\r\n              </Card>\r\n\r\n              {!data.is_confirm &&<GridContainer>\r\n              <GridItem xs={12} sm={12} md={6}>\r\n                <TextField\r\n                  id=\"author\"\r\n                  label=\"Nhập biển số xe\"\r\n                  //style={{ margin: 8 }}\r\n                  width=\"100\"\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) =>searchUser(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={6}>\r\n              <TextField\r\n                  id=\"phone\"\r\n                  label=\"Số điện thoại\"\r\n                  //style={{ margin: 8 }}\r\n                  width=\"100\"\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                  variant=\"outlined\"\r\n                  value={dataLicense}\r\n                />\r\n              \r\n              </GridItem>\r\n              </GridContainer>}\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={7}>\r\n              <CardHeader color=\"primary\">\r\n                <h4 className={classes.cardTitleWhite}>\r\n                  Chi tiết khiếu nại bãi xe\r\n                </h4>\r\n              </CardHeader>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                  <TextField\r\n                    id=\"author\"\r\n                    label=\"Người gửi\"\r\n                    //style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    defaultValue={data.author_name}\r\n                    //onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    id=\"time\"\r\n                    label=\"Thời gian\"\r\n                    //style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    defaultValue={data.time}\r\n                    //onChange={(e) => setName(e.target.value)}\r\n                  />\r\n\r\n                  <TextField\r\n                    id=\"title\"\r\n                    label=\"Tiêu đề\"\r\n                    //style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    defaultValue={data.title}\r\n                    //onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    id=\"content\"\r\n                    label=\"Nội dung\"\r\n                    //style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    multiline={true}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    defaultValue={data.content}\r\n                    //onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    id=\"status\"\r\n                    label=\"Trạng thái hiện tại\"\r\n                    //style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    defaultValue={data.is_confirm_value}\r\n                    //onChange={(e) => setName(e.target.value)}\r\n                  ></TextField>\r\n                </GridItem>\r\n              </GridContainer>\r\n            </GridItem>\r\n            <div />\r\n            <GridItem xs={12} sm={12} md={3} />\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              {!data.is_confirm && renderButton()}\r\n            </GridItem>\r\n          </GridContainer>\r\n        ) : (\r\n          <div>Đang xử lý, vui lòng chờ...</div>\r\n        )}\r\n\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Xác nhận chuyển trạng thái\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              Chuyển từ \"Chưa xử lý\" thành \"Đã xử lý\"\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Hủy\r\n            </Button>\r\n            <Button onClick={handleChangeStatus} color=\"primary\">\r\n              Xác nhận\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </LoadingOverlay>\r\n      <Snackbar\r\n        open={openSnackBar}\r\n        type={snackType}\r\n        handleClose={handleCloseSnackBar}\r\n      ></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Parking\\ListParking\\ServiceListParking.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Parking\\DetailParking\\ServiceDetailParking.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Bill\\AllBill\\ServiceDetailAllBill.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Test.js",["1293","1294","1295","1296","1297","1298"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../component/Grid/GridContainer.js\";\r\nimport Button from \"../component/CustomButtons/Button.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  alerts: {\r\n    marginTop: \"18px\",\r\n  },\r\n}));\r\nexport default function Test() {\r\n  const classes = useStyles();\r\n  const [review,setReview]=useState([{src:\"\"},{src:\"\"}]);\r\n  const [isSelectFile,setIsSelectFile]=useState(false);\r\n  \r\n\r\n\r\n  const handeFile = async (file,imageUrl) => {\r\n    console.log(file);\r\n    console.log(imageUrl);\r\n    let name = [];\r\n    let extension = [];\r\n    let type = [];\r\n    let data = [];\r\n    let reviewImage=[];\r\n    if (file !== undefined) {\r\n      for (let i = 0; i < file.length; i++) {\r\n        let arr = file[i].type.split(\"/\");\r\n        extension.push(arr.pop());\r\n        type.push(arr.pop());\r\n        name.push(file[i].name.split(\".\").shift());\r\n        reviewImage[i]={\r\n                 src: URL.createObjectURL(file[i])\r\n         }\r\n       \r\n        // let reader = new FileReader();\r\n        // await reader.readAsText(file[i]);\r\n        // reader.onloadend = async () => {\r\n        //   //data.push(reader.result);\r\n        //   reviewImage[i]={\r\n        //     src:reader.result\r\n        //   }\r\n        // };\r\n      }\r\n    //   console.log(name);\r\n    //   console.log(extension);\r\n    //   console.log(type);\r\n      console.log(reviewImage);\r\n      setReview(reviewImage);\r\n      //setFileData(data);\r\n      setIsSelectFile(true); \r\n      \r\n    }\r\n  };\r\n  const handleSubmit = () => {\r\n    console.log(review);\r\n    //getlink();\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n          <GridItem xs={12} sm={12} md={6}>\r\n              <input\r\n                style={{ margin: \"15px\" }}\r\n                type=\"file\"\r\n                onChange={(e) => handeFile(e.target.files,e.target.value)}\r\n                 multiple\r\n              />\r\n            </GridItem>\r\n            {<GridItem xs={12} sm={12} md={4}>\r\n              {isSelectFile && review.map((option) => (\r\n                  <img src={option.src} alt=\"Girl in a jacket\" style={{width:\"30px\",height:\"30px\"}}></img>\r\n                ))}\r\n              \r\n                 {/* {<img src={review[0].src} alt=\"Girl in a jacket\" style={{width:\"30px\",height:\"30px\"}}></img>} \r\n               {<img src={review[1].src} alt=\"Girl in a jacket\" style={{width:\"30px\",height:\"30px\"}}></img>} */}\r\n            </GridItem>}\r\n          </GridContainer>\r\n\r\n          <Button color=\"primary\" onClick={(e) => handleSubmit(e)}>\r\n            Lưu lại\r\n          </Button>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n",["1299","1300"],"D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\SendNotification.js",["1301","1302","1303","1304"],"import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../component/CustomButtons/Button.js\";\r\nimport CustomTabs from \"../../component/CustomTabs/CustomTabs.js\";\r\nimport CreateNotification from \"./CreateNotification/CreateNotification.js\"\r\nimport ListNotification from \"./ListNotification/ListNotification.js\"\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function SendNotification() {\r\n  const classes = useStyles();\r\n  const userInfo=useSelector(state=>state.user.info);\r\n  const token=useSelector(state=>state.user.token);\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n        <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[ \r\n              {\r\n                tabName: \"Danh sách thông báo\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListNotification/>\r\n                )\r\n              },\r\n              {\r\n                tabName: \"Tạo thông báo\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <CreateNotification/>\r\n                )\r\n              },\r\n             \r\n            //   {\r\n            //     tabName: \"Thêm căn hộ\",\r\n            //     //tabIcon: Code,\r\n            //     tabContent: (\r\n                 \r\n            //     )\r\n            //   },\r\n              \r\n            ]}\r\n          />\r\n        </GridItem>\r\n       \r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\CreateNotification\\CreateNotification.js",["1305","1306","1307","1308","1309","1310","1311","1312","1313","1314"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport { to, returnTitleDialog, contentPush, titlePush } from \"./ServiceCreateNotification.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport BlockNotification from \"./Block/BlockNotification.js\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport FloorNotification from \"./Floor/FloorNotifications.js\"\r\nimport ApartNotifications from \"./Apart/ApartNotifications\"\r\n\r\nimport Zoom from 'react-medium-image-zoom'\r\nimport 'react-medium-image-zoom/dist/styles.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  alerts: {\r\n    marginTop: \"18px\",\r\n  },\r\n  myButton: {\r\n    float: \"right\",\r\n  },\r\n}));\r\nexport default function CreateNotification() {\r\n  const classes = useStyles();\r\n  const [contentList, setContentList] = useState([]);\r\n  const nameCheck = /^[a-zA-Z0-9]+$/;\r\n  const phoneCheck = /^[0-9]+$/;\r\n\r\n  const token = useSelector((state) => state.user.token);\r\n  const [open, setOpen] = useState(false); \r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n  const [isHandle,setIsHandle]=useState(false);\r\n  const [alertTitle, setAlertTitle] = useState(false);\r\n  const [alertContent, setAlertContent] = useState(false);\r\n  const [alertLink, setAlertLink] = useState(false);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const [type, setType] = useState(\"all\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [block, setBlock] = useState();\r\n  const [floor,setFloor]=useState();\r\n  const [apart_id,setApart_id]=useState();\r\n  const [nameFile, setNameFile] = useState([]);\r\n  const [fileExtension, setFileExtenstion] = useState([]);\r\n  const [fileMediaType, setFileMediaType] = useState([]);\r\n  //const [fileData, setFileData] = useState([]);\r\n  const [review, setReview] = useState([{ src: \"\" }]);\r\n  const [isSelectFile, setIsSelectFile] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  const checkTitle = (name) => { \r\n    setTitle(name);\r\n    if (name !== \"\") {\r\n      setAlertTitle(false);\r\n      return true;\r\n    } else {\r\n      setAlertTitle(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkContent = (content) => {  \r\n    setContent(content);\r\n    if (content !== \"\") {\r\n      setAlertContent(false);\r\n      return true;\r\n    } else {\r\n      setAlertContent(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkLink = (link) => {  \r\n    setLink(link);\r\n    if (true) {\r\n      setAlertLink(false);\r\n    } else setAlertLink(true);\r\n  };\r\n\r\n  const handleType = (value) => {\r\n    console.log(value);\r\n    setType(value);\r\n    setApart_id(\"\")\r\n    //setReload(!reload);\r\n  };\r\n  const renderTo = () => {\r\n    //console.log(value);\r\n    console.log(type);\r\n    if (type === \"all\") {\r\n      return ;\r\n    }\r\n    if (type === \"block\") {\r\n      return <BlockNotification setBlock={setBlock} handleOpenLoading={handleOpenLoading}handleCloseLoading={handleCloseLoading} handleOpenSnackBar={handleOpenSnackBar}></BlockNotification>;\r\n    }\r\n    if (type===\"floor\")\r\n    {\r\n      return <FloorNotification setBlock={setBlock} setFloor={setFloor} setApart_id={setApart_id} handleOpenLoading={handleOpenLoading}handleCloseLoading={handleCloseLoading} handleOpenSnackBar={handleOpenSnackBar}/>\r\n    }\r\n    if(type===\"apart\")\r\n    {\r\n      return <ApartNotifications setApart_id={setApart_id} handleOpenLoading={handleOpenLoading}handleCloseLoading={handleCloseLoading} handleOpenSnackBar={handleOpenSnackBar} ></ApartNotifications>\r\n    }\r\n  };\r\n  const handeFile = async (file, imageUrl) => {\r\n    console.log(file);\r\n    console.log(imageUrl);\r\n    setImage(file);\r\n    let name = [];\r\n    let extension = [];\r\n    let type = [];\r\n    let data = [];\r\n    let reviewImage = [];\r\n    if (file !== undefined) {\r\n      for (let i = 0; i < file.length; i++) {\r\n        let arr = file[i].type.split(\"/\");\r\n        extension.push(arr.pop());\r\n        type.push(arr.pop());\r\n        name.push(file[i].name.split(\".\").shift());\r\n        reviewImage[i] = {\r\n          src: URL.createObjectURL(file[i]),\r\n        };\r\n      }\r\n      // console.log(name);\r\n      // console.log(extension);\r\n      // console.log(type);\r\n      // console.log(review);\r\n      setReview(reviewImage);\r\n      setNameFile(name);\r\n      setFileExtenstion(extension);\r\n      setFileMediaType(type);\r\n      //setFileData(data);\r\n      setIsSelectFile(true);\r\n    }\r\n  };\r\n  const handleSubmit = () => {\r\n    //getlink();\r\n    handleClose();\r\n    handleOpenLoading()\r\n    getlink();\r\n  };\r\n\r\n  const getlink = async () => {\r\n    if (nameFile.length !== 0) {\r\n      try {\r\n        let url = [];\r\n        let key = [];\r\n        for (let i = 0; i < nameFile.length; i++) {\r\n          console.log(fileExtension[i] + fileMediaType[i]);\r\n          const res = await fetch(\r\n            process.env.REACT_APP_API_LINK +\r\n              `/api/uploadv2/signed-url?fileName=${nameFile[i]}&extension=${fileExtension[i]}&mediaType=${fileMediaType[i]}`, ///api/upload-csv/signed-url?fileName=electric&extension=vnd.ms-excel&mediaType=application\r\n            {\r\n              method: \"GET\",\r\n              mode: \"cors\",\r\n              headers: {\r\n                Authorization: \"Bearer \" + `${token}`,\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          if (res.status === 200) {\r\n            const result = await res.json();\r\n            console.log(\"image ok\" + i);\r\n            url.push(result.uploadUrl);\r\n            key.push(result.key);\r\n          }  else {\r\n            console.log(\"SOMETHING WENT WRONG\");\r\n          handleCloseLoading()\r\n          handleOpenSnackBar(false)}\r\n        }\r\n        console.log(key);\r\n        upload(url, key);\r\n      } catch (err) {\r\n        console.log(err);\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false)\r\n      }\r\n    } else {\r\n      console.log(\"no image\");\r\n      createBody([\"\"]);\r\n    }\r\n  };\r\n  const upload = async (url, key) => {\r\n    try {\r\n      for (let i = 0; i < url.length; i++) {\r\n        console.log(fileMediaType[i] + \"/\" + fileExtension[i]);\r\n        //console.log(fileData[i]);\r\n        const res = await fetch(url[i], {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": fileMediaType[i] + \"/\" + fileExtension[i],\r\n          },\r\n          body: image[i],\r\n        });\r\n        if (res.status === 200) {\r\n          //const result = await res.json();\r\n          console.log(\"upload ok\" + i);\r\n        } else {\r\n          console.log(\"SOMETHING WENT WRONG\");\r\n          handleCloseLoading()\r\n          handleOpenSnackBar(false)\r\n        }\r\n      }\r\n      //console.log(key);\r\n      createBody(key);\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleCloseLoading()\r\n      handleOpenSnackBar(false)\r\n    }\r\n  };\r\n  const createBody = async (key) => {\r\n    \r\n    if (checkContent(content) === true && checkTitle(title) === true) {\r\n      //console.log(\"check true\");\r\n      if (type === \"all\") {\r\n        //console.log(\"all true\");\r\n        const body = {\r\n          title: title,\r\n          content: content,\r\n          link: link,\r\n          type: type,\r\n          image: key[0],\r\n        };\r\n        console.log(body);\r\n        sendNotification( body);\r\n      }\r\n      if (type === \"block\") {\r\n        //console.log(\"block true\");\r\n        const body = {\r\n          title: title,\r\n          content: content,\r\n          link: link,\r\n          type: type,\r\n          image: key[0],\r\n          block_id: block,\r\n        };\r\n        \r\n        console.log(body);\r\n        sendNotification(body);\r\n      }\r\n      if (type === \"floor\") {\r\n        //console.log(\"block true\");\r\n        const body = {\r\n          title: title,\r\n          content: content,\r\n          link: link,\r\n          type: type,\r\n          image: key[0],\r\n          block_id: block,\r\n          floor: floor,\r\n          apart_id:apart_id\r\n        };\r\n        console.log(body);\r\n        sendNotification(body);\r\n      }\r\n      if (type === \"apart\") {\r\n        //console.log(\"block true\");\r\n        const body = {\r\n          title: title,\r\n          content: content,\r\n          link: link,\r\n          type: type,\r\n          image: key[0],\r\n          apart_id:apart_id\r\n        };\r\n        console.log(body);\r\n        sendNotification(body);\r\n      }\r\n    }\r\n    else {\r\n      handleCloseLoading()\r\n      handleOpenSnackBar(false)\r\n    }\r\n  };\r\n  const sendNotification = async (body) => {\r\n    try {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/noti/add`,\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n\r\n        console.log(\"send notification\");\r\n        console.log(result.tokens_device);\r\n       await PushNotification(result.tokens_device)\r\n       handleCloseLoading()\r\n       handleOpenSnackBar(true);\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\")\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false)};\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleCloseLoading()\r\n      handleOpenSnackBar(false)\r\n    }\r\n  };\r\n\r\n  const PushNotification=async(token_device)=>\r\n  {\r\n    try {\r\n        const body = {\r\n          tokens: token_device,\r\n          title: titlePush,\r\n          body: contentPush,\r\n          type: 2,\r\n        };\r\n\r\n        console.log(body);\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/push-noti/add-notice`,\r\n          {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          //const result = await res.json();\r\n          console.log(\"push noti ok\");\r\n          setReload(!reload);\r\n          //history.push(`/admin/reportbill`);\r\n        } else {\r\n          console.log(\"SOMETHING WENT WRONG\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n  }\r\n \r\n  const handleClickOpen = (temp) => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n\r\n  return (\r\n    <div> <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"title\"\r\n                label=\"Tiêu đề\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                onChange={(e) => checkTitle(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertTitle && (\r\n                <Alert className={classes.alerts} severity=\"error\">\r\n                  Tiêu đề không hợp lệ\r\n                </Alert>\r\n              )}\r\n            </GridItem>\r\n            <GridContainer />\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"content\"\r\n                label=\"Nội dung\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                multiline={true}\r\n                variant=\"outlined\"\r\n                onChange={(e) => checkContent(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertContent && (\r\n                <Alert className={classes.alerts} severity=\"error\">\r\n                  Nội dung không hợp lệ\r\n                </Alert>\r\n              )}\r\n            </GridItem>\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"link\"\r\n                label=\"Link đính kèm (nếu có)\"\r\n                //style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                onChange={(e) => checkLink(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertLink && (\r\n                <Alert severity=\"error\" className={classes.alerts}>\r\n                  Diện tích không hợp lệ\r\n                </Alert>\r\n              )}\r\n            </GridItem>\r\n\r\n            <GridItem xs={12} sm={12} md={2} style={{ marginTop: \"15px\" }}>\r\n              <label style={{ marginTop: \"50px\" }}>Ảnh </label>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <input\r\n                style={{ marginTop: \"15px\" }}\r\n                type=\"file\"\r\n                onChange={(e) => handeFile(e.target.files, e.target.value)}\r\n                accept=\"image/*\"\r\n              />\r\n            </GridItem>\r\n            {\r\n              <GridItem xs={12} sm={12} md={6}>\r\n                {isSelectFile &&\r\n                  review.map((option) => (\r\n                    <Zoom zoomMargin={40}>\r\n                    <img\r\n                      src={option.src}\r\n                      alt=\"Girl in a jacket\"\r\n                      style={{ width: \"100px\", height: \"100px\" }}\r\n                    ></img></Zoom>\r\n                  ))}\r\n                {/* {<img src={review[0].src} alt=\"Girl in a jacket\" style={{width:\"30px\",height:\"30px\"}}></img>} */}\r\n                {/* {<img src={review[1].src} alt=\"Girl in a jacket\" style={{width:\"30px\",height:\"30px\"}}></img>} */}\r\n              </GridItem>\r\n            }\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"to\"\r\n                select\r\n                label=\"Người nhận\"\r\n                margin=\"normal\"\r\n                defaultValue={to[0]}\r\n                onChange={(e) => handleType(e.target.value)}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n              >\r\n                {to.map((option) => (\r\n                  <option key={option.id} value={option.id}>\r\n                    {option.value}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              {renderTo()}\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n            {alertLink && (\r\n                <Alert severity=\"error\" className={classes.alerts}>\r\n                 Không hợp lệ\r\n                </Alert>\r\n              )}\r\n            </GridItem>\r\n          </GridContainer>\r\n          <GridItem xs={12} sm={12} md={3}>\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={9}>\r\n            <Button\r\n              className={classes.myButton}\r\n              color=\"primary\"\r\n              onClick={(e) => handleClickOpen()}\r\n            >\r\n              Lưu lại\r\n            </Button>\r\n          </GridItem>\r\n        </GridItem>\r\n\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {returnTitleDialog(type)}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\"></DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Hủy\r\n            </Button>\r\n            <Button onClick={(e) => handleSubmit()} color=\"primary\">\r\n              Xác nhận\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </GridContainer>\r\n     </LoadingOverlay>\r\n      <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\CreateNotification\\ServiceCreateNotification.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\DetailApart.js",["1315","1316","1317"],"// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n//import Button from \"../../../component/CustomButtons/Button.js\";\r\nimport Card from \"../../../component/Card/Card.js\";\r\nimport CustomTabs from \"../../../component/CustomTabs/CustomTabs.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport SlideShow from \"../../../component/SlideShow/SlideShow.js\";\r\nimport APIDetailApart from \"./APIDetailApart.js\";\r\nimport Edit from \"./Edit.js\";\r\nimport InfoApart from \"./InfoApart/InfoApart.js\";\r\nimport { handleData } from \"./ServiceDetailApart.js\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Apart() {\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.user.token);\r\n  \r\n  const {getUrl,getUser,getBlock}=APIDetailApart();\r\n  const { apart_id } = useParams();\r\n  const [blockList, setBlockList] = useState([]);\r\n  const [image, setImage] = useState([]);\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n  const [isHandle,setIsHandle]=useState(false);\r\n\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      setIsLoad(true);\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/apart/${apart_id}`,\r\n          {// get apart\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\"Vo 200OK\");\r\n          console.log(result.data);\r\n           // Image\r\n           if (result.data.images !== [])\r\n           setImage(await getUrl(result.data.images));\r\n         else console.log(\"no image\");\r\n          //Info\r\n          let user={name:\"Không có\"};\r\n          let block= await getBlock();\r\n          setBlockList(block);\r\n          if(result.data.status===2)\r\n            user= await getUser(result.data);\r\n          else user=null\r\n          setData(await handleData(result.data,user,block))\r\n          setIsLoad(false);\r\n          handleCloseLoading();\r\n        } else {\r\n          const result = await res.json();\r\n          alert(result.message);\r\n          handleCloseLoading()\r\n          handleOpenSnackBar(false)\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false)\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      {!isLoad && (\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={4}>\r\n            <Card profile>\r\n              <SlideShow images={image}></SlideShow>:\r\n            </Card>\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={8}>\r\n            <CustomTabs\r\n              headerColor=\"primary\"\r\n              tabs={[\r\n                {\r\n                  tabName: \"Chi tiết\",\r\n                  //tabIcon: BugReport,\r\n                  tabContent: <InfoApart data={data}></InfoApart>,\r\n                },\r\n                {\r\n                  tabName: \"Chỉnh sửa\",\r\n                  //tabIcon: BugReport,\r\n                  tabContent: <Edit data={data} isLoad={isLoad}  blockList={blockList} setIsHandle={setIsHandle}></Edit>,\r\n                },\r\n              ]}\r\n            />\r\n          </GridItem>\r\n        </GridContainer>\r\n      )}\r\n      </LoadingOverlay>\r\n      <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\ServicePlace\\ListServicePlace\\ListServicePlace.js",["1318","1319","1320","1321","1322","1323","1324","1325","1326","1327"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleData } from \"./ServiceLisServicetPlace.js\";\r\nimport CustomButton from \"../../../component/CustomButtons/Button.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nconst useStyles = makeStyles(styles);\r\nexport default function ListServicePlace() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: false,\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"name\",\r\n      label: \"Tên khu vực\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"block\",\r\n      label: \"Toà nhà\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    // {\r\n    //   name: \"Chi tiết\",\r\n    //   options: {\r\n    //     customBodyRender: (value, tableMeta, updateValue) => {\r\n    //       return (\r\n    //         <div>\r\n    //         <Tooltip\r\n    //         id=\"tooltip-top\"\r\n    //         title=\"Chi tiết\"\r\n    //         placement=\"top\"\r\n    //         classes={{ tooltip: classes.tooltip }}\r\n    //       >\r\n    //         <Fab\r\n    //           size=\"small\"\r\n    //           color=\"primary\"\r\n    //           aria-label=\"add\"\r\n    //           className={classes.margin}\r\n    //           onClick={() => handleClick(tableMeta.rowData[0])}\r\n    //         >\r\n    //           <EditIcon />\r\n    //         </Fab>\r\n    //       </Tooltip>\r\n    //       </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    // },\r\n  ];\r\n  const handleClick = (id) => {\r\n\r\n    //history.push(`/admin/apart/detail/${id}`);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/service/all-services`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/block/all`,\r\n        {\r\n          // get block\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200 || res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        const result1 = await res1.json();\r\n        console.log(result.data);\r\n        setData(await handleData(result.data, result1.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }} catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n\r\n    };\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div><LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n      </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\ServicePlace\\ServicePlace.js",["1328","1329","1330","1331"],"import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../component/CustomButtons/Button.js\";\r\n\r\nimport CustomTabs from \"../../component/CustomTabs/CustomTabs.js\";\r\nimport ListServicePlace from \"./ListServicePlace/ListServicePlace.js\";\r\nimport AddServicePlace from \"./AddServicePlace/AddServicePlace.js\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Apart() {\r\n  const classes = useStyles();\r\n  const userInfo=useSelector(state=>state.user.info);\r\n  const token=useSelector(state=>state.user.token);\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n        <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Danh sách địa điểm\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListServicePlace/>\r\n                )\r\n              },\r\n              // {\r\n              //   tabName: \"Danh sách căn hộ\",\r\n              //   //tabIcon: BugReport,\r\n              //   tabContent: (      \r\n              //       <ListApart/>\r\n              //   )\r\n              // },\r\n              {\r\n                tabName: \"Thêm địa điểm\",\r\n                //tabIcon: Code,\r\n                tabContent: (\r\n                  <AddServicePlace/>\r\n                )\r\n              },\r\n              \r\n            ]}\r\n          />\r\n        </GridItem>\r\n       \r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}","D:\\DATN\\qlcc_2_admin\\src\\view\\ServicePlace\\AddServicePlace\\AddServicePlace.js",["1332","1333","1334","1335","1336"],"import React, { useEffect, useState } from \"react\";\r\nimport {useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\n//import { directionList, typeList } from \"./ServiceAddApart.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  alerts: {\r\n    marginTop: \"18px\",\r\n  },\r\n  myButton:{\r\n    float: \"right\"\r\n }\r\n}));\r\nexport default function AddServicePlace() {\r\n  const classes = useStyles();\r\n  const [blockList, setBlockList] = useState([]);\r\n  const nameCheck = /^[a-zA-Z0-9]+$/;\r\n  const token = useSelector((state) => state.user.token);\r\n  const [alertName, setAlertName] = useState(false);\r\n  const [alertBlock, setAlertBlock] = useState(false);\r\n\r\n  const [alertDescription, setAlertDescription] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [block, setBlock] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const [nameFile, setNameFile] = useState([]);\r\n  const [fileExtension, setFileExtenstion] = useState([]);\r\n  const [fileMediaType, setFileMediaType] = useState([]);\r\n  //const [fileData, setFileData] = useState([]);\r\n  const [review,setReview]=useState([{src:\"\"}]);\r\n  const [isSelectFile,setIsSelectFile]=useState(false);\r\n  const [isLoad,setIsLoad]=useState(true);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\n\r\n  const checkApartName = (name) => {\r\n    setName(name);\r\n    if (name !== \"\" ) {\r\n      setAlertName(false);\r\n      return true\r\n    } else {setAlertName(true)\r\n       return false};\r\n  };\r\n  const checkBlock = (block) => {  \r\n    setBlock(block);\r\n    if (block !== \"\") {\r\n      setAlertBlock(false);\r\n      return true\r\n    } else {setAlertBlock(true)\r\n    return false};\r\n  };\r\n  const checkDescription = (address) => {\r\n    setDescription(address);\r\n    if (address !== \"\") {\r\n      setAlertDescription(false);\r\n      return true\r\n    } else {setAlertDescription(true)\r\n      return false};\r\n  };\r\n\r\n  const handeFile = async (file,imageUrl) => {\r\n    console.log(file);\r\n    console.log(imageUrl);\r\n    setImage(file)\r\n    let name = [];\r\n    let extension = [];\r\n    let type = [];\r\n    //let data = [];\r\n    let reviewImage=[];\r\n    if (file !== undefined) {\r\n      for (let i = 0; i < file.length; i++) {\r\n        let arr = file[i].type.split(\"/\");\r\n        extension.push(arr.pop());\r\n        type.push(arr.pop());\r\n        name.push(file[i].name.split(\".\").shift());\r\n        reviewImage[i]={\r\n          src: URL.createObjectURL(file[i])\r\n  }\r\n      }\r\n      // console.log(name);\r\n      // console.log(extension);\r\n      // console.log(type);\r\n      // console.log(review);\r\n      setReview(reviewImage);\r\n      setNameFile(name);\r\n      setFileExtenstion(extension);\r\n      setFileMediaType(type);\r\n      //setFileData(data);\r\n      setIsSelectFile(true); \r\n      \r\n    }\r\n  };\r\n  const handleSubmit = () => {\r\n    handleOpenLoading()\r\n    getlink();\r\n  };\r\n\r\n  const getlink = async () => {\r\n    if (nameFile.length !== 0) {\r\n      try {\r\n        let url=[];\r\n        let key=[];\r\n        for (let i = 0; i < nameFile.length; i++) {\r\n          console.log(fileExtension[i] +fileMediaType[i] );\r\n          const res = await fetch(\r\n            process.env.REACT_APP_API_LINK +\r\n              `/api/uploadv2/signed-url?fileName=${nameFile[i]}&extension=${fileExtension[i]}&mediaType=${fileMediaType[i]}`, ///api/upload-csv/signed-url?fileName=electric&extension=vnd.ms-excel&mediaType=application\r\n            {\r\n              method: \"GET\",\r\n              mode: \"cors\",\r\n              headers: {\r\n                Authorization: \"Bearer \" + `${token}`,\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          if (res.status === 200) {\r\n            const result = await res.json();\r\n            console.log(\"image ok\" +i);\r\n            url.push(result.uploadUrl);\r\n            key.push(result.key);\r\n          } else if (res.status === 500) {\r\n          } else console.log(\"SOMETHING WENT WRONG\");\r\n        }\r\n        console.log(key);\r\n        upload(url,key);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n  };\r\n  const upload = async (url,key) => {\r\n    try {\r\n      \r\n      for(let i=0;i<url.length;i++)\r\n     \r\n      { \r\n      const res = await fetch(url[i], {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": fileMediaType[i]+\"/\"+fileExtension[i] },\r\n        body: image[i],\r\n      });\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"upload ok\" +i);\r\n       \r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        //setIsError(true);\r\n      }}\r\n      //console.log(key);\r\n      AddServicePlace(key);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const AddServicePlace = async (key) => {\r\n    if (checkApartName(name) && checkBlock(block)&& checkDescription(description)) {\r\n      const body = {\r\n        name: name,\r\n        block_id: block,\r\n        images: key,\r\n        description: description,\r\n      };\r\n      console.log(body);\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/service/create`,\r\n          {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n\r\n          console.log(\"add place\");\r\n          console.log(result);\r\n          handleOpenSnackBar(true)\r\n          handleCloseLoading()\r\n        } else {console.log(\"SOMETHING WENT WRONG\")\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()};\r\n      } catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    } else {\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n  };const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  useEffect(() => {\r\n    setIsLoad(true);\r\n    const getRes = async () => {\r\n      try{\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/block/all`,\r\n        {\r\n          // get block\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result1 = await res1.json();\r\n        console.log(result1.data);\r\n       \r\n        setBlockList(result1.data);\r\n        setBlock(result1.data[0]._id)\r\n        setIsLoad(false);\r\n        // setData(await handleData(result.data, result1.data));\r\n      } else {\r\n        const result = await res1.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n      }} catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        \r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n\r\n  return (\r\n    <div> <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <GridContainer>\r\n        {!isLoad &&<GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"apartname\"\r\n                label=\"Tên khu vực\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                onChange={(e) => checkApartName(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertName && (\r\n                <Alert className={classes.alerts} severity=\"error\">\r\n                  Tên khu vực không hợp lệ\r\n                </Alert>\r\n              )}\r\n            </GridItem>\r\n            <GridContainer />\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"outlined-select-currency-native\"\r\n                select\r\n                label=\"Tòa nhà\"\r\n                margin=\"normal\"\r\n                onChange={(e) => checkBlock(e.target.value)}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n              >\r\n                {blockList.map((option) => (\r\n                  <option key={option.id} value={option._id}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertBlock && (\r\n                <Alert className={classes.alerts} severity=\"error\">\r\n                  Tòa nhà không hợp lệ\r\n                </Alert>\r\n              )}\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"description\"\r\n                label=\"Mô tả\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                //defaultValue={address}\r\n                onChange={(e) => checkDescription(e.target.value)}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              {alertDescription && (\r\n                <Alert className={classes.alerts} severity=\"error\">\r\n                  Mô tả không hợp lệ\r\n                </Alert>\r\n              )}\r\n            </GridItem>\r\n\r\n            <GridItem xs={12} sm={12} md={2} style={{ marginTop: \"15px\" }}>\r\n              <label style={{ marginTop: \"50px\" }}>Ảnh khu vực</label>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <input\r\n                style={{ marginTop: \"15px\" }}\r\n                type=\"file\"\r\n                onChange={(e) => handeFile(e.target.files,e.target.value)}\r\n                multiple\r\n                accept=\"image/*\"\r\n              />\r\n            </GridItem>\r\n            {<GridItem xs={12} sm={12} md={6}>\r\n              {isSelectFile && review.map((option) => (\r\n                  <img src={option.src} alt=\"Girl in a jacket\" style={{width:\"50px\",height:\"50px\"}}></img>\r\n                ))}\r\n                 {/* {<img src={review[0].src} alt=\"Girl in a jacket\" style={{width:\"30px\",height:\"30px\"}}></img>} */}\r\n               {/* {<img src={review[1].src} alt=\"Girl in a jacket\" style={{width:\"30px\",height:\"30px\"}}></img>} */}\r\n            </GridItem>}\r\n          </GridContainer>\r\n          <GridItem xs={12} sm={12} md={9}>\r\n          <Button className={classes.myButton} color=\"primary\" onClick={(e) => handleSubmit(e)}>\r\n            Lưu lại\r\n          </Button>\r\n          </GridItem>\r\n        </GridItem>}\r\n      </GridContainer>\r\n     </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\ServicePlace\\ListServicePlace\\ServiceLisServicetPlace.js",["1337"],"\r\nexport const handleData = (list, block) => {\r\n    console.log(list);\r\n    console.log(block);\r\n    const newlist = [];\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].is_delete === false) {\r\n        newlist[i] = {\r\n          id: list[i]._id,\r\n          order: i + 1,\r\n          name: list[i].name,\r\n          block: returnBlock(list[i].block_id, block),\r\n        };\r\n      }\r\n    }\r\n    console.log(newlist);\r\n    return newlist;\r\n  };\r\n  const returnStatus = (status) => {\r\n    switch (status) {\r\n      case 1:\r\n        return \"Còn trống\";\r\n      case 2:\r\n        return \"Đã thuê\";\r\n      case 3:\r\n        return \"Đã bán\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n  const returnBlock = (list, blockList) => {\r\n     for (let item of blockList) {   \r\n      if (item._id === list)   \r\n          return item.name;\r\n    }\r\n  };\r\n  ","D:\\DATN\\qlcc_2_admin\\src\\view\\ServiceRegister\\ServiceRegister.js",["1338","1339","1340","1341"],"import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../component/CustomButtons/Button.js\";\r\n\r\nimport CustomTabs from \"../../component/CustomTabs/CustomTabs.js\";\r\nimport ListRegister from \"./ListRegister/ListRegister.js\"\r\nimport ListAccepted from \"./ListAccepted/ListAccepted.js\";\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Apart() {\r\n  const classes = useStyles();\r\n  const userInfo=useSelector(state=>state.user.info);\r\n  const token=useSelector(state=>state.user.token);\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n        <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Yêu cầu chưa xử lý\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListRegister/>\r\n                )\r\n              },\r\n              {\r\n                tabName: \"Yêu cầu đã xử lý\",\r\n                //tabIcon: Code,\r\n                tabContent: (\r\n                  <ListAccepted/>\r\n                )\r\n              },\r\n              \r\n            ]}\r\n          />\r\n        </GridItem>\r\n       \r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}","D:\\DATN\\qlcc_2_admin\\src\\view\\ServiceRegister\\ListRegister\\ListRegister.js",["1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleData,content,title } from \"./ServiceListRegister.js\";\r\nimport CustomButton from \"../../../component/CustomButtons/Button.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\nimport LoadPlace from \"./LoadPlace.js\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport PushNotiAdmin from \"../../PushNotiAdmin.js\"\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ListRegister() {\r\n  const classes = useStyles();\r\n  const {PushNotificationAdmin}=PushNotiAdmin()\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n  const [isLoad,setIsLoad]=useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\n  const [service_id,setService_id]=useState(\"\");\r\n  const [serviceName,setServiceName]=useState(\"\");\r\n  const [draw_date,setDraw_date]=useState();\r\n  const [selectdate,setSelectDate]=useState(\"\");\r\n  const [reloadPlace,setReloadPlace]=useState(true);\r\n  const [show,setShow]=useState (false);\r\n  const [open, setOpen] = useState(false);\r\n  const [open1, setOpen1] = useState(false);\r\n  const [selectRow,setSelectRow]=useState();\r\n  const [reason,setReason]=useState();\r\n  const [reload,setReload]=useState(true);\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n    onTableChange: (action, tableState) => {\r\n      console.log(action, tableState);\r\n\r\n      // a developer could react to change on an action basis or\r\n      // examine the state as a whole and do whatever they want\r\n      switch (action) {\r\n\r\n        case \"filterChange\"://,\"search\"\r\n         \r\n          handleFilter(tableState.displayData,tableState.filterList);\r\n          break;\r\n        default:\r\n      }\r\n    },\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",   //0\r\n      label: \"id\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\", //1\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"date\",\r\n      label: \"Ngày sử dụng\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"create_date\",\r\n      label: \"Thời gian tạo\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"service_value\",\r\n      label: \"Địa điểm\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n        name: \"term_value\",  //5\r\n        label: \"Buổi\",\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"content\",\r\n        label: \"Mục đích\",\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n    {\r\n        name: \"is_read_admin\",\r\n        label: \"Tình trạng\",\r\n        options: {\r\n          display: false,\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"draw_date\",   //8\r\n        label: \"Ngày sử dụng\",\r\n        options: {\r\n          display: false,\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"service_id\",\r\n        label: \"Địa điểm\",\r\n        options: {\r\n          display: false,\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"term\",\r\n        label: \"Buổi\",\r\n        options: {\r\n          display: false,\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"user_id\", //11\r\n        label: \"user\",\r\n        options: {\r\n          display: false,\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            return (\r\n             \r\n              <div>\r\n                <Tooltip\r\n                id=\"tooltip-top\"\r\n                title=\"Chấp nhận\"\r\n                placement=\"top\"\r\n                classes={{ tooltip: classes.tooltip }}\r\n              >\r\n                <Fab\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  aria-label=\"add\"\r\n                  className={classes.margin}\r\n                  onClick={() => handleClick(tableMeta.rowData)}\r\n                >\r\n                  <Check />\r\n                </Fab>\r\n              </Tooltip>\r\n              <Tooltip\r\n                id=\"tooltip-top-start\"\r\n                title=\"Không chấp nhận\"\r\n                placement=\"top\"\r\n                classes={{ tooltip: classes.tooltip }}\r\n              >\r\n                <Fab\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  aria-label=\"add\"\r\n                  className={classes.margin}\r\n                  onClick={() => handleClick1(tableMeta.rowData)}\r\n                >\r\n                  <Close />\r\n                </Fab>\r\n              </Tooltip>\r\n              </div>\r\n              \r\n            );\r\n          },\r\n        },\r\n      },\r\n   \r\n  ];\r\n\r\n  const handleClick = async(row) => {\r\n    setSelectRow(row);\r\n    handleClickOpen();\r\n  }\r\n\r\n  const handleClick1 = async(row) => {\r\n    setSelectRow(row);\r\n    handleClickOpen1();\r\n  }\r\n  const handleClickOpen = (temp) => {\r\n    \r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClose1 = () => {\r\n    setOpen1(false);\r\n  };\r\n  const handleClickOpen1 = (temp) => {\r\n    \r\n    setOpen1(true);\r\n  };\r\n\r\n  const handleAccepted= async () => {\r\n    handleClose();\r\n    console.log(selectRow);\r\n    const body = {\r\n      register_id: selectRow[0],\r\n      service_id:selectRow[9] ,\r\n      registed:{date: selectRow[8], term: selectRow[10], user_id:selectRow[11] }\r\n  \r\n  };\r\n // console.log(body);\r\n  handleChangeStatus(selectRow[0],process.env.REACT_APP_API_LINK + `/api/register-service/update-confirm`,body, await getUser(selectRow[11]))\r\n  }\r\n  const handleDenied= async () => {\r\n    handleClose1();\r\n    console.log(selectRow);\r\n    const body = {\r\n      register_id: selectRow[0],\r\n      reason: reason\r\n  \r\n  };\r\n  handleChangeStatus(selectRow[0],process.env.REACT_APP_API_LINK + `/api/register-service/update-reject`,body, await getUser(selectRow[11]))\r\n  }\r\n  const handleChangeStatus = async (id,url,body,token_device) => {\r\n    handleOpenLoading();\r\n    try {   \r\n      console.log(body);\r\n\r\n      const res = await fetch(\r\n        url,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/register-service/change-is-read`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({register_id: id}),\r\n        }\r\n      );\r\n      if (res.status === 200&&res1.status === 200) {\r\n       \r\n        console.log(\"change ok\");\r\n        await PushNotification(token_device);\r\n        setReloadPlace(!reloadPlace)\r\n        //history.push(`/admin/reportbill`);\r\n        PushNotificationAdmin()\r\n        handleOpenSnackBar(true)\r\n        handleCloseLoading()\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n  };\r\n  const PushNotification=async(token_device)=>\r\n  {\r\n    try {\r\n        const body = {\r\n          tokens: [token_device],\r\n          title: title,\r\n          body: content,\r\n          type: 2,\r\n        };\r\n\r\n        console.log(body);\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/push-noti/add-notice`,\r\n          {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          //const result = await res.json();\r\n          console.log(\"push noti ok\");\r\n          setReload(!reload);\r\n          //history.push(`/admin/reportbill`);\r\n        } else {\r\n          console.log(\"SOMETHING WENT WRONG\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n  }\r\n  const getUser = async (user_id)=>\r\n  { \r\n    const res = await fetch(\r\n      process.env.REACT_APP_API_LINK + `/api/user/${user_id}`,\r\n      {\r\n        // get apart\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    if (res.status === 200) {\r\n      const result = await res.json();\r\n      console.log(\"token_device ok \");\r\n      return result.data.token_device;\r\n    } else {\r\n      const result = await res.json();\r\n      console.log(result.message);\r\n    }\r\n\r\n  }\r\n  const handleFilter =async(data,list)=>\r\n  {\r\n      console.log(data);\r\n      console.log(list);\r\n      if(list[2].length!==0 &&list[4].length!==0 &&data.length!==0) // đã filter ngày va nơi\r\n      {\r\n        console.log(\"ok\"); \r\n        setService_id(data[0].data[9]);  // lấy service_id dòng đầu\r\n        setDraw_date(data[0].data[8]);  // lấy draw date dòng dâu\r\n        setServiceName (data[0].data[4]);//tên\r\n        setSelectDate(data[0].data[2]); //ngày\r\n        setReloadPlace(!reloadPlace);\r\n        setShow(false);\r\n        setShow(true);      \r\n      }\r\n      else\r\n      {console.log(\"chua chon dủ\");\r\n      setShow(false);}\r\n  }\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/register-service/all-register?status=0`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/service/all-services`,\r\n        {\r\n          // get block\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200 || res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        const result1 = await res1.json();\r\n        //console.log(result.data);\r\n        //console.log(result1.data);\r\n        setData(await handleData(result.data, result1.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n  return (\r\n  <div> <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n    <GridContainer>\r\n      <GridItem xs={12} sm={12} md={10}>\r\n      {isLoad && <div>Đang xử lý...</div>}\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n      </GridItem>\r\n      <GridItem xs={12} sm={12} md={2} >\r\n       <LoadPlace service_id={service_id} service_name={serviceName} draw_date={draw_date} date={selectdate} reload={reloadPlace} show={show}></LoadPlace>\r\n      </GridItem>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Xác nhận xử lý\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={handleAccepted} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={open1}\r\n        onClose={handleClose1}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Xác nhận xử lý\r\n        </DialogTitle>\r\n        <DialogContent>\r\n        <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Lý do\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={e=>setReason(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose1} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={handleDenied} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n    </GridContainer></LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\ServiceRegister\\ListRegister\\ServiceListRegister.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\ServiceRegister\\ListRegister\\LoadPlace.js",["1353","1354","1355"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import Timeline from \"@material-ui/lab/Timeline\";\r\n// import TimelineItem from \"@material-ui/lab/TimelineItem\";\r\n// import TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\n// import TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\n// import TimelineContent from \"@material-ui/lab/TimelineContent\";\r\n// import TimelineDot from \"@material-ui/lab/TimelineDot\";\r\n\r\nimport { findDate, renderLine } from \"./ServiceListRegister.js\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function LoadPlace(props) {\r\n  const classes = useStyles();\r\n  const { service_id, service_name, draw_date, date, reload, show } = props;\r\n\r\n  const token = useSelector((state) => state.user.token);\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    setIsLoad(true);\r\n\r\n    const getRes = async () => {\r\n      try {\r\n        if (service_id.length > 2) {\r\n          const res = await fetch(\r\n            process.env.REACT_APP_API_LINK +\r\n              `/api/service/all-services?_id=${service_id || 1}`,\r\n            {\r\n              // get apart\r\n              method: \"GET\",\r\n              headers: {\r\n                Authorization: \"Bearer \" + `${token}`,\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          if (res.status === 200) {\r\n            const result = await res.json();\r\n            console.log(\"ook LoadPlace\");\r\n            console.log(result.data);\r\n            setData(await findDate(result.data[0].registed, draw_date)); //1621616400000\r\n            console.log(await findDate(result.data[0].registed, draw_date));\r\n            setIsLoad(false);\r\n          } else {\r\n            const result = await res.json();\r\n            alert(result.message);\r\n          }\r\n        } else setIsLoad(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n  return (\r\n    <>\r\n      <div>Chọn \"Ngày sử dụng\" và \"Địa điểm\" để xem lịch trình trong ngày</div>\r\n      <br />\r\n\r\n      <hr />\r\n      {isLoad && <div>Đang xử lý...</div>}\r\n      {show && !isLoad && (\r\n        <GridContainer>\r\n          <div style={{ color: \"#f40454\" }}>Màu đỏ: buổi đã duyệt</div>\r\n          <div style={{ color: \"#3c53b3\" }}>Màu xanh: buổi còn trống</div>\r\n          <TextField\r\n            id=\"apart_name\"\r\n            label=\"Địa điểm\"\r\n            //style={{ margin: 8 }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n              readOnly: true,\r\n            }}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            defaultValue={service_name || \"\"}\r\n            //onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <TextField\r\n            id=\"apart_name\"\r\n            label=\"Ngày\"\r\n            //style={{ margin: 8 }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            defaultValue={date || \"\"}\r\n            //onChange={(e) => setName(e.target.value)}\r\n          />\r\n          {data && renderLine(data)}\r\n        </GridContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\ServiceRegister\\ListAccepted\\ListAccepted.js",["1356","1357","1358","1359","1360","1361"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleData} from \"../ListRegister/ServiceListRegister.js\";\r\n\r\n\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\n\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport PushNotiAdmin from \"../../PushNotiAdmin.js\"\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ListAccepted() {\r\n  const classes = useStyles();\r\n  \r\n const [openSnackBar,setOpenSnackBar]=useState(false);\r\n const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\nconst {PushNotificationAdmin}=PushNotiAdmin()\r\n\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n  const [isLoad,setIsLoad]=useState(false);\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",   //0\r\n      label: \"id\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\", //1\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"date\",\r\n      label: \"Ngày sử dụng\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"create_date\",\r\n      label: \"Thời gian tạo\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"service_value\",\r\n      label: \"Địa điểm\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n        name: \"term_value\",  //5\r\n        label: \"Buổi\",\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"content\",\r\n        label: \"Mục đích\",\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n    {\r\n        name: \"is_read_admin\",\r\n        label: \"Tình trạng\",\r\n        options: {\r\n          display: false,\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"draw_date\",   //8\r\n        label: \"Ngày sử dụng\",\r\n        options: {\r\n          display: false,\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"service_id\",\r\n        label: \"Địa điểm\",\r\n        options: {\r\n          display: false,\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"term\",\r\n        label: \"Buổi\",\r\n        options: {\r\n          display: false,\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"user_id\", //11\r\n        label: \"user\",\r\n        options: {\r\n          display: false,\r\n          filter: false,\r\n          sort: false,\r\n        },\r\n      },\r\n\r\n  ];\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/register-service/all-register?status=1`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/service/all-services`,\r\n        {\r\n          // get block\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200 || res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        const result1 = await res1.json();\r\n        //console.log(result.data);\r\n        //console.log(result1.data);\r\n        setData(await handleData(result.data, result1.data));\r\n        \r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message); \r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div><LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n    <GridContainer>\r\n      <GridItem xs={12} sm={12} md={12}>\r\n      {isLoad && <div>Đang xử lý...</div>}\r\n      <MUIDataTable\r\n        title={\" \"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n      </GridItem>\r\n\r\n    </GridContainer>\r\n    </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar></div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\CreateNotification\\Block\\BlockNotification.js",["1362","1363","1364"],"// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  alerts: {\r\n    marginTop: \"18px\",\r\n  },\r\n  myButton:{\r\n    float: \"right\"\r\n }\r\n}));\r\nexport default function BlockNotification(props) {\r\n  const token = useSelector((state) => state.user.token);\r\n  const {setBlock, handleOpenLoading,handleCloseLoading,handleOpenSnackBar}=props;\r\n  const [isLoad,setIsLoad]=useState(true);\r\n  const [blockList,setBlockList]=useState([]);\r\n // console.log(\"block\");\r\n  useEffect(() => {\r\n    setIsLoad(true);\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/block/all`,\r\n        {\r\n          // get block\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result1 = await res1.json();\r\n        console.log(result1.data);\r\n        setBlockList(result1.data);\r\n        setBlock(result1.data[0]._id);\r\n        setIsLoad(false);\r\n        handleCloseLoading()\r\n        // setData(await handleData(result.data, result1.data));\r\n      } else {\r\n        const result = await res1.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}catch (err) {\r\n        console.log(err);\r\n         handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n      {!isLoad &&\r\n              <TextField\r\n                id=\"to\"\r\n                select\r\n                label=\"Tòa nhà\"\r\n                margin=\"normal\"\r\n                onChange={(e) => setBlock(e.target.value)}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n              >\r\n                {blockList.map((option) => (\r\n                  <option key={option._id} value={option._id}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </TextField>}\r\n    </>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\BrowsePost\\BrowsePost.js",["1365","1366","1367","1368"],"import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../component/CustomButtons/Button.js\";\r\n\r\nimport CustomTabs from \"../../component/CustomTabs/CustomTabs.js\";\r\nimport ListBrowsePost from \"./ListBrowsePost/ListBrowsePost.js\"\r\nimport AcceptedBrowsePost from \"./AcceptedBrowsePost/AcceptedBrowsePost.js\";\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Apart() {\r\n  const classes = useStyles();\r\n  const userInfo=useSelector(state=>state.user.info);\r\n  const token=useSelector(state=>state.user.token);\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n        <CustomTabs\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Yêu cầu chưa xử lý\",\r\n                //tabIcon: BugReport,\r\n                tabContent: (      \r\n                    <ListBrowsePost/>\r\n                )\r\n              },\r\n              {\r\n                tabName: \"Yêu cầu đã xử lý\",\r\n                //tabIcon: Code,\r\n                tabContent: (\r\n                  <AcceptedBrowsePost/>\r\n                )\r\n              },\r\n              \r\n            ]}\r\n          />\r\n        </GridItem>\r\n       \r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}","D:\\DATN\\qlcc_2_admin\\src\\view\\BrowsePost\\ListBrowsePost\\ListBrowsePost.js",["1369","1370","1371"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleData } from \"./ServiceListBrowsePost.js\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ListBrowsePost() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\n\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: false,\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"title\",\r\n      label: \"Tiêu đề\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"content\",\r\n      label: \"Nội dung\",\r\n      options: {\r\n        display: false,\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"create_date\",\r\n      label: \"Ngày tạo\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"is_read_value\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            \r\n            <div>\r\n            <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              color=\"default\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0])}\r\n            >\r\n              <EditIcon color=\"primary\" />\r\n            </Fab>\r\n          </Tooltip>\r\n          </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleClick = async(id) => {\r\n    await handleChangeStatus(id)\r\n    history.push(`/admin/browse_post/detail/${id}`);\r\n  };\r\n  const handleChangeStatus = async (id) => {\r\n  \r\n    try {\r\n      const body=\r\n      {\r\n        post_id: id\r\n      }\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/post/change-is-read`,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"ok\");\r\n        \r\n     \r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        \r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/post/all-post?status=0`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n     \r\n      if (res.status === 200 ) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        console.log(result.data);\r\n        setData(await handleData(result.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message)\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n      </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\BrowsePost\\ListBrowsePost\\ServiceListBrowsePost.js",["1372"],"\r\nexport const title=\"Yêu cầu đăng bài\"\r\nexport const content=\"Yêu cầu của anh/chị đã được xử lý\"\r\n\r\nexport const handleData = (list, place) => {\r\n   console.log(list);\r\n  console.log(place);\r\n  const newlist = [];\r\n  for (let i = 0; i < list.length; i++) {\r\n    let createdate = new Date(list[i].create_date);\r\n    let date = new Date(list[i].date);\r\n    newlist[i] = {\r\n      id: list[i]._id,\r\n      order: i + 1,\r\n      draw_create_date: list[i].create_date,\r\n      create_date:\r\n      createdate.getDate() + \"/\" + (createdate.getMonth() + 1) + \"/\" + createdate.getFullYear(),\r\n      content: list[i].content,\r\n      title: list[i].title,\r\n      is_read: list[i].is_read,\r\n      is_read_value: list[i].is_read ? (\r\n        <div style={{ color: \"green\" }}>Đã đọc</div>\r\n      ) : (\r\n        <div style={{ color: \"red\" }}>Chưa đọc</div>\r\n      ),\r\n      user_id:list[i].user_id,\r\n    };\r\n  }\r\n  console.log(newlist);\r\n  return newlist;\r\n};\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\BrowsePost\\DetailBrowsePost\\DetailBrowsePost.js",["1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport Card from \"../../../component/Card/Card.js\";\r\n//import CardAvatar from \"../../../component/Card/CardAvatar.js\";\r\nimport SlideShow from \"../../../component/SlideShow/SlideShow.js\"\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { handleData, title, content } from \"./ServiceDetailBrowsePost.js\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport PushNotiAdmin from \"../../PushNotiAdmin.js\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  myButton:{\r\n    float: \"right\",\r\n    width:\"200px\"\r\n  }\r\n}));\r\nexport default function DetailRequestSelfRepair() {\r\n  //const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const { id } = useParams();\r\n  const [data, setData] = useState({\r\n  \r\n  });\r\n  const {PushNotificationAdmin}=PushNotiAdmin()\r\n  const [isError, setIsError] = useState(false);\r\n  const [image, setImage] = useState([]);\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [open1, setOpen1] = useState(false);\r\n  const [reason, setReason] = useState();\r\n  const [reload, setReload] = useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n\r\n  const [selected, setSelected] = useState(true); // true:chấp nhận|| false:không chấp nhận\r\n  //   const token = useSelector((state) => state.user.token);\r\n  const [isHandle, setIsHandle] = useState(false);\r\n\r\n  const handleChangeStatus = async (status) => {\r\n    handleClose();\r\n    handleClose1();\r\n    handleOpenLoading()\r\n    let body = {};\r\n    let url = ``;\r\n    try { \r\n       //chap nhận\r\n      if (status === 1) {\r\n      \r\n        body = {\r\n          post_id: data._id,\r\n        };\r\n        url=process.env.REACT_APP_API_LINK + `/api/post/confirm-post`\r\n      }\r\n      // khong chap nhan\r\n      if (status === 2) {\r\n        body = {\r\n          post_id: data._id,\r\n          reason: reason,\r\n        };\r\n        url=process.env.REACT_APP_API_LINK + `/api/post/reject-post`\r\n      }\r\n\r\n      console.log(body);\r\n      const res = await fetch(url,\r\n        {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"ok\");\r\n        console.log(result.data)\r\n        await PushNotification();\r\n        PushNotificationAdmin()\r\n        setReload(!reload);\r\n        handleOpenSnackBar(true)\r\n        handleCloseLoading()\r\n        //history.push(`/admin/reportbill`);\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n        \r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n  };\r\n  const PushNotification = async () => {\r\n    try {\r\n      const body = {\r\n        tokens: [data.token_device],\r\n        title: title,\r\n        body: content,\r\n        type: 2,\r\n      };\r\n\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/push-noti/add-notice`,\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        //const result = await res.json();\r\n        console.log(\"push noti ok\");\r\n        //history.push(`/admin/reportbill`);\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getUrl = async (key) => {\r\n    let temp=[];\r\n    if (key.length >= 1) {\r\n      try {\r\n        for (let i=0;i<key.length;i++)\r\n       { const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/uploadv2/image-url?key=${key[i]}`,\r\n          {\r\n            // get apart\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\"get url ok\");\r\n          temp[i]={value:result.imageUrl};\r\n        } else {\r\n          const result = await res.json();\r\n        console.log(result.message);\r\n       \r\n        }}\r\n        console.log(temp);\r\n        return temp;\r\n      } catch (err) {\r\n        console.log(err);\r\n      \r\n      }\r\n    }else return [\"\"]\r\n    setIsLoad(false);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClickOpen1 = () => {\r\n    setOpen1(true);\r\n  };\r\n  const handleClose1 = () => {\r\n    setOpen1(false);\r\n  };\r\n\r\n  const getUser = async (data) => {\r\n    try{\r\n    const res = await fetch(\r\n      process.env.REACT_APP_API_LINK + `/api/user/${data.user_id}`,\r\n      {\r\n        // get apart\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    if (res.status === 200) {\r\n      const result = await res.json();\r\n\r\n      console.log(\"user ok\");\r\n      setData(handleData(data, result.data));\r\n      //setData(result.data);\r\n      setIsLoad(false);\r\n    } else {\r\n      const result = await res.json();\r\n      console.log(result.message);\r\n      handleOpenSnackBar(false)\r\n    }}catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n    }\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  useEffect(() => {\r\n    const getRes = async () => {\r\n      setIsLoad(true);\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/post/all-post?_id=${id}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const result = await res.json();\r\n        console.log(\"Vo 200OK\");\r\n        console.log(result.data[0].images);\r\n        await getUser(result.data[0]);\r\n        if (result.data[0].images!==[])\r\n          setImage(await getUrl(result.data[0].images));\r\n\r\n        setIsLoad(false);\r\n      \r\n     \r\n      } else {\r\n        const result = await res.json();\r\n      console.log(result.message);\r\n      handleOpenSnackBar(false)\r\n      \r\n      }\r\n    }catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n     \r\n    }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div> <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      {!isLoad ? (\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={5}>\r\n            <Card profile>\r\n              <SlideShow  images={image}></SlideShow>\r\n            </Card>\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={7}>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Chi tiết bài đăng</h4>\r\n            </CardHeader>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <TextField\r\n                  id=\"title\"\r\n                  label=\"Tiêu đề\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                    readOnly: true,\r\n                  }}\r\n                  InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                  \r\n                  variant=\"outlined\"\r\n                  defaultValue={data.title || \"\"}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  id=\"content\"\r\n                  label=\"Nội dung\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                    readOnly: true,\r\n                  }}\r\n                  InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                  \r\n                  multiline={true}\r\n                  variant=\"outlined\"\r\n                  defaultValue={data.content}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n                 <TextField\r\n                  id=\"user_name\"\r\n                  label=\"Người gửi\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                    readOnly: true,\r\n                  }}\r\n                  InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                  \r\n                  variant=\"outlined\"\r\n                  defaultValue={data.user_name}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"time\"\r\n                  label=\"Thời gian\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                    readOnly: true,\r\n                  }}\r\n                  InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                  \r\n                  variant=\"outlined\"\r\n                  defaultValue={data.time}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"contact\"\r\n                  label=\"Liên hệ\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                    readOnly: true,\r\n                  }}\r\n                  InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                  \r\n                  variant=\"outlined\"\r\n                  defaultValue={data.contact}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                />\r\n                \r\n                <TextField\r\n                  id=\"status\"\r\n                  label=\"Trạng thái hiện tại\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                    readOnly: true,\r\n                  }}\r\n                  InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                  \r\n                  variant=\"outlined\"\r\n                  defaultValue={data.status_value}\r\n                  //onChange={(e) => setName(e.target.value)}\r\n                ></TextField>\r\n              </GridItem>\r\n            </GridContainer>\r\n          </GridItem>\r\n          <div />\r\n          <GridItem xs={12} sm={12} md={3} />\r\n          \r\n          {data.status === 0 && (\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <Button\r\n                className={classes.myButton}\r\n                color=\"primary\"\r\n                onClick={(e) => handleClickOpen(true)}\r\n              >\r\n                Chấp nhận\r\n              </Button>\r\n              <Button\r\n                className={classes.myButton}\r\n                color=\"primary\"\r\n                onClick={(e) => handleClickOpen1(true)}\r\n              >\r\n                Không chấp nhận\r\n              </Button>\r\n            </GridItem>\r\n          )}\r\n        </GridContainer>\r\n      ) : (\r\n        <div>Đang xử lý, vui lòng chờ...</div>\r\n      )}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Xác nhận chấp nhận bài đăng\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n           \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={e=>handleChangeStatus(1)} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open1}\r\n        onClose={handleClose1}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Xác nhận không chấp nhận bài đăng\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Lý do\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={(e) => setReason(e.target.value)}\r\n            />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose1} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={e=>handleChangeStatus(2)} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\BrowsePost\\DetailBrowsePost\\ServiceDetailBrowsePost.js.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\SlideShow\\SlideShow.js",["1384","1385","1386"],"import React, { Component } from 'react';\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nexport default function DemoCarousel(props) {\r\n   const {images}=props;\r\n   //console.log(images);\r\n\r\n    const renderImage=()=>\r\n    {\r\n        console.log(images.length);\r\n        if(images.length!==0)\r\n           return(\r\n            <Carousel> \r\n            {images.map((option) => (\r\n               <div>\r\n               <img  src={option.value} />\r\n               {/* <p className=\"legend\">Legend 1</p> */}\r\n           </div>\r\n            ))}\r\n        </Carousel>\r\n           )\r\n        else \r\n               return( \r\n                 <img style={{width:\"80px\"}} src={process.env.PUBLIC_URL + '/noImage.jpg'}></img>\r\n                )\r\n    }\r\n        return (\r\n            <div>\r\n           {renderImage()}\r\n           </div>\r\n        );\r\n    }\r\n\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\BrowsePost\\AcceptedBrowsePost\\AcceptedBrowsePost.js",["1387","1388"],"import Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\";\r\nimport { handleData } from \"../ListBrowsePost/ServiceListBrowsePost.js\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function AcceptedBrowsePost() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: false,\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"title\",\r\n      label: \"Tiêu đề\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"content\",\r\n      label: \"Nội dung\",\r\n      options: {\r\n        display: false,\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"create_date\",\r\n      label: \"Ngày tạo\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    // {\r\n    //   name: \"is_read_value\",\r\n    //   label: \"Tình trạng\",\r\n    //   options: {\r\n    //     filter: false,\r\n    //     sort: false,\r\n    //   },\r\n    // },\r\n    {\r\n      name: \"\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            \r\n            <div>\r\n            <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              //color=\"primary\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0])}\r\n            >\r\n              <EditIcon color=\"primary\"/>\r\n            </Fab>\r\n          </Tooltip>\r\n          </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleClick = (id) => {\r\n\r\n    history.push(`/admin/browse_post/detail/${id}`);\r\n  };\r\n   const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleOpenLoading();\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/post/all-post?status=1`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n     \r\n      if (res.status === 200 ) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        console.log(result.data);\r\n        setData(await handleData(result.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n       console.log(result.message)\r\n       handleOpenSnackBar(false)\r\n       handleCloseLoading()\r\n      }}catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n      </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\firebase.js",[],"D:\\DATN\\qlcc_2_admin\\src\\notifications.js",["1389","1390"],"import React, { Fragment, Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Card, CardContent, Typography, Switch, FormControlLabel } from '@material-ui/core';\r\nimport { messaging } from './firebase';\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        marginTop: theme.spacing.unit * 2,\r\n        marginBottom: theme.spacing.unit * 2,\r\n        marginLeft: theme.spacing.unit * 2,\r\n        marginRight: theme.spacing.unit * 2\r\n    },\r\n    noteTextPos: {\r\n        marginTop: theme.spacing.unit * 2\r\n    }\r\n});\r\n\r\nclass Notifications extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    renderSubscriptionOptions(classes) {\r\n        if(!('serviceWorker' in navigator) && !('PushManager' in window)) {\r\n            return(\r\n                <Typography className={classes.noteTextPos}>\r\n                    Notification feature is supported only in:<br/>\r\n                    Chrome Desktop and Mobile (version 50+)<br/>\r\n                    Firefox Desktop and Mobile (version 44+)<br/>\r\n                    Opera on Mobile (version 37+)\r\n                </Typography>\r\n            );\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <FormControlLabel \r\n                        control={<Switch />}\r\n                        label=\"Enable/Disable GNIB(IRP) Appointment Notifications\"\r\n                        onChange={this.gnibApptSubscriptionToggle}\r\n                        checked={this.state.gnibApptSubscriptionToggleSwitch}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <Card className={classes.card}>\r\n                    <CardContent>\r\n                        {this.renderSubscriptionOptions(classes)}\r\n                    </CardContent>\r\n                </Card>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Notifications);","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\ServiceDetailApart.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\InfoApart\\InfoApart.js",["1391","1392","1393","1394","1395","1396","1397"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../../../component/CustomButtons/Button.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  alerts: {\r\n    marginTop: \"18px\",\r\n  },\r\n  myButton:{\r\n    float: \"right\"\r\n }\r\n}));\r\nexport default function InfoApart(props) {\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.user.token);\r\n  const {data}=props\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"apartname\"\r\n                label=\"Tên căn hộ\"\r\n                fullWidth\r\n                defaultValue={data.name}\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n            </GridItem>\r\n            <GridContainer />\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"outlined-select-currency-native\"\r\n                label=\"Tòa nhà\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={data.block_value}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n              >\r\n               \r\n              </TextField>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"outlined-select-currency-native\"\r\n                label=\"Tình trạng\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={data.status_value}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n              >\r\n               \r\n              </TextField>\r\n            </GridItem>\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"area\"\r\n                label=\"Diện tích căn hộ(m2)\"\r\n                //style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={data.area}\r\n                variant=\"outlined\"\r\n              />\r\n            </GridItem>\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"direction\"\r\n                label=\"Hướng căn hộ\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={data.direction}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n              >\r\n               \r\n              </TextField>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n            </GridItem>\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"type\"\r\n                label=\"Loại căn hộ\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={data.type}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n              >\r\n                \r\n              </TextField>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={3}>\r\n              \r\n            </GridItem>\r\n\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"description\"\r\n                label=\"Mô tả\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                multiline={true}\r\n                defaultValue={data.description}\r\n                variant=\"outlined\"\r\n                //defaultValue={address}\r\n              />\r\n            </GridItem>\r\n            {data.owner_info!==null\r\n            ?\r\n              <>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"username\"\r\n                label=\"Người sở hữu\"\r\n                //style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={data.owner_info.name}\r\n                variant=\"outlined\"\r\n              />\r\n            </GridItem> \r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <TextField\r\n                id=\"cmnd\"\r\n                label=\"CMND\"\r\n                //style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={data.owner_info.identify_card}\r\n                variant=\"outlined\"\r\n              />\r\n            </GridItem> \r\n            </>:<></>}    \r\n          </GridContainer>\r\n          <GridItem xs={12} sm={12} md={9}>\r\n          {/* <Button className={classes.myButton} color=\"primary\" onClick={(e) => handleSubmit(e)}>\r\n            Lưu lại\r\n          </Button> */}\r\n          </GridItem>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\APIDetailApart.js",["1398","1399","1400","1401"],"\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nexport default function APIDetailApart(){\r\n    const token = useSelector((state) => state.user.token);\r\n    const getUrl = async (key) => {\r\n        let temp = [];\r\n        console.log(\"in\");\r\n        if (key.length >= 1) {\r\n          try {\r\n            for (let i = 0; i < key.length; i++) {\r\n              if(key[i]!==\"\")\r\n              {const res = await fetch(\r\n                process.env.REACT_APP_API_LINK +\r\n                  `/api/uploadv2/image-url?key=${key[i]}`,\r\n                {\r\n                  // get apart\r\n                  method: \"GET\",\r\n                  headers: {\r\n                    Authorization: \"Bearer \" + `${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                  },\r\n                }\r\n              );\r\n              if (res.status === 200) {\r\n                const result = await res.json();\r\n                console.log(\"get url ok\");\r\n                temp[i] = { value: result.imageUrl };\r\n              } else {\r\n                const result = await res.json();\r\n                alert(result.message);\r\n              }}\r\n            }\r\n            console.log(temp);\r\n            return temp;\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        } else return temp;\r\n      };\r\n    \r\n      const getUser = async (data) => {\r\n        try {\r\n            const res = await fetch(\r\n              process.env.REACT_APP_API_LINK + `/api/user/${data.owner.id}`,\r\n              {\r\n                // get apart\r\n                method: \"GET\",\r\n                headers: {\r\n                  Authorization: \"Bearer \" + `${token}`,\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n              }\r\n            );\r\n\r\n    \r\n            if (res.status === 200 ) {\r\n              const result = await res.json();\r\n              return result.data\r\n            } else {\r\n              const result = await res.json();\r\n              alert(result.message);\r\n            }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      const getBlock = async (data) => {\r\n        try {\r\n          const res = await fetch(\r\n            process.env.REACT_APP_API_LINK + `/api/block/all`,\r\n            {\r\n              method: \"GET\",\r\n              headers: {\r\n                Authorization: \"Bearer \" + `${token}`,\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n    \r\n          if (res.status === 200) {\r\n            const result = await res.json();\r\n            console.log(\"block ok\");\r\n            return result.data;\r\n          } else {\r\n            const result = await res.json();\r\n            alert(result.message);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n    \r\nreturn(\r\n   { getUrl,\r\n    getUser,\r\n    getBlock}\r\n)\r\n}","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\Edit.js",["1402","1403","1404"],"import React, { useEffect, useState } from \"react\";\r\nimport EditApart from \"./EditApart/EditApart.js\"\r\nimport EditOwner from \"./EditOwner/EditOwner.js\"\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nexport default function Edit(props){\r\n \r\n    const {data,isLoad,blockList,setIsHandle}=props;\r\n    const List =[\r\n        {id:1,name:\"Cập nhật thông tin\"},\r\n        {id:2,name:\"Cập nhật chủ căn hộ\"},\r\n    ]\r\n    const [id,setID]=useState(1);\r\n     const[reload,setReload]=useState(true);\r\n     const handleChange=(id)=>{\r\n       setID(id)\r\n      console.log(id);\r\n    \r\n  }\r\n    const renderEdit=(id)=>{\r\n      \r\n        if(parseInt(id)===1)\r\n        return (<EditApart data={data} isLoad={isLoad} blockList={blockList} setIsHandle={setIsHandle}></EditApart>);\r\n        if(parseInt(id)===2)\r\n        return (<EditOwner  data={data} isLoad={isLoad} blockList={blockList} setIsHandle={setIsHandle}></EditOwner>)\r\n    }\r\n    \r\n    console.log(\"render\");\r\n    return(\r\n        <div>\r\n            <GridContainer>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"type\"\r\n                  select\r\n                  label=\"Thông tin chỉnh sửa\"\r\n                  margin=\"normal\"\r\n                  defaultValue={List[0]}\r\n                  onChange={(e) => {handleChange(e.target.value)}}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                >\r\n                  {List.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </GridItem> <GridItem xs={12} sm={12} md={12}>\r\n              {renderEdit(id)}</GridItem>\r\n              </GridContainer>\r\n        </div>\r\n    )\r\n}","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\EditApart\\EditApart.js",["1405","1406","1407"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../../../component/CustomButtons/Button.js\";\r\nimport { directionList, typeList } from \"./ServiceEditApart.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Snackbar from \"../../../../component/SnackBar/Snackbar.js\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  alerts: {\r\n    marginTop: \"18px\",\r\n  },\r\n  myButton: {\r\n    float: \"right\",\r\n  },\r\n}));\r\nexport default function EditApart(props) {\r\n  const classes = useStyles();\r\n  // const [blockList, setBlockList] = useState([]);\r\n  const nameCheck = /^[a-zA-Z0-9]+$/;\r\n  const phoneCheck = /^[0-9]+$/;\r\n  const token = useSelector((state) => state.user.token);\r\n  const [openSnackBar, setOpenSnackBar] = useState(false);\r\n  const [snackType, setSnackType] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const { data, isLoad, blockList,setIsHandle } = props;\r\n  const [alertApartName, setAlertApartName] = useState(false);\r\n  const [alertBlock, setAlertBlock] = useState(false);\r\n  const [alertArea, setAlertArea] = useState(false);\r\n  const [alertFloor, setAlertFloor] = useState(false);\r\n  const [alertDirection, setAlertDirection] = useState(false);\r\n  const [alertType, setAlertType] = useState(false);\r\n  const [alertDescription, setAlertDescription] = useState(false);\r\n\r\n  const [apartName, setApartName] = useState(data.name);\r\n  const [block, setBlock] = useState(data.block);\r\n  const [area, setArea] = useState(data.area);\r\n  const [floor, setFloor] = useState(data.floor);\r\n  const [direction, setDirection] = useState(data.direction);\r\n  const [type, setType] = useState(data.type);\r\n  const [description, setDescription] = useState(data.description);\r\n  console.log(\"apart\");\r\n  const checkApartName = (name) => {\r\n    if (name !== \"\" && name.match(nameCheck)) {\r\n      setAlertApartName(false);\r\n      setApartName(name);\r\n      return true;\r\n    } else {\r\n      setAlertApartName(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkBlock = (block) => {\r\n    if (block !== \"\") {\r\n      setAlertBlock(false);\r\n      setBlock(block);\r\n      return true;\r\n    } else {\r\n      setAlertBlock(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkArea = (area) => {\r\n    if (area !== \"\" && area.toString().match(phoneCheck)) {\r\n      setAlertArea(false);\r\n      setArea(area);\r\n      return true;\r\n    } else {\r\n      setAlertArea(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkFloor = (floor) => {\r\n    if (floor !== \"\" && floor.toString().match(phoneCheck)) {\r\n      setAlertFloor(false);\r\n      setFloor(floor);\r\n      return true;\r\n    } else {\r\n      setAlertFloor(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkDirection = (direction) => {\r\n    if (direction !== \"\") {\r\n      console.log(direction);\r\n      setAlertDirection(false);\r\n      setDirection(direction);\r\n      return true;\r\n    } else {\r\n      setAlertDirection(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkType = (type) => {\r\n    if (type !== \"\") {\r\n      setAlertType(false);\r\n      setType(type);\r\n      return true;\r\n    } else {\r\n      setAlertType(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkDescription = (address) => {\r\n    if (address !== \"\") {\r\n      setAlertDescription(false);\r\n      setDescription(address);\r\n      return true;\r\n    } else {\r\n      setAlertDescription(true);\r\n      return false;\r\n    }\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n\r\n  const editApart = async () => {\r\n    handleClose();\r\n    setIsHandle(true);\r\n    if (\r\n      checkApartName(apartName) &&\r\n      checkBlock(block) &&\r\n      checkArea(area) &&\r\n      checkFloor(floor) &&\r\n      checkDirection(direction) &&\r\n      checkType(type) &&\r\n      checkDescription(description)\r\n    ) {\r\n      const body = {\r\n        apart_id: data._id,\r\n        name: apartName,\r\n        block: block,\r\n        area: parseInt(area),\r\n        direction: direction,\r\n        type: type,\r\n        images: data.images,\r\n        description: description,\r\n        floor: parseInt(floor),\r\n      };\r\n      console.log(body);\r\n\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/apart/update`,\r\n          {\r\n            method: \"PUT\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n\r\n          console.log(\"edit ok\");\r\n          console.log(result);\r\n          setIsHandle(false);\r\n          handleOpenSnackBar(true);\r\n        } else {\r\n         console.log(\"SOMETHING WENT WRONG\");\r\n         setIsHandle(false);\r\n         handleOpenSnackBar(false);\r\n          }\r\n      } catch (err) {\r\n        console.log(err); \r\n        setIsHandle(false);\r\n        handleOpenSnackBar(false);\r\n       \r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    \r\n      {!isLoad && (\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={12}>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"apartname\"\r\n                  label=\"Tên căn hộ\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  defaultValue={data.name}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => checkApartName(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertApartName && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridContainer />\r\n\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"outlined-select-currency-native\"\r\n                  select\r\n                  label=\"Tòa nhà\"\r\n                  margin=\"normal\"\r\n                  defaultValue={data.block}\r\n                  onChange={(e) => checkBlock(e.target.value)}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                >\r\n                  {blockList.map((option) => (\r\n                    <option key={option.id} value={option._id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertBlock && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"area\"\r\n                  label=\"Diện tích căn hộ(m2)\"\r\n                  defaultValue={data.area}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => checkArea(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertArea && (\r\n                  <Alert severity=\"error\" className={classes.alerts}>\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"area\"\r\n                  label=\"Tầng\"\r\n                  defaultValue={data.floor}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => checkFloor(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertFloor && (\r\n                  <Alert severity=\"error\" className={classes.alerts}>\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"direction\"\r\n                  select\r\n                  label=\"Hướng căn hộ\"\r\n                  margin=\"normal\"\r\n                  defaultValue={data.direction}\r\n                  onChange={(e) => checkDirection(e.target.value)}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                >\r\n                  {directionList.map((option) => (\r\n                    <option key={option.id} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertDirection && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"type\"\r\n                  select\r\n                  label=\"Loại căn hộ\"\r\n                  margin=\"normal\"\r\n                  defaultValue={data.type}\r\n                  onChange={(e) => checkType(e.target.value)}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                >\r\n                  {typeList.map((option) => (\r\n                    <option key={option.id} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertType && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"description\"\r\n                  label=\"Mô tả\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  defaultValue={data.description}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  //defaultValue={address}\r\n                  onChange={(e) => checkDescription(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertDescription && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n            </GridContainer>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <Button\r\n                className={classes.myButton}\r\n                color=\"primary\"\r\n                onClick={e=>handleClickOpen()}\r\n              >\r\n                Lưu lại\r\n              </Button>\r\n            </GridItem>\r\n          </GridItem>\r\n         \r\n          <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n\r\n          <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n                  Xác nhận chỉnh sửa\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n           \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => editApart(e)} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        </GridContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\EditApart\\ServiceEditApart.js",[],"D:\\DATN\\qlcc_2_admin\\src\\component\\SnackBar\\Snackbar.js",["1408"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n  const classes = useStyles();\r\nconst {open,type,handleClose}=props\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        {type ?\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Thành công!\r\n        </Alert>   \r\n        :\r\n        <Alert severity=\"error\">Thất bại!</Alert>\r\n        }\r\n      </Snackbar>\r\n   \r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\component\\CustomLoadingOverlay\\CustomLoadingOverlay.js",["1409"],"import React from \"react\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nexport default function CustomLoadingOverlay(props) {\r\n  const { isActive } = props;\r\n\r\n  return (\r\n    <LoadingOverlay active={true} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n    </LoadingOverlay>\r\n  );\r\n}\r\n",["1410","1411"],"D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\DetailApart\\EditOwner\\EditOwner.js",["1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../../../component/CustomButtons/Button.js\";\r\n// import { directionList, typeList } from \"./ServiceEditApart.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Snackbar from \"../../../../component/SnackBar/Snackbar.js\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport SearchTextField from \"../../../../component/SearchTextField/SearchTextField.js\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  alerts: {\r\n    marginTop: \"18px\",\r\n  },\r\n  myButton: {\r\n    float: \"right\",\r\n  },\r\n}));\r\nconst is_activeList=[{id:true,name:\"Có dùng app\"},{id:false,name:\"Không dùng app\"},\r\n]\r\nconst statusList=[{id:2,name:\"Đã bán\"},\r\n  {id:1,name:\"Căn hộ trống\"},\r\n  \r\n]\r\nexport default function EditApart(props) {\r\n  const classes = useStyles();\r\n  // const [blockList, setBlockList] = useState([]);\r\n  const nameCheck = /^[a-zA-Z0-9]+$/;\r\n  const phoneCheck = /^[0-9]+$/;\r\n  const token = useSelector((state) => state.user.token);\r\n  const [openSnackBar, setOpenSnackBar] = useState(false);\r\n  const [snackType, setSnackType] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const { data, isLoad, blockList, setIsHandle } = props;\r\n  const [alertIs_Active, setAlertIs_Active] = useState(false);\r\n  const [alertStatus, setAlertStatus] = useState(false);\r\n  const [alertUserSelected, setAlertUserSelected] = useState(false);\r\n  const [is_Active, setIs_Active] = useState(true);\r\n  const [status,setStatus]=useState(2);\r\n  const [userList,setUserList]=useState();\r\n  const [userSelected,setUserSelected]=useState();\r\n  \r\n  const checkIs_Active = (value) => {\r\n    if (value !== \"\") {\r\n      setAlertIs_Active(false);\r\n      setIs_Active(value);\r\n      return true;\r\n    } else {\r\n      setAlertIs_Active(true);\r\n      return false;\r\n    }\r\n  };const checkStatus = (value) => {\r\n    if (value !== \"\") {\r\n      setAlertStatus(false);\r\n      setStatus(value);\r\n      return true;\r\n    } else {\r\n      setAlertStatus(true);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const checkUserSelected = (userSelected) => {\r\n\r\n    if (userSelected !== undefined &&userSelected !== null ) {\r\n      console.log(userSelected);\r\n      setAlertUserSelected(false);\r\n      setUserSelected(userSelected);\r\n      return true;\r\n    } else {\r\n      setAlertUserSelected(true);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n\r\n  const editApart = async () => {\r\n    handleClose();\r\n    setIsHandle(true);\r\n    //&& checkUserSelected(userSelected)\r\n    if (checkIs_Active(is_Active) && checkStatus(status)) { \r\n      const body = {\r\n        apart_id: data._id,\r\n        user_id: data.owner.id,\r\n        is_active: is_Active===true?true:false,\r\n        status:status\r\n\r\n      };\r\n      console.log(body);\r\n\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/apart/update-owner`,\r\n          {\r\n            method: \"PUT\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\"edit ok\");\r\n          console.log(result);\r\n          setIsHandle(false);\r\n          handleOpenSnackBar(true);\r\n        } else {\r\n          console.log(\"SOMETHING WENT WRONG\");\r\n          setIsHandle(false);\r\n          handleOpenSnackBar(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        setIsHandle(false);\r\n        handleOpenSnackBar(false);\r\n      }\r\n    }\r\n    else{\r\n      setIsHandle(false);\r\n      handleOpenSnackBar(false);\r\n    }\r\n  };\r\n  // const renderValue=(value)=>{\r\n  //   if(!value)\r\n  //     return ;\r\n  //   else \r\n  //     return (<>\r\n  //       <GridItem xs={12} sm={12} md={9}>\r\n  //               <TextField\r\n  //                 id=\"useername\"\r\n  //                 label=\"Tên người dùng\"\r\n  //                 fullWidth\r\n  //                 margin=\"normal\"\r\n  //                 value={userSelected.name}\r\n  //                 //defaultValue={userSelected.name}\r\n  //                 InputLabelProps={{\r\n  //                   shrink: true,\r\n  //                 }}\r\n  //                 InputProps={{\r\n  //                   readOnly: true,\r\n  //                 }}\r\n        \r\n  //                 variant=\"outlined\"\r\n  //               />\r\n  //             </GridItem>\r\n  //             <GridItem xs={12} sm={12} md={9}>\r\n  //               <TextField\r\n  //                 id=\"phone\"\r\n  //                 label=\"Số điện thoại\"\r\n  //                 fullWidth\r\n  //                 margin=\"normal\"\r\n  //                 value={userSelected.phone}\r\n  //                 //defaultValue={userSelected.name}\r\n  //                 InputLabelProps={{\r\n  //                   shrink: true,\r\n  //                 }}\r\n  //                 InputProps={{\r\n  //                   readOnly: true,\r\n  //                 }}\r\n        \r\n  //                 variant=\"outlined\"\r\n  //               />\r\n  //             </GridItem>\r\n  //     </>)\r\n  // }\r\n\r\n  useEffect(() => {\r\n    setIsHandle(true);\r\n    const getRes = async () => { \r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/user/all`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.status === 200 ) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        console.log(result.data);\r\n        setUserList(result.data);\r\n       setIsHandle(false)\r\n        \r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n        handleOpenSnackBar(false)\r\n        setIsHandle(false)\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        setIsHandle(false)\r\n      }\r\n  }\r\n    getRes();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!isLoad && (\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={12}>\r\n            <GridContainer><GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"outlined-select-currency-native\"\r\n                  select\r\n                  label=\"Tình trạng căn hộ\"\r\n                  margin=\"normal\"\r\n                  //defaultValue={data.block}\r\n                  onChange={(e) => checkStatus(e.target.value)}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                >\r\n                  {statusList.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n              \r\n                <TextField\r\n                  id=\"outlined-select-currency-native\"\r\n                  select\r\n                  label=\"Tình trạng chủ căn hộ\"\r\n                  margin=\"normal\"\r\n                  //defaultValue={data.block}\r\n                  onChange={(e) => checkIs_Active(e.target.value)}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                >\r\n                  {is_activeList.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertIs_Active && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n                \r\n              {/* <GridItem xs={12} sm={12} md={9}>\r\n                <SearchTextField data={userList} setSelected ={setUserSelected}></SearchTextField>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertUserSelected && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem> */}\r\n              {/* {renderValue(userSelected)} */}\r\n            </GridContainer>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <Button\r\n                className={classes.myButton}\r\n                color=\"primary\"\r\n                onClick={(e) => handleClickOpen()}\r\n              >\r\n                Lưu lại\r\n              </Button>\r\n            </GridItem>\r\n          </GridItem>\r\n\r\n          <Snackbar\r\n            open={openSnackBar}\r\n            type={snackType}\r\n            handleClose={handleCloseSnackBar}\r\n          ></Snackbar>\r\n\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">\r\n              Xác nhận chỉnh sửa\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-slide-description\">\r\n                \r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Hủy\r\n              </Button>\r\n              <Button onClick={(e) => editApart(e)} color=\"primary\">\r\n                Xác nhận\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </GridContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\component\\SearchTextField\\SearchTextField.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\DetailUser\\EditUser.js",["1425","1426","1427","1428","1429","1430"],"import React, { useEffect, useState } from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport SearchApart from \"./SearchApart.js\"\r\nimport {handleData,handleApart} from \"./ServiceEditUser.js\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  alerts: {\r\n    marginTop: \"18px\",\r\n  },\r\n  myButton: {\r\n    float: \"right\",\r\n  },\r\n}));\r\nexport default function EditUserApart(props) {\r\n  const classes = useStyles();\r\n  const {id,handleOpenLoading,handleCloseLoading, handleReload}=props\r\n  // const [blockList, setBlockList] = useState([]);\r\n  const nameCheck = /^[a-zA-Z0-9]+$/;\r\n  const phoneCheck = /^[0-9]+$/;\r\n  const token = useSelector((state) => state.user.token);\r\n  const [openSnackBar, setOpenSnackBar] = useState(false);\r\n  const [snackType, setSnackType] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const[reload,setReload]=useState(false);\r\n\r\n    const [isLoad,setIsLoad]=useState(false);\r\n     //list:all apart List-- default:list apart of user\r\n    const[apartList,setApartList]=useState({list:[{name:\"Không có căn hộ\"}],default:[]});\r\n    const [apart_id, setApart_id] = useState();\r\n    const[block_id,setBlock_id]=useState(\"\")\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n  const changeData=async(apart)=>\r\n  {\r\n       let result=await handleApart(apart);\r\n       setApart_id(result.apart_id)\r\n       setBlock_id(result.block_id)\r\n  }\r\n  const editUserApart = async () => {\r\n    handleClose();\r\n    handleOpenLoading()\r\n      const body = {\r\n        user_id:id,\r\n        apartment_id:apart_id,\r\n        block_id:block_id\r\n      };\r\n      console.log(body);\r\n\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/user/update`,\r\n          {\r\n            method: \"PUT\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\"edit ok\");\r\n          console.log(result);\r\n          setReload(!reload)\r\n          handleReload()\r\n          handleOpenSnackBar(true);\r\n          handleCloseLoading()\r\n        } else {\r\n         console.log(\"SOMETHING WENT WRONG\");\r\n        \r\n         handleOpenSnackBar(false);\r\n         handleCloseLoading()\r\n          }\r\n      } catch (err) {\r\n        console.log(err); \r\n        handleOpenSnackBar(false);\r\n        handleCloseLoading()\r\n      }\r\n    \r\n  };\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n       setIsLoad(true); \r\n       const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts?status=1`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts?owner.id=${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200|| res1.status===200) {\r\n        \r\n        const result = await res.json();\r\n        const result1= await res1.json();\r\n        console.log(result.data);\r\n        console.log(result1.data);\r\n        //console.log(result.data.push(result1.data));\r\n        setApartList({list:await handleData(result.data,result1.data),default:result1.data});\r\n        await changeData(result1.data)\r\n\r\n        \r\n        handleCloseLoading()\r\n        setIsLoad(false);\r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n        setIsLoad(false);\r\n      }\r\n    }catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div>\r\n    \r\n      {!isLoad && (\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={12}>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n              <SearchApart data={apartList} changeData={changeData}></SearchApart>\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n              </GridItem>\r\n              <GridContainer />\r\n            </GridContainer>\r\n            <GridItem xs={12} sm={12} md={9}>\r\n              <Button\r\n                className={classes.myButton}\r\n                color=\"primary\"\r\n                onClick={e=>handleClickOpen()}\r\n              >\r\n                Lưu lại\r\n              </Button>\r\n            </GridItem>\r\n          </GridItem>\r\n         \r\n          \r\n\r\n          <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n                  Xác nhận chỉnh sửa\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n           \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => editUserApart(e)} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        </GridContainer>\r\n      )}\r\n      <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\DetailUser\\SearchApart.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\UserAccount\\DetailUser\\ServiceEditUser.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\ListNotification\\ListNotification.js",["1431","1432","1433"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleData } from \"./ServiceListNotification\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  \r\n}));\r\nexport default function UserAccount() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n  \r\n  const [reload,setReload]=useState();\r\n const [openSnackBar,setOpenSnackBar]=useState(false);\r\n const [snackType,setSnackType]=useState(true);\r\nconst [isHandle,setIsHandle]=useState(false);\r\nconst [open, setOpen] = useState(false);\r\n\r\nconst [id,setID]=useState(\"\");\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"date\",\r\n      label: \"Ngày tạo\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },{\r\n        name: \"title\",\r\n        label: \"Tiêu đề\",\r\n        options: {\r\n          filter: true,\r\n          sort: false,\r\n        },\r\n      },\r\n    {\r\n      name: \"\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n            <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              color=\"red\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0])}\r\n            >\r\n              <EditIcon color=\"primary\"/>\r\n            </Fab>\r\n          </Tooltip>\r\n         <Tooltip\r\n                id=\"tooltip-top-start\"\r\n                title=\"Xóa\"\r\n                placement=\"top\"\r\n                classes={{ tooltip: classes.tooltip }}\r\n              >\r\n                <Fab\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  aria-label=\"add\"\r\n                  className={classes.margin}\r\n                  onClick={() => {setID(tableMeta.rowData[0]); handleClickOpen()}}\r\n                >\r\n                  <Close />\r\n                </Fab>\r\n          </Tooltip>\r\n          </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleClick = (id) => {\r\n    history.push(`/admin/notification/detail/${id}`);\r\n  };\r\n  const handleDelete=async()=>{\r\n    console.log(id);\r\n    handleOpenLoading()\r\n    console.log(\"submit\");\r\n    handleClose();\r\n    try {\r\n  \r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK +\r\n          `/api/noti/delete/${id}`, \r\n        {\r\n          method: \"DELETE\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n         \r\n          }, \r\n         \r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"delete ok\");\r\n        setReload(!reload);\r\n        handleOpenSnackBar(true)\r\n        handleCloseLoading()\r\n      } else{ console.log(\"SOMETHING WENT WRONG\")\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()};\r\n    }catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n  }\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/noti/all/${1}/${200}`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        console.log(result.data);\r\n        setData(await handleData(result.data));\r\n        handleCloseLoading()\r\n        \r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false);\r\n      }\r\n    } catch (err) {\r\n      console.log(err); \r\n      handleCloseLoading()\r\n      handleOpenSnackBar(false);\r\n     \r\n    }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\"> Xác nhận xóa thông báo</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </LoadingOverlay>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\ListNotification\\ServiceListNotification.js",["1434"],"export const handleData = (data, apart) => {\r\n    //console.log(data);\r\n    const newdata = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n        let createdate = new Date(data[i].create_date);\r\n        newdata[i] = {\r\n          id: data[i]._id,\r\n          order: i + 1,\r\n          date:\r\n            createdate.getDate() +\r\n            \"/\" +\r\n            (createdate.getMonth() + 1) +\r\n            \"/\" +\r\n            createdate.getFullYear(),\r\n          title:data[i].title\r\n        };\r\n      }\r\n    return newdata;\r\n  };\r\n  const returnType =()=>\r\n  {\r\n\r\n  }","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\CreateNotification\\Floor\\FloorNotifications.js",["1435","1436"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport SearchApart from \"../SearchApart.js\";\r\n\r\nexport default function BlockNotification(props) {\r\n  const token = useSelector((state) => state.user.token);\r\n  const {setBlock, setFloor,setApart_id, handleOpenLoading,handleCloseLoading,handleOpenSnackBar}=props;\r\n  const [apartList,setApartList]=useState({list:[{name:\"Không có căn hộ\"}],default:[]});\r\n // console.log(\"block\");\r\n const changeData=(apart)=>\r\n {\r\n    console.log(apart);\r\n    if(apart!==null)\r\n\r\n  {  setBlock(apart.block)\r\n    setFloor(apart.floor)\r\n    setApart_id(apart._id)\r\n  }\r\n  else{  setBlock(\"\")\r\n    setFloor(\"\")\r\n    setApart_id(\"\")\r\n  }\r\n }\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        console.log(result.data);\r\n        setApartList({list:result.data,default:[]})\r\n       handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n       handleCloseLoading()\r\n      }}catch (err) {\r\n        console.log(err);\r\n       handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n        <br></br>\r\n           <SearchApart data={apartList} changeData={changeData} lable={\"Căn hộ sửa chữa(chỉ chọn 1)\"}></SearchApart>\r\n    </>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\CreateNotification\\SearchApart.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\Repair\\RequestSelfRepair\\ServiceDetailRequestSelfRepair.js",[],"D:\\DATN\\qlcc_2_admin\\src\\view\\AdminAccount\\ListAdminAccount.js",["1437","1438","1439","1440"],"import Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Close from \"@material-ui/icons/Close\";\r\n//import EditIcon from '@material-ui/icons/Edit';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport Snackbar from \"../../component/SnackBar/Snackbar.js\";\r\nimport { handleData } from \"./ServiceAdminAccount\";\r\nimport Button from \"../../component/CustomButtons/Button.js\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  \r\n}));\r\nexport default function AdminAccount() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n  const [isHandle,setIsHandle]=useState(false);\r\n  const [reload,setReload]=useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [id,setID]=useState();\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: false,\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"name\",\r\n      label: \"Tên người dùng\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },{\r\n        name: \"email\",\r\n        label: \"Email\",\r\n        options: {\r\n          filter: true,\r\n          sort: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"phone\",\r\n        label: \"Phone\",\r\n        options: {\r\n          filter: true,\r\n          sort: false,\r\n        },\r\n      },\r\n    {\r\n      name: \"\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n            {/* <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              color=\"red\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0])}\r\n            >\r\n              <EditIcon color=\"primary\"/>\r\n            </Fab>\r\n          </Tooltip> */}\r\n         <Tooltip\r\n                id=\"tooltip-top-start\"\r\n                title=\"Xóa\"\r\n                placement=\"top\"\r\n                classes={{ tooltip: classes.tooltip }}\r\n              >\r\n                <Fab\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  aria-label=\"add\"\r\n                  className={classes.margin}\r\n                  onClick={() => {setID(tableMeta.rowData[0]); handleClickOpen()}}\r\n                >\r\n                  <Close />\r\n                </Fab>\r\n          </Tooltip>\r\n          </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  // const handleClick = (id) => {\r\n  //   // e.preventDefault();\r\n  //   console.log(id);\r\n  //   history.push(`/admin/admin_account/${id}`);\r\n  // };\r\n  const handleDelete=async()=>{\r\n    console.log(id);\r\n    handleOpenLoading()\r\n    console.log(\"submit\");\r\n    handleClose();\r\n    try {\r\n  \r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK +\r\n          `/api/auth/delete/${id}`, \r\n        {\r\n          method: \"DELETE\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n         \r\n          }, \r\n         \r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"delete ok\");\r\n        setReload(!reload);\r\n        handleOpenSnackBar(true)\r\n        handleCloseLoading()\r\n      } else{ console.log(\"SOMETHING WENT WRONG\")\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()};\r\n    }catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n  }\r\n  \r\n  const handleClickOpen = () => {\r\n     setOpen(true);\r\n   };\r\n   const handleClose = () => {\r\n     setOpen(false);\r\n   };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/auth/all`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        console.log(result.data)\r\n        setData(await handleData(result.data));\r\n       \r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }}catch(err){\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n  return (\r\n    <div><LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}/>\r\n        \r\n </LoadingOverlay>\r\n <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n                  Xác nhận xóa\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n           \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => handleDelete(e)} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\AdminAccount\\AddAdminAccount.js",["1441","1442","1443"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../component/Grid/GridContainer.js\";\r\nimport Button from \"../../component/CustomButtons/Button.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Snackbar from \"../../component/SnackBar/Snackbar.js\"\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  alerts: {\r\n    marginTop: \"18px\",\r\n  },\r\n  myButton:{\r\n    float: \"right\"\r\n }\r\n\r\n}));\r\nexport default function AddAdmin() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n  const [isHandle,setIsHandle]=useState(false);\r\n  //   const [content, setContent] = useState(\"\");\r\n  //   const userInfo = useSelector((state) => state.user.info);\r\n  const nameCheck = /^[a-zA-Z0-9]+$/;\r\n  const phoneCheck = /^[0-9]+$/;\r\n  const emailCheck = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  const token = useSelector((state) => state.user.token);\r\n  const [alertName, setAlertName] = useState(false);\r\n  const [alertPhone, setAlertPhone] = useState(false);\r\n  const [alertEmail, setAlertEmail] = useState(false);\r\n  const [alertUsername, setAlertUsername] = useState(false);\r\n  const [alertPassword, setAlertPassword] = useState(false);\r\n  const [alertConfirm, setAlertConfirm] = useState(false);\r\n\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n \r\n\r\n  \r\n  const checkName = (name) => {\r\n    if (name !== \"\") {\r\n      setAlertName(false);\r\n      setName(name);\r\n      return true;\r\n    } else {\r\n      setAlertName(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkPhone = (phone) => {\r\n    if (phone !== \"\" && phone.match(phoneCheck)) {\r\n      setAlertPhone(false);\r\n      setPhone(phone);\r\n      return true;\r\n    } else {\r\n      setAlertPhone(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkEmail = (email) => {\r\n    setEmail(email);\r\n    if (email !== \"\" && email.match(emailCheck)) {\r\n      setAlertEmail(false);\r\n      return true;\r\n    } else {\r\n      setAlertEmail(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkUsername = (value) => { \r\n    setUsername(value);\r\n    if (value !== \"\" && value.match(nameCheck)) {\r\n      setAlertUsername(false);\r\n      return true;\r\n    } else {\r\n      setAlertUsername(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkPassword = (value) => { \r\n     setPassword(value);\r\n     checkconfirm(confirm,value)\r\n    if (value !== \"\") {\r\n      setAlertPassword(false);\r\n      return true;\r\n    } else {\r\n      setAlertPassword(true);\r\n      return false;\r\n    }\r\n  };\r\n  const checkconfirm = (value,password) => {\r\n    setConfirm(value);\r\n    if (value !== \"\" && value===password) {\r\n      setAlertConfirm(false);\r\n      return true;\r\n    } else {\r\n      setAlertConfirm(true);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    handleClose()\r\n    handleOpenLoading()\r\n    if (\r\n      checkName(name) &&\r\n      checkPhone(phone) &&\r\n      checkEmail(email) &&\r\n      checkUsername(username) &&\r\n      checkPassword(password)&&\r\n      checkconfirm(confirm,password)\r\n    ) {\r\n      const body = {\r\n        name: name,\r\n        phone: phone,\r\n        email: email,\r\n        username: username,\r\n        password: password,\r\n        role:1\r\n      };\r\n      console.log(body);\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/auth/add`,\r\n          {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\"success\");\r\n          console.log(result);\r\n          handleCloseLoading()\r\n        handleOpenSnackBar(true);\r\n        }  else {\r\n          console.log(\"SOMETHING WENT WRONG\")\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false);};\r\n      } catch (err) {\r\n        console.log(err);\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false);\r\n      }\r\n    } else {\r\n      handleCloseLoading()\r\n      handleOpenSnackBar(false);\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={12}>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"name\"\r\n                  label=\"Họ và tên\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => checkName(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertName && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Tên không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridContainer />\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  //defaultValue={email}\r\n                  onChange={(e) => checkEmail(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertEmail && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Email không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"phone\"\r\n                  label=\"Số điên thoại\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => checkPhone(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertPhone && (\r\n                  <Alert severity=\"error\" className={classes.alerts}>\r\n                    Số điện thoại không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"username\"\r\n                  label=\"Tên đăng nhập\"\r\n                  //style={{ margin: 8 }}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  //defaultValue={cmnd}\r\n                  onChange={(e) => checkUsername(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertUsername && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Tên không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"pass\"\r\n                  label=\"Mật khẩu\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  onChange={(e) => checkPassword(e.target.value)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertPassword && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                    Không hợp lệ\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={9}>\r\n                <TextField\r\n                  id=\"confirm\"\r\n                  label=\"Nhập lại mật khẩu\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  onChange={(e) => checkconfirm(e.target.value,password)}\r\n                />\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                {alertConfirm && (\r\n                  <Alert className={classes.alerts} severity=\"error\">\r\n                   Không trùng khớp mật khẩu\r\n                  </Alert>\r\n                )}\r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={6}>\r\n             \r\n            \r\n              </GridItem>\r\n              <GridItem xs={12} sm={12} md={3}>\r\n                <Button className={classes.myButton} color=\"primary\" onClick={(e) => handleClickOpen()}>\r\n                  Lưu lại\r\n                </Button>\r\n              </GridItem>\r\n            </GridContainer>\r\n          </GridItem>\r\n        </GridContainer>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n                  Xác nhận tạo tài khoản\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n           \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => handleSubmit()} color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </LoadingOverlay>\r\n     \r\n\t\t\r\n  <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\pushNotiAdmin.js",["1444","1445"],"D:\\DATN\\qlcc_2_admin\\src\\view\\PushNotiAdmin.js",["1446"],"\r\nimport {messaging} from \"../firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function PushNotiAdmin() {\r\n    const token = useSelector((state) => state.user.token);\r\n  const PushNotificationAdmin = async () => {\r\n    try {\r\n      let body;\r\n      await messaging.requestPermission().then(() => {\r\n          return messaging.getToken();\r\n        })\r\n        .then((token_device) => {\r\n          console.log(token_device);\r\n        body = {\r\n        tokens: [token_device],\r\n        title: \"Khiếu nại đã được xử lý\",\r\n        content:\r\n          \"BQL chung cư thông báo, khiếu nại của anh/chị đã được giải quyết. Đề nghị kiểm tra lại.\",\r\n        type: 1,\r\n      };\r\n        });\r\n\r\n      console.log(body);\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/push-noti/add-notice`,\r\n        {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      if (res.status === 200) {   \r\n        console.log(\"tu push noti ok\");\r\n      } else {\r\n        console.log(\"SOMETHING WENT WRONG\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return {PushNotificationAdmin}\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\CreateNotification\\Apart\\ApartNotifications.js",["1447","1448"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport SearchApart from \"../SearchApart.js\";\r\n\r\nexport default function BlockNotification(props) {\r\n  const token = useSelector((state) => state.user.token);\r\n  const {setApart_id, handleOpenLoading,handleCloseLoading,handleOpenSnackBar}=props;\r\n  const [apartList,setApartList]=useState({list:[{name:\"Không có căn hộ\"}],default:[]});\r\n // console.log(\"block\");\r\n const changeData=(apart)=>\r\n {\r\n    console.log(apart);\r\n    if(apart!==null)\r\n    setApart_id(apart._id)\r\n    else \r\n    setApart_id(\"\")\r\n }\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n    const getRes = async () => {\r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts?status=2&owner.is_active=true`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        console.log(result.data);\r\n        setApartList({list:result.data,default:[]})\r\n       handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        console.log(result.message);\r\n        handleOpenSnackBar(false)\r\n       handleCloseLoading()\r\n      }}catch (err) {\r\n        console.log(err);\r\n       handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n    };\r\n    getRes();\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n        <br></br>\r\n           <SearchApart data={apartList} changeData={changeData} lable={\"Căn hộ thông báo\"}></SearchApart>\r\n    </>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\Apart\\ListApart\\ListApartNotApp.js",["1449","1450","1451","1452"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleData } from \"./ServiceListApart.js\";\r\nimport CustomButton from \"../../../component/CustomButtons/Button.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport styles from \"../../../asset/jss/material-dashboard-react/components/tasksStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\"\r\nconst useStyles = makeStyles(styles);\r\nexport default function ListApart() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const [data, setData] = useState([]);\r\n  const [isHandle,setIsHandle]=useState(false);\r\n  const [openSnackBar,setOpenSnackBar]=useState(false);\r\n  const [snackType,setSnackType]=useState(true);\r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"id\",\r\n      label: \"id\",\r\n      options: {\r\n        display: false,\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"order\",\r\n      label: \"Số thứ tự\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"name\",\r\n      label: \"Tên phòng\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"block\",\r\n      label: \"Toà nhà\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"status\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"status_name\",\r\n      label: \"Tình trạng\",\r\n      options: {\r\n        display: \"excluded\",\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"\",\r\n      options: { filter: false,\r\n        sort: false,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <div>\r\n            <Tooltip\r\n            id=\"tooltip-top\"\r\n            title=\"Chi tiết\"\r\n            placement=\"top\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n          >\r\n            <Fab\r\n              size=\"small\"\r\n              // color=\"primary\"\r\n              aria-label=\"add\"\r\n              className={classes.margin}\r\n              onClick={() => handleClick(tableMeta.rowData[0])}\r\n            >\r\n              <EditIcon color=\"primary\"/>\r\n            </Fab>\r\n          </Tooltip>\r\n          </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  const handleClick = (id) => {\r\n\r\n    history.push(`/admin/apart/detail/${id}`);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n  const handleOpenLoading=()=>{\r\n    setIsHandle(true);\r\n  }\r\n  const handleCloseLoading=()=>{\r\n    setIsHandle(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleOpenLoading()\r\n   \r\n    const getRes = async () => { \r\n      try{\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/apart/all-aparts?status=2&owner.is_active=false`,\r\n        {\r\n          // get apart\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const res1 = await fetch(\r\n        process.env.REACT_APP_API_LINK + `/api/block/all`,\r\n        {\r\n          // get block\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200 || res1.status === 200) {\r\n        console.log(\"Vo 200OK\");\r\n        const result = await res.json();\r\n        const result1 = await res1.json();\r\n        console.log(result.data);\r\n        setData(await handleData(result.data, result1.data));\r\n        handleCloseLoading()\r\n      } else {\r\n        const result = await res.json();\r\n        alert(result.message);\r\n        handleCloseLoading()\r\n        handleOpenSnackBar(false)\r\n      }}\r\n      catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false)\r\n        handleCloseLoading()\r\n      }\r\n  }\r\n    getRes();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <LoadingOverlay active={isHandle} spinner text=\"Đang xử lý vui lòng chờ...\">\r\n      <MUIDataTable\r\n        title={\"\"}\r\n        data={data}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n      \r\n      </LoadingOverlay>\r\n      <Snackbar open={openSnackBar} type={snackType} handleClose={handleCloseSnackBar}></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\DetailNotification\\DetailNotification.js",["1453","1454","1455","1456","1457"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"../../../component/Grid/GridItem.js\";\r\nimport GridContainer from \"../../../component/Grid/GridContainer.js\";\r\nimport CardHeader from \"../../../component/Card/CardHeader.js\";\r\nimport Button from \"../../../component/CustomButtons/Button.js\";\r\nimport Card from \"../../../component/Card/Card.js\";\r\nimport CardAvatar from \"../../../component/Card/CardAvatar.js\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { handleData } from \"./ServiceDetailNotification\";\r\nimport Snackbar from \"../../../component/SnackBar/Snackbar.js\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  myButton: {\r\n    float: \"right\",\r\n    width: \"150px\",\r\n  },\r\n}));\r\nexport default function DetailPublicArea(props) {\r\n  //const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.user.token);\r\n  const { id } = useParams();\r\n  const [openSnackBar, setOpenSnackBar] = useState(false);\r\n  const [snackType, setSnackType] = useState(true);\r\n  const [isHandle, setIsHandle] = useState(false);\r\n  const [image, setImage] = useState(\"\");\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n  const [data,setData]=useState();\r\n  //   const token = useSelector((state) => state.user.token);\r\n  const handleClickOpen = () => {\r\n   \r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenSnackBar = (type) => {\r\n    if (type) setSnackType(true);\r\n    else setSnackType(false);\r\n    setOpenSnackBar(true);\r\n  };\r\n  const handleCloseSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnackBar(false);\r\n  };\r\n  const handleOpenLoading = () => {\r\n    setIsHandle(true);\r\n  };\r\n  const handleCloseLoading = () => {\r\n    setIsHandle(false);\r\n  };\r\n  const handleDelete=async()=>{\r\n    handleClose()\r\n    handleOpenLoading()\r\n    console.log(\"submit\");\r\n    handleClose();\r\n    try {\r\n  \r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_LINK +\r\n          `/api/noti/delete/${id}`, \r\n        {\r\n          method: \"DELETE\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + `${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n         \r\n          }, \r\n         \r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        console.log(\"delete ok\");\r\n        setReload(!reload);\r\n        handleOpenSnackBar(true)\r\n        handleCloseLoading()\r\n        \r\n        history.push('/admin/notification')\r\n      } else{ console.log(\"SOMETHING WENT WRONG\")\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()};\r\n    }catch (err) {\r\n      console.log(err);\r\n      handleOpenSnackBar(false)\r\n      handleCloseLoading()\r\n    }\r\n  }\r\n\r\n  const getUrl = async (key) => {\r\n    if (key.length >= 1) {\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK + `/api/uploadv2/image-url?key=${key}`,\r\n          {\r\n            // get apart\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\"get image OK\");\r\n          return result.imageUrl;\r\n          // setImage(result.imageUrl);\r\n          // setIsLoad(false);\r\n        } else {\r\n          const result = await res.json();\r\n          console.log(result.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    setIsLoad(false);\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    setIsLoad(true);\r\n    const getRes = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          process.env.REACT_APP_API_LINK +\r\n            `/api/noti/${id}`,\r\n          {\r\n            // get apart\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: \"Bearer \" + `${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (res.status === 200) {\r\n          const result = await res.json();\r\n          console.log(\" useEffect OK\");\r\n          console.log(result.data);\r\n          // await getUserAndApart(result.data);\r\n          setData(await handleData(result.data))\r\n          if (result.data.image !== \"\")setImage(await getUrl(result.data.image));\r\n          else setImage(\"\")\r\n          setIsLoad(false);\r\n        } else {\r\n          const result = await res.json();\r\n          console.log(result.message);\r\n          handleOpenSnackBar(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        handleOpenSnackBar(false);\r\n      }\r\n    };\r\n    getRes();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div>\r\n      <LoadingOverlay\r\n        active={isHandle}\r\n        spinner\r\n        text=\"Đang xử lý vui lòng chờ...\"\r\n      >\r\n        {!isLoad ? (\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={12} md={5}>\r\n              <Card profile>\r\n                <CardAvatar>\r\n                  <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                    {image!==\"\"? <img\r\n                      src={image}\r\n                      alt=\"Không có ảnh\"\r\n                      width=\"400\"\r\n                      height=\"400\"\r\n                    ></img> : <img  width=\"400\" height=\"400\"  src={process.env.PUBLIC_URL + '/noImage.jpg'}></img>}\r\n                  </a>\r\n                </CardAvatar>\r\n              </Card>\r\n             \r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={7}>\r\n              <CardHeader color=\"primary\">\r\n                <h4 className={classes.cardTitleWhite}>\r\n                  Chi tiết thông báo\r\n                </h4>\r\n              </CardHeader>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                <TextField\r\n                    id=\"title\"\r\n                    label=\"Tiêu đề\"\r\n                    //style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    defaultValue={data.title}\r\n                    //onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    id=\"content\"\r\n                    label=\"Nội dung\"\r\n                    //style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    multiline={true}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    defaultValue={data.content}\r\n                    //onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    id=\"time\"\r\n                    label=\"Thời gian\"\r\n                    //style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    defaultValue={data.time}\r\n                    //onChange={(e) => setName(e.target.value)}\r\n                  />\r\n\r\n                \r\n                  <TextField\r\n                    id=\"link\"\r\n                    label=\"Link\"\r\n                    //style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    defaultValue={data.link}\r\n                    //onChange={(e) => setName(e.target.value)}\r\n                  ></TextField>\r\n                </GridItem>\r\n              </GridContainer>\r\n              <GridItem xs={12} sm={12} md={12} />\r\n              <Button className={classes.myButton} onClick={e=>handleClickOpen()} color=\"primary\"> Xóa</Button>\r\n            </GridItem>\r\n            <div />\r\n            <GridItem xs={12} sm={12} md={3} />\r\n           \r\n          </GridContainer>\r\n        ) : (\r\n          <div>Đang xử lý, vui lòng chờ...</div>\r\n        )}\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n                Xác nhận xóa thông báo\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n           \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Hủy\r\n          </Button>\r\n          <Button onClick={(e) => handleDelete() } color=\"primary\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </LoadingOverlay>\r\n      <Snackbar\r\n        open={openSnackBar}\r\n        type={snackType}\r\n        handleClose={handleCloseSnackBar}\r\n      ></Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\DATN\\qlcc_2_admin\\src\\view\\SendNotifications\\DetailNotification\\ServiceDetailNotification.js",[],"D:\\DATN\\qlcc_2_admin\\src\\privateRouter.js",["1458"],"import  React, { Component } from  \"react\";\r\nimport { Route, Redirect } from  \"react-router-dom\";\r\n\r\nexport const  PrivateRoute= ({component:Component, ...rest})=>\r\n(// console.log( JSON.parse(localStorage.getItem(\"state\")).user);\r\n    <Route\r\n    { ...rest }\r\n        render={props=>\r\n            JSON.parse(localStorage.getItem(\"state\")).user.token?(\r\n            <Component {...props}/>\r\n        ):(\r\n        <Redirect to={{\r\n            pathname:\"/\",\r\n            state:{from:props.location}\r\n        }}\r\n        />\r\n        )\r\n        }/>\r\n        \r\n   \r\n);\r\n",{"ruleId":"1459","replacedBy":"1460"},{"ruleId":"1461","replacedBy":"1462"},{"ruleId":"1463","severity":1,"message":"1464","line":15,"column":12,"nodeType":"1465","messageId":"1466","endLine":15,"endColumn":27},{"ruleId":"1459","replacedBy":"1467"},{"ruleId":"1461","replacedBy":"1468"},{"ruleId":"1469","severity":1,"message":"1470","line":74,"column":6,"nodeType":"1471","endLine":74,"endColumn":8,"suggestions":"1472"},{"ruleId":"1463","severity":1,"message":"1473","line":23,"column":10,"nodeType":"1465","messageId":"1466","endLine":23,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":15,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":24},{"ruleId":"1463","severity":1,"message":"1475","line":5,"column":10,"nodeType":"1465","messageId":"1466","endLine":5,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1476","line":14,"column":8,"nodeType":"1465","messageId":"1466","endLine":14,"endColumn":13},{"ruleId":"1463","severity":1,"message":"1477","line":43,"column":9,"nodeType":"1465","messageId":"1466","endLine":43,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1478","line":45,"column":9,"nodeType":"1465","messageId":"1466","endLine":45,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1479","line":47,"column":9,"nodeType":"1465","messageId":"1466","endLine":47,"endColumn":21},{"ruleId":"1480","severity":1,"message":"1481","line":37,"column":33,"nodeType":"1482","messageId":"1483","endLine":37,"endColumn":34},{"ruleId":"1469","severity":1,"message":"1484","line":56,"column":7,"nodeType":"1471","endLine":56,"endColumn":12,"suggestions":"1485"},{"ruleId":"1486","severity":1,"message":"1487","line":21,"column":19,"nodeType":"1482","messageId":"1488","endLine":21,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":17,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":26},{"ruleId":"1463","severity":1,"message":"1489","line":14,"column":10,"nodeType":"1465","messageId":"1466","endLine":14,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1490","line":14,"column":18,"nodeType":"1465","messageId":"1466","endLine":14,"endColumn":28},{"ruleId":"1463","severity":1,"message":"1491","line":46,"column":9,"nodeType":"1465","messageId":"1466","endLine":46,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1477","line":47,"column":9,"nodeType":"1465","messageId":"1466","endLine":47,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1492","line":48,"column":10,"nodeType":"1465","messageId":"1466","endLine":48,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1493","line":49,"column":10,"nodeType":"1465","messageId":"1466","endLine":49,"endColumn":17},{"ruleId":"1480","severity":1,"message":"1481","line":77,"column":40,"nodeType":"1482","messageId":"1483","endLine":77,"endColumn":41},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":15,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":24},{"ruleId":"1463","severity":1,"message":"1494","line":11,"column":8,"nodeType":"1465","messageId":"1466","endLine":11,"endColumn":12},{"ruleId":"1463","severity":1,"message":"1495","line":12,"column":8,"nodeType":"1465","messageId":"1466","endLine":12,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1496","line":13,"column":8,"nodeType":"1465","messageId":"1466","endLine":13,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1497","line":14,"column":8,"nodeType":"1465","messageId":"1466","endLine":14,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1498","line":16,"column":8,"nodeType":"1465","messageId":"1466","endLine":16,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1477","line":40,"column":9,"nodeType":"1465","messageId":"1466","endLine":40,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1478","line":42,"column":9,"nodeType":"1465","messageId":"1466","endLine":42,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1499","line":8,"column":8,"nodeType":"1465","messageId":"1466","endLine":8,"endColumn":21},{"ruleId":"1459","replacedBy":"1500"},{"ruleId":"1461","replacedBy":"1501"},{"ruleId":"1463","severity":1,"message":"1502","line":5,"column":9,"nodeType":"1465","messageId":"1466","endLine":5,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1503","line":14,"column":11,"nodeType":"1465","messageId":"1466","endLine":14,"endColumn":25},{"ruleId":"1463","severity":1,"message":"1504","line":3,"column":8,"nodeType":"1465","messageId":"1466","endLine":3,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1505","line":12,"column":8,"nodeType":"1465","messageId":"1466","endLine":12,"endColumn":24},{"ruleId":"1480","severity":1,"message":"1481","line":105,"column":38,"nodeType":"1482","messageId":"1483","endLine":105,"endColumn":39},{"ruleId":"1506","severity":1,"message":"1507","line":173,"column":11,"nodeType":"1508","endLine":173,"endColumn":83},{"ruleId":"1469","severity":1,"message":"1470","line":77,"column":6,"nodeType":"1471","endLine":77,"endColumn":8,"suggestions":"1509"},{"ruleId":"1480","severity":1,"message":"1481","line":37,"column":33,"nodeType":"1482","messageId":"1483","endLine":37,"endColumn":34},{"ruleId":"1469","severity":1,"message":"1484","line":56,"column":7,"nodeType":"1471","endLine":56,"endColumn":12,"suggestions":"1510"},{"ruleId":"1459","replacedBy":"1511"},{"ruleId":"1461","replacedBy":"1512"},{"ruleId":"1463","severity":1,"message":"1513","line":10,"column":8,"nodeType":"1465","messageId":"1466","endLine":10,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1494","line":11,"column":8,"nodeType":"1465","messageId":"1466","endLine":11,"endColumn":12},{"ruleId":"1463","severity":1,"message":"1514","line":12,"column":8,"nodeType":"1465","messageId":"1466","endLine":12,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1496","line":13,"column":8,"nodeType":"1465","messageId":"1466","endLine":13,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1498","line":18,"column":8,"nodeType":"1465","messageId":"1466","endLine":18,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1477","line":42,"column":9,"nodeType":"1465","messageId":"1466","endLine":42,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1515","line":43,"column":9,"nodeType":"1465","messageId":"1466","endLine":43,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1478","line":44,"column":9,"nodeType":"1465","messageId":"1466","endLine":44,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1479","line":46,"column":9,"nodeType":"1465","messageId":"1466","endLine":46,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1516","line":19,"column":8,"nodeType":"1465","messageId":"1466","endLine":19,"endColumn":19},{"ruleId":"1480","severity":1,"message":"1481","line":93,"column":40,"nodeType":"1482","messageId":"1483","endLine":93,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":104,"column":40,"nodeType":"1482","messageId":"1483","endLine":104,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":115,"column":40,"nodeType":"1482","messageId":"1483","endLine":115,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":126,"column":40,"nodeType":"1482","messageId":"1483","endLine":126,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":137,"column":40,"nodeType":"1482","messageId":"1483","endLine":137,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":147,"column":40,"nodeType":"1482","messageId":"1483","endLine":147,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":158,"column":40,"nodeType":"1482","messageId":"1483","endLine":158,"endColumn":41},{"ruleId":"1469","severity":1,"message":"1484","line":187,"column":6,"nodeType":"1471","endLine":187,"endColumn":14,"suggestions":"1517"},{"ruleId":"1459","replacedBy":"1518"},{"ruleId":"1461","replacedBy":"1519"},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":17,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":26},{"ruleId":"1463","severity":1,"message":"1520","line":16,"column":10,"nodeType":"1465","messageId":"1466","endLine":16,"endColumn":19},{"ruleId":"1463","severity":1,"message":"1489","line":18,"column":10,"nodeType":"1465","messageId":"1466","endLine":18,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1490","line":18,"column":18,"nodeType":"1465","messageId":"1466","endLine":18,"endColumn":28},{"ruleId":"1463","severity":1,"message":"1493","line":57,"column":10,"nodeType":"1465","messageId":"1466","endLine":57,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1521","line":57,"column":19,"nodeType":"1465","messageId":"1466","endLine":57,"endColumn":29},{"ruleId":"1463","severity":1,"message":"1522","line":58,"column":9,"nodeType":"1465","messageId":"1466","endLine":58,"endColumn":18},{"ruleId":"1480","severity":1,"message":"1481","line":147,"column":40,"nodeType":"1482","messageId":"1483","endLine":147,"endColumn":41},{"ruleId":"1459","replacedBy":"1523"},{"ruleId":"1461","replacedBy":"1524"},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":15,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":24},{"ruleId":"1480","severity":1,"message":"1481","line":129,"column":38,"nodeType":"1482","messageId":"1483","endLine":129,"endColumn":39},{"ruleId":"1459","replacedBy":"1525"},{"ruleId":"1461","replacedBy":"1526"},{"ruleId":"1459","replacedBy":"1527"},{"ruleId":"1461","replacedBy":"1528"},{"ruleId":"1463","severity":1,"message":"1513","line":8,"column":8,"nodeType":"1465","messageId":"1466","endLine":8,"endColumn":14},{"ruleId":"1459","replacedBy":"1529"},{"ruleId":"1461","replacedBy":"1530"},{"ruleId":"1480","severity":1,"message":"1481","line":146,"column":38,"nodeType":"1482","messageId":"1483","endLine":146,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":200,"column":38,"nodeType":"1482","messageId":"1483","endLine":200,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":225,"column":6,"nodeType":"1471","endLine":225,"endColumn":14,"suggestions":"1531"},{"ruleId":"1463","severity":1,"message":"1475","line":2,"column":10,"nodeType":"1465","messageId":"1466","endLine":2,"endColumn":21},{"ruleId":"1480","severity":1,"message":"1481","line":216,"column":40,"nodeType":"1482","messageId":"1483","endLine":216,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":262,"column":38,"nodeType":"1482","messageId":"1483","endLine":262,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":289,"column":6,"nodeType":"1471","endLine":289,"endColumn":14,"suggestions":"1532"},{"ruleId":"1463","severity":1,"message":"1533","line":3,"column":32,"nodeType":"1465","messageId":"1466","endLine":3,"endColumn":41},{"ruleId":"1463","severity":1,"message":"1513","line":5,"column":8,"nodeType":"1465","messageId":"1466","endLine":5,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1477","line":20,"column":9,"nodeType":"1465","messageId":"1466","endLine":20,"endColumn":16},{"ruleId":"1480","severity":1,"message":"1481","line":167,"column":38,"nodeType":"1482","messageId":"1483","endLine":167,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":178,"column":38,"nodeType":"1482","messageId":"1483","endLine":178,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1534","line":203,"column":6,"nodeType":"1471","endLine":203,"endColumn":14,"suggestions":"1535"},{"ruleId":"1463","severity":1,"message":"1498","line":16,"column":8,"nodeType":"1465","messageId":"1466","endLine":16,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1477","line":43,"column":9,"nodeType":"1465","messageId":"1466","endLine":43,"endColumn":16},{"ruleId":"1480","severity":1,"message":"1481","line":83,"column":38,"nodeType":"1482","messageId":"1483","endLine":83,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":117,"column":38,"nodeType":"1482","messageId":"1483","endLine":117,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":128,"column":38,"nodeType":"1482","messageId":"1483","endLine":128,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1536","line":161,"column":6,"nodeType":"1471","endLine":161,"endColumn":14,"suggestions":"1537"},{"ruleId":"1506","severity":1,"message":"1507","line":170,"column":61,"nodeType":"1508","endLine":170,"endColumn":113},{"ruleId":"1463","severity":1,"message":"1538","line":5,"column":8,"nodeType":"1465","messageId":"1466","endLine":5,"endColumn":13},{"ruleId":"1463","severity":1,"message":"1477","line":19,"column":9,"nodeType":"1465","messageId":"1466","endLine":19,"endColumn":16},{"ruleId":"1480","severity":1,"message":"1481","line":167,"column":38,"nodeType":"1482","messageId":"1483","endLine":167,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":178,"column":38,"nodeType":"1482","messageId":"1483","endLine":178,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1534","line":203,"column":6,"nodeType":"1471","endLine":203,"endColumn":14,"suggestions":"1539"},{"ruleId":"1463","severity":1,"message":"1533","line":3,"column":32,"nodeType":"1465","messageId":"1466","endLine":3,"endColumn":41},{"ruleId":"1463","severity":1,"message":"1477","line":19,"column":9,"nodeType":"1465","messageId":"1466","endLine":19,"endColumn":16},{"ruleId":"1480","severity":1,"message":"1481","line":179,"column":38,"nodeType":"1482","messageId":"1483","endLine":179,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":190,"column":38,"nodeType":"1482","messageId":"1483","endLine":190,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1534","line":219,"column":6,"nodeType":"1471","endLine":219,"endColumn":14,"suggestions":"1540"},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":17,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":26},{"ruleId":"1463","severity":1,"message":"1541","line":23,"column":3,"nodeType":"1465","messageId":"1466","endLine":23,"endColumn":7},{"ruleId":"1463","severity":1,"message":"1542","line":62,"column":9,"nodeType":"1465","messageId":"1466","endLine":62,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1543","line":64,"column":9,"nodeType":"1465","messageId":"1466","endLine":64,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1544","line":67,"column":22,"nodeType":"1465","messageId":"1466","endLine":67,"endColumn":35},{"ruleId":"1480","severity":1,"message":"1481","line":140,"column":38,"nodeType":"1482","messageId":"1483","endLine":140,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":172,"column":38,"nodeType":"1482","messageId":"1483","endLine":172,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":250,"column":38,"nodeType":"1482","messageId":"1483","endLine":250,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":312,"column":36,"nodeType":"1482","messageId":"1483","endLine":312,"endColumn":37},{"ruleId":"1480","severity":1,"message":"1481","line":242,"column":38,"nodeType":"1482","messageId":"1483","endLine":242,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":300,"column":38,"nodeType":"1482","messageId":"1483","endLine":300,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":311,"column":38,"nodeType":"1482","messageId":"1483","endLine":311,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1534","line":338,"column":6,"nodeType":"1471","endLine":338,"endColumn":22,"suggestions":"1545"},{"ruleId":"1480","severity":1,"message":"1481","line":154,"column":38,"nodeType":"1482","messageId":"1483","endLine":154,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":179,"column":6,"nodeType":"1471","endLine":179,"endColumn":8,"suggestions":"1546"},{"ruleId":"1459","replacedBy":"1547"},{"ruleId":"1461","replacedBy":"1548"},{"ruleId":"1480","severity":1,"message":"1481","line":175,"column":38,"nodeType":"1482","messageId":"1483","endLine":175,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1534","line":200,"column":6,"nodeType":"1471","endLine":200,"endColumn":14,"suggestions":"1549"},{"ruleId":"1463","severity":1,"message":"1543","line":55,"column":9,"nodeType":"1465","messageId":"1466","endLine":55,"endColumn":16},{"ruleId":"1480","severity":1,"message":"1481","line":103,"column":38,"nodeType":"1482","messageId":"1483","endLine":103,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":147,"column":38,"nodeType":"1482","messageId":"1483","endLine":147,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":200,"column":38,"nodeType":"1482","messageId":"1483","endLine":200,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":230,"column":38,"nodeType":"1482","messageId":"1483","endLine":230,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":291,"column":40,"nodeType":"1482","messageId":"1483","endLine":291,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":322,"column":38,"nodeType":"1482","messageId":"1483","endLine":322,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":352,"column":38,"nodeType":"1482","messageId":"1483","endLine":352,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1550","line":376,"column":6,"nodeType":"1471","endLine":376,"endColumn":14,"suggestions":"1551"},{"ruleId":"1480","severity":1,"message":"1481","line":107,"column":38,"nodeType":"1482","messageId":"1483","endLine":107,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":160,"column":38,"nodeType":"1482","messageId":"1483","endLine":160,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":199,"column":40,"nodeType":"1482","messageId":"1483","endLine":199,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":262,"column":38,"nodeType":"1482","messageId":"1483","endLine":262,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":293,"column":38,"nodeType":"1482","messageId":"1483","endLine":293,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1552","line":320,"column":6,"nodeType":"1471","endLine":320,"endColumn":14,"suggestions":"1553"},{"ruleId":"1463","severity":1,"message":"1554","line":4,"column":8,"nodeType":"1465","messageId":"1466","endLine":4,"endColumn":20},{"ruleId":"1480","severity":1,"message":"1481","line":142,"column":38,"nodeType":"1482","messageId":"1483","endLine":142,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":153,"column":38,"nodeType":"1482","messageId":"1483","endLine":153,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":178,"column":6,"nodeType":"1471","endLine":178,"endColumn":8,"suggestions":"1555"},{"ruleId":"1463","severity":1,"message":"1513","line":10,"column":8,"nodeType":"1465","messageId":"1466","endLine":10,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1477","line":38,"column":9,"nodeType":"1465","messageId":"1466","endLine":38,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1515","line":39,"column":9,"nodeType":"1465","messageId":"1466","endLine":39,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1478","line":40,"column":9,"nodeType":"1465","messageId":"1466","endLine":40,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1556","line":121,"column":9,"nodeType":"1465","messageId":"1466","endLine":121,"endColumn":13},{"ruleId":"1480","severity":1,"message":"1481","line":164,"column":42,"nodeType":"1482","messageId":"1483","endLine":164,"endColumn":43},{"ruleId":"1480","severity":1,"message":"1481","line":232,"column":40,"nodeType":"1482","messageId":"1483","endLine":232,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":261,"column":38,"nodeType":"1482","messageId":"1483","endLine":261,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":283,"column":6,"nodeType":"1471","endLine":283,"endColumn":8,"suggestions":"1557"},{"ruleId":"1459","replacedBy":"1558"},{"ruleId":"1461","replacedBy":"1559"},{"ruleId":"1480","severity":1,"message":"1481","line":125,"column":38,"nodeType":"1482","messageId":"1483","endLine":125,"endColumn":39},{"ruleId":"1463","severity":1,"message":"1560","line":138,"column":15,"nodeType":"1465","messageId":"1466","endLine":138,"endColumn":22},{"ruleId":"1469","severity":1,"message":"1484","line":150,"column":6,"nodeType":"1471","endLine":150,"endColumn":8,"suggestions":"1561"},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":17,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":26},{"ruleId":"1463","severity":1,"message":"1475","line":2,"column":10,"nodeType":"1465","messageId":"1466","endLine":2,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1562","line":11,"column":10,"nodeType":"1465","messageId":"1466","endLine":11,"endColumn":23},{"ruleId":"1463","severity":1,"message":"1563","line":11,"column":25,"nodeType":"1465","messageId":"1466","endLine":11,"endColumn":33},{"ruleId":"1463","severity":1,"message":"1564","line":13,"column":10,"nodeType":"1465","messageId":"1466","endLine":13,"endColumn":15},{"ruleId":"1480","severity":1,"message":"1481","line":75,"column":40,"nodeType":"1482","messageId":"1483","endLine":75,"endColumn":41},{"ruleId":"1459","replacedBy":"1565"},{"ruleId":"1461","replacedBy":"1566"},{"ruleId":"1480","severity":1,"message":"1481","line":114,"column":40,"nodeType":"1482","messageId":"1483","endLine":114,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":155,"column":38,"nodeType":"1482","messageId":"1483","endLine":155,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1567","line":178,"column":6,"nodeType":"1471","endLine":178,"endColumn":8,"suggestions":"1568"},{"ruleId":"1463","severity":1,"message":"1513","line":10,"column":8,"nodeType":"1465","messageId":"1466","endLine":10,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1515","line":38,"column":9,"nodeType":"1465","messageId":"1466","endLine":38,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1478","line":39,"column":9,"nodeType":"1465","messageId":"1466","endLine":39,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1569","line":9,"column":8,"nodeType":"1465","messageId":"1466","endLine":9,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1477","line":19,"column":9,"nodeType":"1465","messageId":"1466","endLine":19,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1515","line":20,"column":9,"nodeType":"1465","messageId":"1466","endLine":20,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1478","line":21,"column":9,"nodeType":"1465","messageId":"1466","endLine":21,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1513","line":10,"column":8,"nodeType":"1465","messageId":"1466","endLine":10,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1515","line":38,"column":9,"nodeType":"1465","messageId":"1466","endLine":38,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1478","line":39,"column":9,"nodeType":"1465","messageId":"1466","endLine":39,"endColumn":14},{"ruleId":"1480","severity":1,"message":"1481","line":140,"column":38,"nodeType":"1482","messageId":"1483","endLine":140,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":185,"column":38,"nodeType":"1482","messageId":"1483","endLine":185,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":196,"column":38,"nodeType":"1482","messageId":"1483","endLine":196,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1570","line":221,"column":6,"nodeType":"1471","endLine":221,"endColumn":8,"suggestions":"1571"},{"ruleId":"1480","severity":1,"message":"1481","line":156,"column":38,"nodeType":"1482","messageId":"1483","endLine":156,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":182,"column":38,"nodeType":"1482","messageId":"1483","endLine":182,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":193,"column":38,"nodeType":"1482","messageId":"1483","endLine":193,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1570","line":217,"column":6,"nodeType":"1471","endLine":217,"endColumn":8,"suggestions":"1572"},{"ruleId":"1480","severity":1,"message":"1481","line":140,"column":38,"nodeType":"1482","messageId":"1483","endLine":140,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":184,"column":38,"nodeType":"1482","messageId":"1483","endLine":184,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":195,"column":38,"nodeType":"1482","messageId":"1483","endLine":195,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1570","line":219,"column":6,"nodeType":"1471","endLine":219,"endColumn":8,"suggestions":"1573"},{"ruleId":"1463","severity":1,"message":"1513","line":10,"column":8,"nodeType":"1465","messageId":"1466","endLine":10,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1515","line":38,"column":9,"nodeType":"1465","messageId":"1466","endLine":38,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1478","line":39,"column":9,"nodeType":"1465","messageId":"1466","endLine":39,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1574","line":22,"column":20,"nodeType":"1465","messageId":"1466","endLine":22,"endColumn":32},{"ruleId":"1463","severity":1,"message":"1543","line":55,"column":9,"nodeType":"1465","messageId":"1466","endLine":55,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1575","line":70,"column":10,"nodeType":"1465","messageId":"1466","endLine":70,"endColumn":22},{"ruleId":"1463","severity":1,"message":"1576","line":70,"column":23,"nodeType":"1465","messageId":"1466","endLine":70,"endColumn":38},{"ruleId":"1463","severity":1,"message":"1577","line":74,"column":10,"nodeType":"1465","messageId":"1466","endLine":74,"endColumn":18},{"ruleId":"1480","severity":1,"message":"1481","line":93,"column":38,"nodeType":"1482","messageId":"1483","endLine":93,"endColumn":39},{"ruleId":"1463","severity":1,"message":"1578","line":114,"column":9,"nodeType":"1465","messageId":"1466","endLine":114,"endColumn":21},{"ruleId":"1480","severity":1,"message":"1481","line":132,"column":40,"nodeType":"1482","messageId":"1483","endLine":132,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":169,"column":36,"nodeType":"1482","messageId":"1483","endLine":169,"endColumn":37},{"ruleId":"1480","severity":1,"message":"1481","line":180,"column":36,"nodeType":"1482","messageId":"1483","endLine":180,"endColumn":37},{"ruleId":"1480","severity":1,"message":"1481","line":208,"column":38,"nodeType":"1482","messageId":"1483","endLine":208,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1579","line":228,"column":6,"nodeType":"1471","endLine":228,"endColumn":14,"suggestions":"1580"},{"ruleId":"1463","severity":1,"message":"1543","line":63,"column":9,"nodeType":"1465","messageId":"1466","endLine":63,"endColumn":16},{"ruleId":"1480","severity":1,"message":"1481","line":112,"column":38,"nodeType":"1482","messageId":"1483","endLine":112,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":156,"column":38,"nodeType":"1482","messageId":"1483","endLine":156,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":183,"column":40,"nodeType":"1482","messageId":"1483","endLine":183,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":276,"column":36,"nodeType":"1482","messageId":"1483","endLine":276,"endColumn":37},{"ruleId":"1480","severity":1,"message":"1481","line":287,"column":36,"nodeType":"1482","messageId":"1483","endLine":287,"endColumn":37},{"ruleId":"1480","severity":1,"message":"1481","line":319,"column":38,"nodeType":"1482","messageId":"1483","endLine":319,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1579","line":346,"column":6,"nodeType":"1471","endLine":346,"endColumn":14,"suggestions":"1581"},{"ruleId":"1463","severity":1,"message":"1543","line":61,"column":9,"nodeType":"1465","messageId":"1466","endLine":61,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1582","line":75,"column":10,"nodeType":"1465","messageId":"1466","endLine":75,"endColumn":17},{"ruleId":"1480","severity":1,"message":"1481","line":103,"column":38,"nodeType":"1482","messageId":"1483","endLine":103,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":148,"column":40,"nodeType":"1482","messageId":"1483","endLine":148,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":176,"column":40,"nodeType":"1482","messageId":"1483","endLine":176,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":269,"column":36,"nodeType":"1482","messageId":"1483","endLine":269,"endColumn":37},{"ruleId":"1480","severity":1,"message":"1481","line":280,"column":36,"nodeType":"1482","messageId":"1483","endLine":280,"endColumn":37},{"ruleId":"1480","severity":1,"message":"1481","line":315,"column":38,"nodeType":"1482","messageId":"1483","endLine":315,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1579","line":338,"column":6,"nodeType":"1471","endLine":338,"endColumn":14,"suggestions":"1583"},{"ruleId":"1463","severity":1,"message":"1513","line":10,"column":8,"nodeType":"1465","messageId":"1466","endLine":10,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1477","line":37,"column":9,"nodeType":"1465","messageId":"1466","endLine":37,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1515","line":38,"column":9,"nodeType":"1465","messageId":"1466","endLine":38,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1478","line":39,"column":9,"nodeType":"1465","messageId":"1466","endLine":39,"endColumn":14},{"ruleId":"1480","severity":1,"message":"1481","line":157,"column":38,"nodeType":"1482","messageId":"1483","endLine":157,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":200,"column":38,"nodeType":"1482","messageId":"1483","endLine":200,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":211,"column":38,"nodeType":"1482","messageId":"1483","endLine":211,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":236,"column":6,"nodeType":"1471","endLine":236,"endColumn":8,"suggestions":"1584"},{"ruleId":"1463","severity":1,"message":"1585","line":25,"column":10,"nodeType":"1465","messageId":"1466","endLine":25,"endColumn":25},{"ruleId":"1463","severity":1,"message":"1586","line":26,"column":8,"nodeType":"1465","messageId":"1466","endLine":26,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1587","line":27,"column":8,"nodeType":"1465","messageId":"1466","endLine":27,"endColumn":20},{"ruleId":"1463","severity":1,"message":"1588","line":28,"column":8,"nodeType":"1465","messageId":"1466","endLine":28,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1589","line":30,"column":8,"nodeType":"1465","messageId":"1466","endLine":30,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1543","line":66,"column":9,"nodeType":"1465","messageId":"1466","endLine":66,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1577","line":87,"column":10,"nodeType":"1465","messageId":"1466","endLine":87,"endColumn":18},{"ruleId":"1480","severity":1,"message":"1481","line":106,"column":38,"nodeType":"1482","messageId":"1483","endLine":106,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":147,"column":38,"nodeType":"1482","messageId":"1483","endLine":147,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":180,"column":38,"nodeType":"1482","messageId":"1483","endLine":180,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":236,"column":40,"nodeType":"1482","messageId":"1483","endLine":236,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":274,"column":38,"nodeType":"1482","messageId":"1483","endLine":274,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":305,"column":38,"nodeType":"1482","messageId":"1483","endLine":305,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":338,"column":40,"nodeType":"1482","messageId":"1483","endLine":338,"endColumn":41},{"ruleId":"1469","severity":1,"message":"1579","line":363,"column":6,"nodeType":"1471","endLine":363,"endColumn":14,"suggestions":"1590"},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":17,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":26},{"ruleId":"1463","severity":1,"message":"1475","line":2,"column":10,"nodeType":"1465","messageId":"1466","endLine":2,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1591","line":2,"column":23,"nodeType":"1465","messageId":"1466","endLine":2,"endColumn":34},{"ruleId":"1463","severity":1,"message":"1538","line":5,"column":8,"nodeType":"1465","messageId":"1466","endLine":5,"endColumn":13},{"ruleId":"1463","severity":1,"message":"1477","line":43,"column":9,"nodeType":"1465","messageId":"1466","endLine":43,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1556","line":55,"column":9,"nodeType":"1465","messageId":"1466","endLine":55,"endColumn":13},{"ruleId":"1459","replacedBy":"1592"},{"ruleId":"1461","replacedBy":"1593"},{"ruleId":"1463","severity":1,"message":"1513","line":10,"column":8,"nodeType":"1465","messageId":"1466","endLine":10,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1477","line":36,"column":9,"nodeType":"1465","messageId":"1466","endLine":36,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1515","line":37,"column":9,"nodeType":"1465","messageId":"1466","endLine":37,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1478","line":38,"column":9,"nodeType":"1465","messageId":"1466","endLine":38,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":17,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":26},{"ruleId":"1463","severity":1,"message":"1475","line":2,"column":10,"nodeType":"1465","messageId":"1466","endLine":2,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1594","line":61,"column":10,"nodeType":"1465","messageId":"1466","endLine":61,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1595","line":61,"column":23,"nodeType":"1465","messageId":"1466","endLine":61,"endColumn":37},{"ruleId":"1463","severity":1,"message":"1522","line":62,"column":9,"nodeType":"1465","messageId":"1466","endLine":62,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1596","line":63,"column":9,"nodeType":"1465","messageId":"1466","endLine":63,"endColumn":19},{"ruleId":"1463","severity":1,"message":"1556","line":148,"column":9,"nodeType":"1465","messageId":"1466","endLine":148,"endColumn":13},{"ruleId":"1480","severity":1,"message":"1481","line":193,"column":42,"nodeType":"1482","messageId":"1483","endLine":193,"endColumn":43},{"ruleId":"1480","severity":1,"message":"1481","line":321,"column":38,"nodeType":"1482","messageId":"1483","endLine":321,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":364,"column":40,"nodeType":"1482","messageId":"1483","endLine":364,"endColumn":41},{"ruleId":"1463","severity":1,"message":"1477","line":44,"column":9,"nodeType":"1465","messageId":"1466","endLine":44,"endColumn":16},{"ruleId":"1480","severity":1,"message":"1481","line":85,"column":40,"nodeType":"1482","messageId":"1483","endLine":85,"endColumn":41},{"ruleId":"1469","severity":1,"message":"1597","line":122,"column":6,"nodeType":"1471","endLine":122,"endColumn":8,"suggestions":"1598"},{"ruleId":"1463","severity":1,"message":"1554","line":4,"column":8,"nodeType":"1465","messageId":"1466","endLine":4,"endColumn":20},{"ruleId":"1463","severity":1,"message":"1599","line":7,"column":8,"nodeType":"1465","messageId":"1466","endLine":7,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1600","line":8,"column":8,"nodeType":"1465","messageId":"1466","endLine":8,"endColumn":15},{"ruleId":"1463","severity":1,"message":"1601","line":9,"column":8,"nodeType":"1465","messageId":"1466","endLine":9,"endColumn":11},{"ruleId":"1463","severity":1,"message":"1477","line":16,"column":9,"nodeType":"1465","messageId":"1466","endLine":16,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1543","line":17,"column":9,"nodeType":"1465","messageId":"1466","endLine":17,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1602","line":90,"column":9,"nodeType":"1465","messageId":"1466","endLine":90,"endColumn":20},{"ruleId":"1480","severity":1,"message":"1481","line":121,"column":38,"nodeType":"1482","messageId":"1483","endLine":121,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":132,"column":38,"nodeType":"1482","messageId":"1483","endLine":132,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":157,"column":6,"nodeType":"1471","endLine":157,"endColumn":8,"suggestions":"1603"},{"ruleId":"1463","severity":1,"message":"1513","line":10,"column":8,"nodeType":"1465","messageId":"1466","endLine":10,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1477","line":38,"column":9,"nodeType":"1465","messageId":"1466","endLine":38,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1515","line":39,"column":9,"nodeType":"1465","messageId":"1466","endLine":39,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1478","line":40,"column":9,"nodeType":"1465","messageId":"1466","endLine":40,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1522","line":52,"column":9,"nodeType":"1465","messageId":"1466","endLine":52,"endColumn":18},{"ruleId":"1480","severity":1,"message":"1481","line":151,"column":42,"nodeType":"1482","messageId":"1483","endLine":151,"endColumn":43},{"ruleId":"1480","severity":1,"message":"1481","line":217,"column":40,"nodeType":"1482","messageId":"1483","endLine":217,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":270,"column":38,"nodeType":"1482","messageId":"1483","endLine":270,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":295,"column":6,"nodeType":"1471","endLine":295,"endColumn":8,"suggestions":"1604"},{"ruleId":"1463","severity":1,"message":"1605","line":19,"column":9,"nodeType":"1465","messageId":"1466","endLine":19,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1513","line":10,"column":8,"nodeType":"1465","messageId":"1466","endLine":10,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1477","line":37,"column":9,"nodeType":"1465","messageId":"1466","endLine":37,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1515","line":38,"column":9,"nodeType":"1465","messageId":"1466","endLine":38,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1478","line":39,"column":9,"nodeType":"1465","messageId":"1466","endLine":39,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1554","line":4,"column":8,"nodeType":"1465","messageId":"1466","endLine":4,"endColumn":20},{"ruleId":"1463","severity":1,"message":"1586","line":22,"column":8,"nodeType":"1465","messageId":"1466","endLine":22,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1543","line":33,"column":9,"nodeType":"1465","messageId":"1466","endLine":33,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1606","line":36,"column":17,"nodeType":"1465","messageId":"1466","endLine":36,"endColumn":26},{"ruleId":"1480","severity":1,"message":"1481","line":278,"column":38,"nodeType":"1482","messageId":"1483","endLine":278,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":290,"column":38,"nodeType":"1482","messageId":"1483","endLine":290,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":333,"column":40,"nodeType":"1482","messageId":"1483","endLine":333,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":359,"column":36,"nodeType":"1482","messageId":"1483","endLine":359,"endColumn":37},{"ruleId":"1480","severity":1,"message":"1481","line":421,"column":38,"nodeType":"1482","messageId":"1483","endLine":421,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":432,"column":38,"nodeType":"1482","messageId":"1483","endLine":432,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":458,"column":6,"nodeType":"1471","endLine":458,"endColumn":14,"suggestions":"1607"},{"ruleId":"1463","severity":1,"message":"1477","line":41,"column":9,"nodeType":"1465","messageId":"1466","endLine":41,"endColumn":16},{"ruleId":"1480","severity":1,"message":"1481","line":61,"column":42,"nodeType":"1482","messageId":"1483","endLine":61,"endColumn":43},{"ruleId":"1469","severity":1,"message":"1608","line":83,"column":6,"nodeType":"1471","endLine":83,"endColumn":14,"suggestions":"1609"},{"ruleId":"1463","severity":1,"message":"1477","line":19,"column":9,"nodeType":"1465","messageId":"1466","endLine":19,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1610","line":24,"column":8,"nodeType":"1465","messageId":"1466","endLine":24,"endColumn":29},{"ruleId":"1463","severity":1,"message":"1606","line":28,"column":17,"nodeType":"1465","messageId":"1466","endLine":28,"endColumn":26},{"ruleId":"1480","severity":1,"message":"1481","line":167,"column":38,"nodeType":"1482","messageId":"1483","endLine":167,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":178,"column":38,"nodeType":"1482","messageId":"1483","endLine":178,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":205,"column":6,"nodeType":"1471","endLine":205,"endColumn":8,"suggestions":"1611"},{"ruleId":"1463","severity":1,"message":"1612","line":8,"column":7,"nodeType":"1465","messageId":"1466","endLine":8,"endColumn":16},{"ruleId":"1480","severity":1,"message":"1481","line":58,"column":38,"nodeType":"1482","messageId":"1483","endLine":58,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1613","line":84,"column":6,"nodeType":"1471","endLine":84,"endColumn":8,"suggestions":"1614"},{"ruleId":"1463","severity":1,"message":"1513","line":10,"column":8,"nodeType":"1465","messageId":"1466","endLine":10,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1477","line":37,"column":9,"nodeType":"1465","messageId":"1466","endLine":37,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1515","line":38,"column":9,"nodeType":"1465","messageId":"1466","endLine":38,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1478","line":39,"column":9,"nodeType":"1465","messageId":"1466","endLine":39,"endColumn":14},{"ruleId":"1480","severity":1,"message":"1481","line":130,"column":38,"nodeType":"1482","messageId":"1483","endLine":130,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":175,"column":38,"nodeType":"1482","messageId":"1483","endLine":175,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":199,"column":6,"nodeType":"1471","endLine":199,"endColumn":8,"suggestions":"1615"},{"ruleId":"1463","severity":1,"message":"1616","line":11,"column":9,"nodeType":"1465","messageId":"1466","endLine":11,"endColumn":13},{"ruleId":"1463","severity":1,"message":"1543","line":61,"column":9,"nodeType":"1465","messageId":"1466","endLine":61,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1582","line":68,"column":10,"nodeType":"1465","messageId":"1466","endLine":68,"endColumn":17},{"ruleId":"1463","severity":1,"message":"1617","line":68,"column":19,"nodeType":"1465","messageId":"1466","endLine":68,"endColumn":29},{"ruleId":"1463","severity":1,"message":"1577","line":78,"column":10,"nodeType":"1465","messageId":"1466","endLine":78,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1618","line":78,"column":20,"nodeType":"1465","messageId":"1466","endLine":78,"endColumn":31},{"ruleId":"1480","severity":1,"message":"1481","line":112,"column":38,"nodeType":"1482","messageId":"1483","endLine":112,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":156,"column":38,"nodeType":"1482","messageId":"1483","endLine":156,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":185,"column":40,"nodeType":"1482","messageId":"1483","endLine":185,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":229,"column":36,"nodeType":"1482","messageId":"1483","endLine":229,"endColumn":37},{"ruleId":"1480","severity":1,"message":"1481","line":278,"column":38,"nodeType":"1482","messageId":"1483","endLine":278,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1619","line":308,"column":6,"nodeType":"1471","endLine":308,"endColumn":14,"suggestions":"1620"},{"ruleId":"1463","severity":1,"message":"1621","line":1,"column":17,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":26},{"ruleId":"1506","severity":1,"message":"1507","line":18,"column":16,"nodeType":"1508","endLine":18,"endColumn":43},{"ruleId":"1506","severity":1,"message":"1507","line":26,"column":18,"nodeType":"1508","endLine":26,"endColumn":92},{"ruleId":"1480","severity":1,"message":"1481","line":143,"column":38,"nodeType":"1482","messageId":"1483","endLine":143,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":167,"column":6,"nodeType":"1471","endLine":167,"endColumn":8,"suggestions":"1622"},{"ruleId":"1463","severity":1,"message":"1502","line":4,"column":10,"nodeType":"1465","messageId":"1466","endLine":4,"endColumn":19},{"ruleId":"1623","severity":1,"message":"1624","line":19,"column":5,"nodeType":"1625","messageId":"1626","endLine":21,"endColumn":6},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":17,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":26},{"ruleId":"1463","severity":1,"message":"1627","line":1,"column":28,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":36},{"ruleId":"1463","severity":1,"message":"1475","line":2,"column":10,"nodeType":"1465","messageId":"1466","endLine":2,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1538","line":5,"column":8,"nodeType":"1465","messageId":"1466","endLine":5,"endColumn":13},{"ruleId":"1463","severity":1,"message":"1513","line":10,"column":8,"nodeType":"1465","messageId":"1466","endLine":10,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1477","line":48,"column":9,"nodeType":"1465","messageId":"1466","endLine":48,"endColumn":16},{"ruleId":"1463","severity":1,"message":"1478","line":49,"column":9,"nodeType":"1465","messageId":"1466","endLine":49,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1628","line":2,"column":8,"nodeType":"1465","messageId":"1466","endLine":2,"endColumn":13},{"ruleId":"1480","severity":1,"message":"1481","line":20,"column":46,"nodeType":"1482","messageId":"1483","endLine":20,"endColumn":47},{"ruleId":"1480","severity":1,"message":"1481","line":50,"column":44,"nodeType":"1482","messageId":"1483","endLine":50,"endColumn":45},{"ruleId":"1480","severity":1,"message":"1481","line":75,"column":42,"nodeType":"1482","messageId":"1483","endLine":75,"endColumn":43},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":17,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":26},{"ruleId":"1463","severity":1,"message":"1629","line":17,"column":12,"nodeType":"1465","messageId":"1466","endLine":17,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1630","line":17,"column":19,"nodeType":"1465","messageId":"1466","endLine":17,"endColumn":28},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":17,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":26},{"ruleId":"1463","severity":1,"message":"1475","line":2,"column":10,"nodeType":"1465","messageId":"1466","endLine":2,"endColumn":21},{"ruleId":"1480","severity":1,"message":"1481","line":181,"column":40,"nodeType":"1482","messageId":"1483","endLine":181,"endColumn":41},{"ruleId":"1463","severity":1,"message":"1513","line":2,"column":8,"nodeType":"1465","messageId":"1466","endLine":2,"endColumn":14},{"ruleId":"1463","severity":1,"message":"1631","line":5,"column":11,"nodeType":"1465","messageId":"1466","endLine":5,"endColumn":19},{"ruleId":"1459","replacedBy":"1632"},{"ruleId":"1461","replacedBy":"1633"},{"ruleId":"1463","severity":1,"message":"1475","line":2,"column":10,"nodeType":"1465","messageId":"1466","endLine":2,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1634","line":20,"column":8,"nodeType":"1465","messageId":"1466","endLine":20,"endColumn":23},{"ruleId":"1463","severity":1,"message":"1522","line":43,"column":9,"nodeType":"1465","messageId":"1466","endLine":43,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1596","line":44,"column":9,"nodeType":"1465","messageId":"1466","endLine":44,"endColumn":19},{"ruleId":"1463","severity":1,"message":"1635","line":49,"column":25,"nodeType":"1465","messageId":"1466","endLine":49,"endColumn":34},{"ruleId":"1463","severity":1,"message":"1636","line":51,"column":10,"nodeType":"1465","messageId":"1466","endLine":51,"endColumn":21},{"ruleId":"1463","severity":1,"message":"1637","line":52,"column":10,"nodeType":"1465","messageId":"1466","endLine":52,"endColumn":27},{"ruleId":"1463","severity":1,"message":"1638","line":55,"column":10,"nodeType":"1465","messageId":"1466","endLine":55,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1639","line":56,"column":10,"nodeType":"1465","messageId":"1466","endLine":56,"endColumn":22},{"ruleId":"1463","severity":1,"message":"1640","line":78,"column":9,"nodeType":"1465","messageId":"1466","endLine":78,"endColumn":26},{"ruleId":"1480","severity":1,"message":"1481","line":131,"column":40,"nodeType":"1482","messageId":"1483","endLine":131,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":214,"column":38,"nodeType":"1482","messageId":"1483","endLine":214,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1641","line":240,"column":6,"nodeType":"1471","endLine":240,"endColumn":8,"suggestions":"1642"},{"ruleId":"1463","severity":1,"message":"1522","line":36,"column":9,"nodeType":"1465","messageId":"1466","endLine":36,"endColumn":18},{"ruleId":"1463","severity":1,"message":"1596","line":37,"column":9,"nodeType":"1465","messageId":"1466","endLine":37,"endColumn":19},{"ruleId":"1480","severity":1,"message":"1481","line":91,"column":40,"nodeType":"1482","messageId":"1483","endLine":91,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":129,"column":38,"nodeType":"1482","messageId":"1483","endLine":129,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":139,"column":38,"nodeType":"1482","messageId":"1483","endLine":139,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1643","line":171,"column":6,"nodeType":"1471","endLine":171,"endColumn":14,"suggestions":"1644"},{"ruleId":"1480","severity":1,"message":"1481","line":138,"column":38,"nodeType":"1482","messageId":"1483","endLine":138,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":192,"column":38,"nodeType":"1482","messageId":"1483","endLine":192,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":218,"column":6,"nodeType":"1471","endLine":218,"endColumn":14,"suggestions":"1645"},{"ruleId":"1463","severity":1,"message":"1646","line":20,"column":9,"nodeType":"1465","messageId":"1466","endLine":20,"endColumn":19},{"ruleId":"1480","severity":1,"message":"1481","line":35,"column":38,"nodeType":"1482","messageId":"1483","endLine":35,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1647","line":58,"column":6,"nodeType":"1471","endLine":58,"endColumn":8,"suggestions":"1648"},{"ruleId":"1463","severity":1,"message":"1543","line":27,"column":9,"nodeType":"1465","messageId":"1466","endLine":27,"endColumn":16},{"ruleId":"1480","severity":1,"message":"1481","line":146,"column":38,"nodeType":"1482","messageId":"1483","endLine":146,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":201,"column":38,"nodeType":"1482","messageId":"1483","endLine":201,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":224,"column":6,"nodeType":"1471","endLine":224,"endColumn":14,"suggestions":"1649"},{"ruleId":"1463","severity":1,"message":"1474","line":1,"column":17,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":26},{"ruleId":"1463","severity":1,"message":"1475","line":2,"column":10,"nodeType":"1465","messageId":"1466","endLine":2,"endColumn":21},{"ruleId":"1480","severity":1,"message":"1481","line":198,"column":40,"nodeType":"1482","messageId":"1483","endLine":198,"endColumn":41},{"ruleId":"1463","severity":1,"message":"1628","line":1,"column":8,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":13},{"ruleId":"1480","severity":1,"message":"1481","line":34,"column":38,"nodeType":"1482","messageId":"1483","endLine":34,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":31,"column":38,"nodeType":"1482","messageId":"1483","endLine":31,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":29,"column":38,"nodeType":"1482","messageId":"1483","endLine":29,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1647","line":52,"column":6,"nodeType":"1471","endLine":52,"endColumn":8,"suggestions":"1650"},{"ruleId":"1463","severity":1,"message":"1554","line":4,"column":8,"nodeType":"1465","messageId":"1466","endLine":4,"endColumn":20},{"ruleId":"1480","severity":1,"message":"1481","line":141,"column":38,"nodeType":"1482","messageId":"1483","endLine":141,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":152,"column":38,"nodeType":"1482","messageId":"1483","endLine":152,"endColumn":39},{"ruleId":"1469","severity":1,"message":"1484","line":177,"column":6,"nodeType":"1471","endLine":177,"endColumn":8,"suggestions":"1651"},{"ruleId":"1480","severity":1,"message":"1481","line":112,"column":38,"nodeType":"1482","messageId":"1483","endLine":112,"endColumn":39},{"ruleId":"1480","severity":1,"message":"1481","line":145,"column":40,"nodeType":"1482","messageId":"1483","endLine":145,"endColumn":41},{"ruleId":"1480","severity":1,"message":"1481","line":179,"column":40,"nodeType":"1482","messageId":"1483","endLine":179,"endColumn":41},{"ruleId":"1469","severity":1,"message":"1536","line":205,"column":6,"nodeType":"1471","endLine":205,"endColumn":14,"suggestions":"1652"},{"ruleId":"1506","severity":1,"message":"1507","line":225,"column":31,"nodeType":"1508","endLine":225,"endColumn":109},{"ruleId":"1463","severity":1,"message":"1621","line":1,"column":18,"nodeType":"1465","messageId":"1466","endLine":1,"endColumn":27},"no-native-reassign",["1653"],"no-negated-in-lhs",["1654"],"no-unused-vars","'lightHoverStyle' is defined but never used.","Identifier","unusedVar",["1653"],["1654"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'mainPanel'. Either include it or remove the dependency array.","ArrayExpression",["1655"],"'deleteApart' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'Tasks' is defined but never used.","'classes' is assigned a value but never used.","'token' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["1656"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","'addUser' is defined but never used.","'deleteUser' is defined but never used.","'dispatch' is assigned a value but never used.","'open' is assigned a value but never used.","'content' is assigned a value but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'CardFooter' is defined but never used.","'avatar' is defined but never used.","'notifications' is defined but never used.",["1653"],["1654"],"'messaging' is defined but never used.","'LoginContainer' is assigned a value but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["1657"],["1658"],["1653"],["1654"],"'Button' is defined but never used.","'CardAvatar' is defined but never used.","'userInfo' is assigned a value but never used.","'CustomInput' is defined but never used.",["1659"],["1653"],["1654"],"'checkUser' is defined but never used.","'setContent' is assigned a value but never used.","'nameCheck' is assigned a value but never used.",["1653"],["1654"],["1653"],["1654"],["1653"],["1654"],["1653"],["1654"],["1660"],["1661"],"'calFilter' is defined but never used.","React Hook useEffect has missing dependencies: 'selectMonth', 'selectYear', and 'token'. Either include them or remove the dependency array.",["1662"],"React Hook useEffect has missing dependencies: 'getUrl', 'id', and 'token'. Either include them or remove the dependency array.",["1663"],"'Alert' is defined but never used.",["1664"],["1665"],"'type' is defined but never used.","'currentMonth' is assigned a value but never used.","'history' is assigned a value but never used.","'setSelectType' is assigned a value but never used.",["1666"],["1667"],["1653"],["1654"],["1668"],"React Hook useEffect has missing dependencies: 'getTokenApart', 'getUrl', 'id', and 'token'. Either include them or remove the dependency array.",["1669"],"React Hook useEffect has missing dependencies: 'bill_id', 'checkTime', 'getToken_device', and 'token'. Either include them or remove the dependency array.",["1670"],"'CustomButton' is defined but never used.",["1671"],"'data' is assigned a value but never used.",["1672"],["1653"],["1654"],"'result1' is assigned a value but never used.",["1673"],"'directionList' is defined but never used.","'typeList' is defined but never used.","'Block' is defined but never used.",["1653"],["1654"],"React Hook useEffect has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.",["1674"],"'GridContainer' is defined but never used.","React Hook useEffect has missing dependencies: 'status', 'token', and 'type'. Either include them or remove the dependency array.",["1675"],["1676"],["1677"],"'returnStatus' is defined but never used.","'commentImage' is assigned a value but never used.","'setCommentImage' is assigned a value but never used.","'selected' is assigned a value but never used.","'renderButton' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUrl', 'getUserAndApart', 'notice_id', and 'token'. Either include them or remove the dependency array.",["1678"],["1679"],"'isError' is assigned a value but never used.",["1680"],["1681"],"'CopyToClipboard' is defined but never used.","'IconButton' is defined but never used.","'FileCopyIcon' is defined but never used.","'SearchIcon' is defined but never used.","'Search' is defined but never used.",["1682"],"'useSelector' is defined but never used.",["1653"],["1654"],"'contentList' is assigned a value but never used.","'setContentList' is assigned a value but never used.","'phoneCheck' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'apart_id', 'getBlock', 'getUrl', 'getUser', and 'token'. Either include them or remove the dependency array.",["1683"],"'EditIcon' is defined but never used.","'Tooltip' is defined but never used.","'Fab' is defined but never used.","'handleClick' is assigned a value but never used.",["1684"],["1685"],"'returnStatus' is assigned a value but never used.","'setIsLoad' is assigned a value but never used.",["1686"],"React Hook useEffect has missing dependencies: 'draw_date', 'service_id', and 'token'. Either include them or remove the dependency array.",["1687"],"'PushNotificationAdmin' is assigned a value but never used.",["1688"],"'useStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleCloseLoading', 'handleOpenLoading', 'handleOpenSnackBar', 'setBlock', and 'token'. Either include them or remove the dependency array.",["1689"],["1690"],"'date' is assigned a value but never used.","'setIsError' is assigned a value but never used.","'setSelected' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUrl', 'getUser', 'id', and 'token'. Either include them or remove the dependency array.",["1691"],"'Component' is defined but never used.",["1692"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useState' is defined but never used.","'React' is defined but never used.","'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","'isActive' is assigned a value but never used.",["1653"],["1654"],"'SearchTextField' is defined but never used.","'blockList' is assigned a value but never used.","'alertStatus' is assigned a value but never used.","'alertUserSelected' is assigned a value but never used.","'userList' is assigned a value but never used.","'userSelected' is assigned a value but never used.","'checkUserSelected' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setIsHandle' and 'token'. Either include them or remove the dependency array.",["1693"],"React Hook useEffect has missing dependencies: 'handleCloseLoading', 'handleOpenLoading', 'id', and 'token'. Either include them or remove the dependency array.",["1694"],["1695"],"'returnType' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleCloseLoading', 'handleOpenLoading', 'handleOpenSnackBar', and 'token'. Either include them or remove the dependency array.",["1696"],["1697"],["1698"],["1699"],["1700"],"no-global-assign","no-unsafe-negation",{"desc":"1701","fix":"1702"},{"desc":"1703","fix":"1704"},{"desc":"1701","fix":"1705"},{"desc":"1703","fix":"1706"},{"desc":"1707","fix":"1708"},{"desc":"1707","fix":"1709"},{"desc":"1707","fix":"1710"},{"desc":"1711","fix":"1712"},{"desc":"1713","fix":"1714"},{"desc":"1711","fix":"1715"},{"desc":"1711","fix":"1716"},{"desc":"1717","fix":"1718"},{"desc":"1719","fix":"1720"},{"desc":"1721","fix":"1722"},{"desc":"1723","fix":"1724"},{"desc":"1725","fix":"1726"},{"desc":"1719","fix":"1727"},{"desc":"1719","fix":"1728"},{"desc":"1719","fix":"1729"},{"desc":"1730","fix":"1731"},{"desc":"1732","fix":"1733"},{"desc":"1732","fix":"1734"},{"desc":"1732","fix":"1735"},{"desc":"1736","fix":"1737"},{"desc":"1736","fix":"1738"},{"desc":"1736","fix":"1739"},{"desc":"1719","fix":"1740"},{"desc":"1736","fix":"1741"},{"desc":"1742","fix":"1743"},{"desc":"1719","fix":"1744"},{"desc":"1719","fix":"1745"},{"desc":"1707","fix":"1746"},{"desc":"1747","fix":"1748"},{"desc":"1719","fix":"1749"},{"desc":"1750","fix":"1751"},{"desc":"1719","fix":"1752"},{"desc":"1753","fix":"1754"},{"desc":"1719","fix":"1755"},{"desc":"1756","fix":"1757"},{"desc":"1758","fix":"1759"},{"desc":"1707","fix":"1760"},{"desc":"1761","fix":"1762"},{"desc":"1707","fix":"1763"},{"desc":"1761","fix":"1764"},{"desc":"1719","fix":"1765"},{"desc":"1713","fix":"1766"},"Update the dependencies array to be: [mainPanel]",{"range":"1767","text":"1768"},"Update the dependencies array to be: [token, url]",{"range":"1769","text":"1770"},{"range":"1771","text":"1768"},{"range":"1772","text":"1770"},"Update the dependencies array to be: [reload, token]",{"range":"1773","text":"1774"},{"range":"1775","text":"1774"},{"range":"1776","text":"1774"},"Update the dependencies array to be: [reLoad, selectMonth, selectYear, token]",{"range":"1777","text":"1778"},"Update the dependencies array to be: [getUrl, id, reload, token]",{"range":"1779","text":"1780"},{"range":"1781","text":"1778"},{"range":"1782","text":"1778"},"Update the dependencies array to be: [reLoad, reload2, selectMonth, selectYear, token]",{"range":"1783","text":"1784"},"Update the dependencies array to be: [token]",{"range":"1785","text":"1786"},"Update the dependencies array to be: [reload, selectMonth, selectYear, token]",{"range":"1787","text":"1788"},"Update the dependencies array to be: [getTokenApart, getUrl, id, reload, token]",{"range":"1789","text":"1790"},"Update the dependencies array to be: [bill_id, checkTime, getToken_device, reload, token]",{"range":"1791","text":"1792"},{"range":"1793","text":"1786"},{"range":"1794","text":"1786"},{"range":"1795","text":"1786"},"Update the dependencies array to be: [id, token]",{"range":"1796","text":"1797"},"Update the dependencies array to be: [status, token, type]",{"range":"1798","text":"1799"},{"range":"1800","text":"1799"},{"range":"1801","text":"1799"},"Update the dependencies array to be: [getUrl, getUserAndApart, notice_id, reload, token]",{"range":"1802","text":"1803"},{"range":"1804","text":"1803"},{"range":"1805","text":"1803"},{"range":"1806","text":"1786"},{"range":"1807","text":"1803"},"Update the dependencies array to be: [apart_id, getBlock, getUrl, getUser, token]",{"range":"1808","text":"1809"},{"range":"1810","text":"1786"},{"range":"1811","text":"1786"},{"range":"1812","text":"1774"},"Update the dependencies array to be: [draw_date, reload, service_id, token]",{"range":"1813","text":"1814"},{"range":"1815","text":"1786"},"Update the dependencies array to be: [handleCloseLoading, handleOpenLoading, handleOpenSnackBar, setBlock, token]",{"range":"1816","text":"1817"},{"range":"1818","text":"1786"},"Update the dependencies array to be: [getUrl, getUser, id, reload, token]",{"range":"1819","text":"1820"},{"range":"1821","text":"1786"},"Update the dependencies array to be: [setIsHandle, token]",{"range":"1822","text":"1823"},"Update the dependencies array to be: [handleCloseLoading, handleOpenLoading, id, reload, token]",{"range":"1824","text":"1825"},{"range":"1826","text":"1774"},"Update the dependencies array to be: [handleCloseLoading, handleOpenLoading, handleOpenSnackBar, token]",{"range":"1827","text":"1828"},{"range":"1829","text":"1774"},{"range":"1830","text":"1828"},{"range":"1831","text":"1786"},{"range":"1832","text":"1780"},[2537,2539],"[mainPanel]",[1888,1893],"[token, url]",[2636,2638],[1888,1893],[6404,6412],"[reload, token]",[6097,6105],[8514,8522],[4948,4956],"[reLoad, selectMonth, selectYear, token]",[4790,4798],"[getUrl, id, reload, token]",[4856,4864],[5200,5208],[9004,9020],"[reLoad, reload2, selectMonth, selectYear, token]",[4428,4430],"[token]",[5206,5214],"[reload, selectMonth, selectYear, token]",[10961,10969],"[getTokenApart, getUrl, id, reload, token]",[8983,8991],"[bill_id, checkTime, getToken_device, reload, token]",[4798,4800],[8443,8445],[3979,3981],[5355,5357],"[id, token]",[5951,5953],"[status, token, type]",[5883,5885],[5819,5821],[6652,6660],"[getUrl, getUserAndApart, notice_id, reload, token]",[10157,10165],[9576,9584],[6049,6051],[10765,10773],[3935,3937],"[apart_id, getBlock, getUrl, getUser, token]",[4450,4452],[8715,8717],[13029,13037],[2788,2796],"[draw_date, reload, service_id, token]",[5083,5085],[2345,2347],"[handleCloseLoading, handleOpenLoading, handleOpenSnackBar, setBlock, token]",[5018,5020],[8809,8817],"[getUrl, getUser, id, reload, token]",[4302,4304],[7266,7268],"[setIsHandle, token]",[5310,5318],"[handleCloseLoading, handleOpenLoading, id, reload, token]",[5985,5993],[1721,1723],"[handleCloseLoading, handleOpenLoading, handleOpenSnackBar, token]",[6159,6167],[1635,1637],[4748,4750],[6090,6098]]